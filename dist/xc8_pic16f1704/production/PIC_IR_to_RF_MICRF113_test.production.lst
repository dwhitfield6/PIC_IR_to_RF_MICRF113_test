

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Mar 17 16:25:43 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1704
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x320,16
    49                           	dabs	1,0x2A0,80
    50                           	dabs	1,0x240,48
    51                           	dabs	1,0x2160,0,_IRRawCode
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000E                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  008C                     	;# 
    80  008E                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010E                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011C                     	;# 
   108  018C                     	;# 
   109  018E                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028E                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0293                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  029A                     	;# 
   174  029E                     	;# 
   175  030C                     	;# 
   176  030E                     	;# 
   177  038C                     	;# 
   178  038E                     	;# 
   179  0391                     	;# 
   180  0392                     	;# 
   181  0393                     	;# 
   182  0397                     	;# 
   183  0398                     	;# 
   184  0399                     	;# 
   185  0415                     	;# 
   186  0416                     	;# 
   187  0417                     	;# 
   188  041C                     	;# 
   189  041D                     	;# 
   190  041E                     	;# 
   191  0511                     	;# 
   192  0515                     	;# 
   193  0617                     	;# 
   194  0618                     	;# 
   195  0619                     	;# 
   196  0619                     	;# 
   197  061A                     	;# 
   198  061B                     	;# 
   199  061C                     	;# 
   200  061C                     	;# 
   201  0691                     	;# 
   202  0692                     	;# 
   203  0693                     	;# 
   204  0694                     	;# 
   205  0695                     	;# 
   206  0696                     	;# 
   207  0697                     	;# 
   208  0698                     	;# 
   209  0699                     	;# 
   210  069A                     	;# 
   211  069B                     	;# 
   212  069C                     	;# 
   213  069D                     	;# 
   214  069E                     	;# 
   215  069F                     	;# 
   216  0E0F                     	;# 
   217  0E10                     	;# 
   218  0E11                     	;# 
   219  0E12                     	;# 
   220  0E13                     	;# 
   221  0E14                     	;# 
   222  0E15                     	;# 
   223  0E17                     	;# 
   224  0E20                     	;# 
   225  0E21                     	;# 
   226  0E22                     	;# 
   227  0E24                     	;# 
   228  0E25                     	;# 
   229  0E28                     	;# 
   230  0E29                     	;# 
   231  0E2A                     	;# 
   232  0E2B                     	;# 
   233  0E90                     	;# 
   234  0E91                     	;# 
   235  0E92                     	;# 
   236  0E94                     	;# 
   237  0E95                     	;# 
   238  0EA0                     	;# 
   239  0EA1                     	;# 
   240  0EA2                     	;# 
   241  0EA3                     	;# 
   242  0EA4                     	;# 
   243  0EA5                     	;# 
   244  0F0F                     	;# 
   245  0F10                     	;# 
   246  0F11                     	;# 
   247  0F12                     	;# 
   248  0F13                     	;# 
   249  0F14                     	;# 
   250  0F15                     	;# 
   251  0F16                     	;# 
   252  0F17                     	;# 
   253  0F18                     	;# 
   254  0F19                     	;# 
   255  0F1A                     	;# 
   256  0F1B                     	;# 
   257  0F1C                     	;# 
   258  0F1D                     	;# 
   259  0F1E                     	;# 
   260  0F1F                     	;# 
   261  0F20                     	;# 
   262  0F21                     	;# 
   263  0F22                     	;# 
   264  0F23                     	;# 
   265  0F24                     	;# 
   266  0F25                     	;# 
   267  0F26                     	;# 
   268  0F27                     	;# 
   269  0F28                     	;# 
   270  0F29                     	;# 
   271  0F2A                     	;# 
   272  0F2B                     	;# 
   273  0F2C                     	;# 
   274  0F2D                     	;# 
   275  0FE4                     	;# 
   276  0FE5                     	;# 
   277  0FE6                     	;# 
   278  0FE7                     	;# 
   279  0FE8                     	;# 
   280  0FE9                     	;# 
   281  0FEA                     	;# 
   282  0FEB                     	;# 
   283  0FED                     	;# 
   284  0FEE                     	;# 
   285  0FEF                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000E                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  008C                     	;# 
   313  008E                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  009F                     	;# 
   329  010C                     	;# 
   330  010E                     	;# 
   331  0111                     	;# 
   332  0112                     	;# 
   333  0113                     	;# 
   334  0114                     	;# 
   335  0115                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  0118                     	;# 
   339  0119                     	;# 
   340  011C                     	;# 
   341  018C                     	;# 
   342  018E                     	;# 
   343  0191                     	;# 
   344  0191                     	;# 
   345  0192                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0197                     	;# 
   352  0199                     	;# 
   353  0199                     	;# 
   354  0199                     	;# 
   355  019A                     	;# 
   356  019A                     	;# 
   357  019A                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019C                     	;# 
   364  019C                     	;# 
   365  019C                     	;# 
   366  019D                     	;# 
   367  019D                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019E                     	;# 
   371  019E                     	;# 
   372  019F                     	;# 
   373  019F                     	;# 
   374  019F                     	;# 
   375  019F                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  020E                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  028C                     	;# 
   396  028E                     	;# 
   397  0291                     	;# 
   398  0291                     	;# 
   399  0292                     	;# 
   400  0293                     	;# 
   401  0293                     	;# 
   402  0298                     	;# 
   403  0298                     	;# 
   404  0299                     	;# 
   405  029A                     	;# 
   406  029A                     	;# 
   407  029E                     	;# 
   408  030C                     	;# 
   409  030E                     	;# 
   410  038C                     	;# 
   411  038E                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0397                     	;# 
   416  0398                     	;# 
   417  0399                     	;# 
   418  0415                     	;# 
   419  0416                     	;# 
   420  0417                     	;# 
   421  041C                     	;# 
   422  041D                     	;# 
   423  041E                     	;# 
   424  0511                     	;# 
   425  0515                     	;# 
   426  0617                     	;# 
   427  0618                     	;# 
   428  0619                     	;# 
   429  0619                     	;# 
   430  061A                     	;# 
   431  061B                     	;# 
   432  061C                     	;# 
   433  061C                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  0695                     	;# 
   439  0696                     	;# 
   440  0697                     	;# 
   441  0698                     	;# 
   442  0699                     	;# 
   443  069A                     	;# 
   444  069B                     	;# 
   445  069C                     	;# 
   446  069D                     	;# 
   447  069E                     	;# 
   448  069F                     	;# 
   449  0E0F                     	;# 
   450  0E10                     	;# 
   451  0E11                     	;# 
   452  0E12                     	;# 
   453  0E13                     	;# 
   454  0E14                     	;# 
   455  0E15                     	;# 
   456  0E17                     	;# 
   457  0E20                     	;# 
   458  0E21                     	;# 
   459  0E22                     	;# 
   460  0E24                     	;# 
   461  0E25                     	;# 
   462  0E28                     	;# 
   463  0E29                     	;# 
   464  0E2A                     	;# 
   465  0E2B                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E94                     	;# 
   470  0E95                     	;# 
   471  0EA0                     	;# 
   472  0EA1                     	;# 
   473  0EA2                     	;# 
   474  0EA3                     	;# 
   475  0EA4                     	;# 
   476  0EA5                     	;# 
   477  0F0F                     	;# 
   478  0F10                     	;# 
   479  0F11                     	;# 
   480  0F12                     	;# 
   481  0F13                     	;# 
   482  0F14                     	;# 
   483  0F15                     	;# 
   484  0F16                     	;# 
   485  0F17                     	;# 
   486  0F18                     	;# 
   487  0F19                     	;# 
   488  0F1A                     	;# 
   489  0F1B                     	;# 
   490  0F1C                     	;# 
   491  0F1D                     	;# 
   492  0F1E                     	;# 
   493  0F1F                     	;# 
   494  0F20                     	;# 
   495  0F21                     	;# 
   496  0F22                     	;# 
   497  0F23                     	;# 
   498  0F24                     	;# 
   499  0F25                     	;# 
   500  0F26                     	;# 
   501  0F27                     	;# 
   502  0F28                     	;# 
   503  0F29                     	;# 
   504  0F2A                     	;# 
   505  0F2B                     	;# 
   506  0F2C                     	;# 
   507  0F2D                     	;# 
   508  0FE4                     	;# 
   509  0FE5                     	;# 
   510  0FE6                     	;# 
   511  0FE7                     	;# 
   512  0FE8                     	;# 
   513  0FE9                     	;# 
   514  0FEA                     	;# 
   515  0FEB                     	;# 
   516  0FED                     	;# 
   517  0FEE                     	;# 
   518  0FEF                     	;# 
   519  0000                     	;# 
   520  0001                     	;# 
   521  0002                     	;# 
   522  0003                     	;# 
   523  0004                     	;# 
   524  0005                     	;# 
   525  0006                     	;# 
   526  0007                     	;# 
   527  0008                     	;# 
   528  0009                     	;# 
   529  000A                     	;# 
   530  000B                     	;# 
   531  000C                     	;# 
   532  000E                     	;# 
   533  0011                     	;# 
   534  0012                     	;# 
   535  0013                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  008C                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011C                     	;# 
   574  018C                     	;# 
   575  018E                     	;# 
   576  0191                     	;# 
   577  0191                     	;# 
   578  0192                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0197                     	;# 
   585  0199                     	;# 
   586  0199                     	;# 
   587  0199                     	;# 
   588  019A                     	;# 
   589  019A                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019C                     	;# 
   599  019D                     	;# 
   600  019D                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019E                     	;# 
   604  019E                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  020C                     	;# 
   611  020E                     	;# 
   612  0211                     	;# 
   613  0211                     	;# 
   614  0212                     	;# 
   615  0212                     	;# 
   616  0213                     	;# 
   617  0213                     	;# 
   618  0214                     	;# 
   619  0214                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  028C                     	;# 
   629  028E                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0293                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029A                     	;# 
   640  029E                     	;# 
   641  030C                     	;# 
   642  030E                     	;# 
   643  038C                     	;# 
   644  038E                     	;# 
   645  0391                     	;# 
   646  0392                     	;# 
   647  0393                     	;# 
   648  0397                     	;# 
   649  0398                     	;# 
   650  0399                     	;# 
   651  0415                     	;# 
   652  0416                     	;# 
   653  0417                     	;# 
   654  041C                     	;# 
   655  041D                     	;# 
   656  041E                     	;# 
   657  0511                     	;# 
   658  0515                     	;# 
   659  0617                     	;# 
   660  0618                     	;# 
   661  0619                     	;# 
   662  0619                     	;# 
   663  061A                     	;# 
   664  061B                     	;# 
   665  061C                     	;# 
   666  061C                     	;# 
   667  0691                     	;# 
   668  0692                     	;# 
   669  0693                     	;# 
   670  0694                     	;# 
   671  0695                     	;# 
   672  0696                     	;# 
   673  0697                     	;# 
   674  0698                     	;# 
   675  0699                     	;# 
   676  069A                     	;# 
   677  069B                     	;# 
   678  069C                     	;# 
   679  069D                     	;# 
   680  069E                     	;# 
   681  069F                     	;# 
   682  0E0F                     	;# 
   683  0E10                     	;# 
   684  0E11                     	;# 
   685  0E12                     	;# 
   686  0E13                     	;# 
   687  0E14                     	;# 
   688  0E15                     	;# 
   689  0E17                     	;# 
   690  0E20                     	;# 
   691  0E21                     	;# 
   692  0E22                     	;# 
   693  0E24                     	;# 
   694  0E25                     	;# 
   695  0E28                     	;# 
   696  0E29                     	;# 
   697  0E2A                     	;# 
   698  0E2B                     	;# 
   699  0E90                     	;# 
   700  0E91                     	;# 
   701  0E92                     	;# 
   702  0E94                     	;# 
   703  0E95                     	;# 
   704  0EA0                     	;# 
   705  0EA1                     	;# 
   706  0EA2                     	;# 
   707  0EA3                     	;# 
   708  0EA4                     	;# 
   709  0EA5                     	;# 
   710  0F0F                     	;# 
   711  0F10                     	;# 
   712  0F11                     	;# 
   713  0F12                     	;# 
   714  0F13                     	;# 
   715  0F14                     	;# 
   716  0F15                     	;# 
   717  0F16                     	;# 
   718  0F17                     	;# 
   719  0F18                     	;# 
   720  0F19                     	;# 
   721  0F1A                     	;# 
   722  0F1B                     	;# 
   723  0F1C                     	;# 
   724  0F1D                     	;# 
   725  0F1E                     	;# 
   726  0F1F                     	;# 
   727  0F20                     	;# 
   728  0F21                     	;# 
   729  0F22                     	;# 
   730  0F23                     	;# 
   731  0F24                     	;# 
   732  0F25                     	;# 
   733  0F26                     	;# 
   734  0F27                     	;# 
   735  0F28                     	;# 
   736  0F29                     	;# 
   737  0F2A                     	;# 
   738  0F2B                     	;# 
   739  0F2C                     	;# 
   740  0F2D                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752  0000                     	;# 
   753  0001                     	;# 
   754  0002                     	;# 
   755  0003                     	;# 
   756  0004                     	;# 
   757  0005                     	;# 
   758  0006                     	;# 
   759  0007                     	;# 
   760  0008                     	;# 
   761  0009                     	;# 
   762  000A                     	;# 
   763  000B                     	;# 
   764  000C                     	;# 
   765  000E                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0013                     	;# 
   769  0015                     	;# 
   770  0016                     	;# 
   771  0016                     	;# 
   772  0017                     	;# 
   773  0018                     	;# 
   774  0019                     	;# 
   775  001A                     	;# 
   776  001B                     	;# 
   777  001C                     	;# 
   778  008C                     	;# 
   779  008E                     	;# 
   780  0091                     	;# 
   781  0092                     	;# 
   782  0093                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0098                     	;# 
   787  0099                     	;# 
   788  009A                     	;# 
   789  009B                     	;# 
   790  009B                     	;# 
   791  009C                     	;# 
   792  009D                     	;# 
   793  009E                     	;# 
   794  009F                     	;# 
   795  010C                     	;# 
   796  010E                     	;# 
   797  0111                     	;# 
   798  0112                     	;# 
   799  0113                     	;# 
   800  0114                     	;# 
   801  0115                     	;# 
   802  0116                     	;# 
   803  0117                     	;# 
   804  0118                     	;# 
   805  0119                     	;# 
   806  011C                     	;# 
   807  018C                     	;# 
   808  018E                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0194                     	;# 
   815  0195                     	;# 
   816  0196                     	;# 
   817  0197                     	;# 
   818  0199                     	;# 
   819  0199                     	;# 
   820  0199                     	;# 
   821  019A                     	;# 
   822  019A                     	;# 
   823  019A                     	;# 
   824  019B                     	;# 
   825  019B                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019C                     	;# 
   830  019C                     	;# 
   831  019C                     	;# 
   832  019D                     	;# 
   833  019D                     	;# 
   834  019D                     	;# 
   835  019E                     	;# 
   836  019E                     	;# 
   837  019E                     	;# 
   838  019F                     	;# 
   839  019F                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  020C                     	;# 
   844  020E                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0213                     	;# 
   851  0214                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0216                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0217                     	;# 
   861  028C                     	;# 
   862  028E                     	;# 
   863  0291                     	;# 
   864  0291                     	;# 
   865  0292                     	;# 
   866  0293                     	;# 
   867  0293                     	;# 
   868  0298                     	;# 
   869  0298                     	;# 
   870  0299                     	;# 
   871  029A                     	;# 
   872  029A                     	;# 
   873  029E                     	;# 
   874  030C                     	;# 
   875  030E                     	;# 
   876  038C                     	;# 
   877  038E                     	;# 
   878  0391                     	;# 
   879  0392                     	;# 
   880  0393                     	;# 
   881  0397                     	;# 
   882  0398                     	;# 
   883  0399                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  0511                     	;# 
   891  0515                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  0619                     	;# 
   896  061A                     	;# 
   897  061B                     	;# 
   898  061C                     	;# 
   899  061C                     	;# 
   900  0691                     	;# 
   901  0692                     	;# 
   902  0693                     	;# 
   903  0694                     	;# 
   904  0695                     	;# 
   905  0696                     	;# 
   906  0697                     	;# 
   907  0698                     	;# 
   908  0699                     	;# 
   909  069A                     	;# 
   910  069B                     	;# 
   911  069C                     	;# 
   912  069D                     	;# 
   913  069E                     	;# 
   914  069F                     	;# 
   915  0E0F                     	;# 
   916  0E10                     	;# 
   917  0E11                     	;# 
   918  0E12                     	;# 
   919  0E13                     	;# 
   920  0E14                     	;# 
   921  0E15                     	;# 
   922  0E17                     	;# 
   923  0E20                     	;# 
   924  0E21                     	;# 
   925  0E22                     	;# 
   926  0E24                     	;# 
   927  0E25                     	;# 
   928  0E28                     	;# 
   929  0E29                     	;# 
   930  0E2A                     	;# 
   931  0E2B                     	;# 
   932  0E90                     	;# 
   933  0E91                     	;# 
   934  0E92                     	;# 
   935  0E94                     	;# 
   936  0E95                     	;# 
   937  0EA0                     	;# 
   938  0EA1                     	;# 
   939  0EA2                     	;# 
   940  0EA3                     	;# 
   941  0EA4                     	;# 
   942  0EA5                     	;# 
   943  0F0F                     	;# 
   944  0F10                     	;# 
   945  0F11                     	;# 
   946  0F12                     	;# 
   947  0F13                     	;# 
   948  0F14                     	;# 
   949  0F15                     	;# 
   950  0F16                     	;# 
   951  0F17                     	;# 
   952  0F18                     	;# 
   953  0F19                     	;# 
   954  0F1A                     	;# 
   955  0F1B                     	;# 
   956  0F1C                     	;# 
   957  0F1D                     	;# 
   958  0F1E                     	;# 
   959  0F1F                     	;# 
   960  0F20                     	;# 
   961  0F21                     	;# 
   962  0F22                     	;# 
   963  0F23                     	;# 
   964  0F24                     	;# 
   965  0F25                     	;# 
   966  0F26                     	;# 
   967  0F27                     	;# 
   968  0F28                     	;# 
   969  0F29                     	;# 
   970  0F2A                     	;# 
   971  0F2B                     	;# 
   972  0F2C                     	;# 
   973  0F2D                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000E                     	;# 
   999  0011                     	;# 
  1000  0012                     	;# 
  1001  0013                     	;# 
  1002  0015                     	;# 
  1003  0016                     	;# 
  1004  0016                     	;# 
  1005  0017                     	;# 
  1006  0018                     	;# 
  1007  0019                     	;# 
  1008  001A                     	;# 
  1009  001B                     	;# 
  1010  001C                     	;# 
  1011  008C                     	;# 
  1012  008E                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0093                     	;# 
  1016  0095                     	;# 
  1017  0096                     	;# 
  1018  0097                     	;# 
  1019  0098                     	;# 
  1020  0099                     	;# 
  1021  009A                     	;# 
  1022  009B                     	;# 
  1023  009B                     	;# 
  1024  009C                     	;# 
  1025  009D                     	;# 
  1026  009E                     	;# 
  1027  009F                     	;# 
  1028  010C                     	;# 
  1029  010E                     	;# 
  1030  0111                     	;# 
  1031  0112                     	;# 
  1032  0113                     	;# 
  1033  0114                     	;# 
  1034  0115                     	;# 
  1035  0116                     	;# 
  1036  0117                     	;# 
  1037  0118                     	;# 
  1038  0119                     	;# 
  1039  011C                     	;# 
  1040  018C                     	;# 
  1041  018E                     	;# 
  1042  0191                     	;# 
  1043  0191                     	;# 
  1044  0192                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0194                     	;# 
  1048  0195                     	;# 
  1049  0196                     	;# 
  1050  0197                     	;# 
  1051  0199                     	;# 
  1052  0199                     	;# 
  1053  0199                     	;# 
  1054  019A                     	;# 
  1055  019A                     	;# 
  1056  019A                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019C                     	;# 
  1063  019C                     	;# 
  1064  019C                     	;# 
  1065  019D                     	;# 
  1066  019D                     	;# 
  1067  019D                     	;# 
  1068  019E                     	;# 
  1069  019E                     	;# 
  1070  019E                     	;# 
  1071  019F                     	;# 
  1072  019F                     	;# 
  1073  019F                     	;# 
  1074  019F                     	;# 
  1075  019F                     	;# 
  1076  020C                     	;# 
  1077  020E                     	;# 
  1078  0211                     	;# 
  1079  0211                     	;# 
  1080  0212                     	;# 
  1081  0212                     	;# 
  1082  0213                     	;# 
  1083  0213                     	;# 
  1084  0214                     	;# 
  1085  0214                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0215                     	;# 
  1090  0216                     	;# 
  1091  0216                     	;# 
  1092  0217                     	;# 
  1093  0217                     	;# 
  1094  028C                     	;# 
  1095  028E                     	;# 
  1096  0291                     	;# 
  1097  0291                     	;# 
  1098  0292                     	;# 
  1099  0293                     	;# 
  1100  0293                     	;# 
  1101  0298                     	;# 
  1102  0298                     	;# 
  1103  0299                     	;# 
  1104  029A                     	;# 
  1105  029A                     	;# 
  1106  029E                     	;# 
  1107  030C                     	;# 
  1108  030E                     	;# 
  1109  038C                     	;# 
  1110  038E                     	;# 
  1111  0391                     	;# 
  1112  0392                     	;# 
  1113  0393                     	;# 
  1114  0397                     	;# 
  1115  0398                     	;# 
  1116  0399                     	;# 
  1117  0415                     	;# 
  1118  0416                     	;# 
  1119  0417                     	;# 
  1120  041C                     	;# 
  1121  041D                     	;# 
  1122  041E                     	;# 
  1123  0511                     	;# 
  1124  0515                     	;# 
  1125  0617                     	;# 
  1126  0618                     	;# 
  1127  0619                     	;# 
  1128  0619                     	;# 
  1129  061A                     	;# 
  1130  061B                     	;# 
  1131  061C                     	;# 
  1132  061C                     	;# 
  1133  0691                     	;# 
  1134  0692                     	;# 
  1135  0693                     	;# 
  1136  0694                     	;# 
  1137  0695                     	;# 
  1138  0696                     	;# 
  1139  0697                     	;# 
  1140  0698                     	;# 
  1141  0699                     	;# 
  1142  069A                     	;# 
  1143  069B                     	;# 
  1144  069C                     	;# 
  1145  069D                     	;# 
  1146  069E                     	;# 
  1147  069F                     	;# 
  1148  0E0F                     	;# 
  1149  0E10                     	;# 
  1150  0E11                     	;# 
  1151  0E12                     	;# 
  1152  0E13                     	;# 
  1153  0E14                     	;# 
  1154  0E15                     	;# 
  1155  0E17                     	;# 
  1156  0E20                     	;# 
  1157  0E21                     	;# 
  1158  0E22                     	;# 
  1159  0E24                     	;# 
  1160  0E25                     	;# 
  1161  0E28                     	;# 
  1162  0E29                     	;# 
  1163  0E2A                     	;# 
  1164  0E2B                     	;# 
  1165  0E90                     	;# 
  1166  0E91                     	;# 
  1167  0E92                     	;# 
  1168  0E94                     	;# 
  1169  0E95                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0F0F                     	;# 
  1177  0F10                     	;# 
  1178  0F11                     	;# 
  1179  0F12                     	;# 
  1180  0F13                     	;# 
  1181  0F14                     	;# 
  1182  0F15                     	;# 
  1183  0F16                     	;# 
  1184  0F17                     	;# 
  1185  0F18                     	;# 
  1186  0F19                     	;# 
  1187  0F1A                     	;# 
  1188  0F1B                     	;# 
  1189  0F1C                     	;# 
  1190  0F1D                     	;# 
  1191  0F1E                     	;# 
  1192  0F1F                     	;# 
  1193  0F20                     	;# 
  1194  0F21                     	;# 
  1195  0F22                     	;# 
  1196  0F23                     	;# 
  1197  0F24                     	;# 
  1198  0F25                     	;# 
  1199  0F26                     	;# 
  1200  0F27                     	;# 
  1201  0F28                     	;# 
  1202  0F29                     	;# 
  1203  0F2A                     	;# 
  1204  0F2B                     	;# 
  1205  0F2C                     	;# 
  1206  0F2D                     	;# 
  1207  0FE4                     	;# 
  1208  0FE5                     	;# 
  1209  0FE6                     	;# 
  1210  0FE7                     	;# 
  1211  0FE8                     	;# 
  1212  0FE9                     	;# 
  1213  0FEA                     	;# 
  1214  0FEB                     	;# 
  1215  0FED                     	;# 
  1216  0FEE                     	;# 
  1217  0FEF                     	;# 
  1218  0000                     	;# 
  1219  0001                     	;# 
  1220  0002                     	;# 
  1221  0003                     	;# 
  1222  0004                     	;# 
  1223  0005                     	;# 
  1224  0006                     	;# 
  1225  0007                     	;# 
  1226  0008                     	;# 
  1227  0009                     	;# 
  1228  000A                     	;# 
  1229  000B                     	;# 
  1230  000C                     	;# 
  1231  000E                     	;# 
  1232  0011                     	;# 
  1233  0012                     	;# 
  1234  0013                     	;# 
  1235  0015                     	;# 
  1236  0016                     	;# 
  1237  0016                     	;# 
  1238  0017                     	;# 
  1239  0018                     	;# 
  1240  0019                     	;# 
  1241  001A                     	;# 
  1242  001B                     	;# 
  1243  001C                     	;# 
  1244  008C                     	;# 
  1245  008E                     	;# 
  1246  0091                     	;# 
  1247  0092                     	;# 
  1248  0093                     	;# 
  1249  0095                     	;# 
  1250  0096                     	;# 
  1251  0097                     	;# 
  1252  0098                     	;# 
  1253  0099                     	;# 
  1254  009A                     	;# 
  1255  009B                     	;# 
  1256  009B                     	;# 
  1257  009C                     	;# 
  1258  009D                     	;# 
  1259  009E                     	;# 
  1260  009F                     	;# 
  1261  010C                     	;# 
  1262  010E                     	;# 
  1263  0111                     	;# 
  1264  0112                     	;# 
  1265  0113                     	;# 
  1266  0114                     	;# 
  1267  0115                     	;# 
  1268  0116                     	;# 
  1269  0117                     	;# 
  1270  0118                     	;# 
  1271  0119                     	;# 
  1272  011C                     	;# 
  1273  018C                     	;# 
  1274  018E                     	;# 
  1275  0191                     	;# 
  1276  0191                     	;# 
  1277  0192                     	;# 
  1278  0193                     	;# 
  1279  0193                     	;# 
  1280  0194                     	;# 
  1281  0195                     	;# 
  1282  0196                     	;# 
  1283  0197                     	;# 
  1284  0199                     	;# 
  1285  0199                     	;# 
  1286  0199                     	;# 
  1287  019A                     	;# 
  1288  019A                     	;# 
  1289  019A                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  019C                     	;# 
  1297  019C                     	;# 
  1298  019D                     	;# 
  1299  019D                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019E                     	;# 
  1303  019E                     	;# 
  1304  019F                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  020C                     	;# 
  1310  020E                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0216                     	;# 
  1324  0216                     	;# 
  1325  0217                     	;# 
  1326  0217                     	;# 
  1327  028C                     	;# 
  1328  028E                     	;# 
  1329  0291                     	;# 
  1330  0291                     	;# 
  1331  0292                     	;# 
  1332  0293                     	;# 
  1333  0293                     	;# 
  1334  0298                     	;# 
  1335  0298                     	;# 
  1336  0299                     	;# 
  1337  029A                     	;# 
  1338  029A                     	;# 
  1339  029E                     	;# 
  1340  030C                     	;# 
  1341  030E                     	;# 
  1342  038C                     	;# 
  1343  038E                     	;# 
  1344  0391                     	;# 
  1345  0392                     	;# 
  1346  0393                     	;# 
  1347  0397                     	;# 
  1348  0398                     	;# 
  1349  0399                     	;# 
  1350  0415                     	;# 
  1351  0416                     	;# 
  1352  0417                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  0511                     	;# 
  1357  0515                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  0619                     	;# 
  1362  061A                     	;# 
  1363  061B                     	;# 
  1364  061C                     	;# 
  1365  061C                     	;# 
  1366  0691                     	;# 
  1367  0692                     	;# 
  1368  0693                     	;# 
  1369  0694                     	;# 
  1370  0695                     	;# 
  1371  0696                     	;# 
  1372  0697                     	;# 
  1373  0698                     	;# 
  1374  0699                     	;# 
  1375  069A                     	;# 
  1376  069B                     	;# 
  1377  069C                     	;# 
  1378  069D                     	;# 
  1379  069E                     	;# 
  1380  069F                     	;# 
  1381  0E0F                     	;# 
  1382  0E10                     	;# 
  1383  0E11                     	;# 
  1384  0E12                     	;# 
  1385  0E13                     	;# 
  1386  0E14                     	;# 
  1387  0E15                     	;# 
  1388  0E17                     	;# 
  1389  0E20                     	;# 
  1390  0E21                     	;# 
  1391  0E22                     	;# 
  1392  0E24                     	;# 
  1393  0E25                     	;# 
  1394  0E28                     	;# 
  1395  0E29                     	;# 
  1396  0E2A                     	;# 
  1397  0E2B                     	;# 
  1398  0E90                     	;# 
  1399  0E91                     	;# 
  1400  0E92                     	;# 
  1401  0E94                     	;# 
  1402  0E95                     	;# 
  1403  0EA0                     	;# 
  1404  0EA1                     	;# 
  1405  0EA2                     	;# 
  1406  0EA3                     	;# 
  1407  0EA4                     	;# 
  1408  0EA5                     	;# 
  1409  0F0F                     	;# 
  1410  0F10                     	;# 
  1411  0F11                     	;# 
  1412  0F12                     	;# 
  1413  0F13                     	;# 
  1414  0F14                     	;# 
  1415  0F15                     	;# 
  1416  0F16                     	;# 
  1417  0F17                     	;# 
  1418  0F18                     	;# 
  1419  0F19                     	;# 
  1420  0F1A                     	;# 
  1421  0F1B                     	;# 
  1422  0F1C                     	;# 
  1423  0F1D                     	;# 
  1424  0F1E                     	;# 
  1425  0F1F                     	;# 
  1426  0F20                     	;# 
  1427  0F21                     	;# 
  1428  0F22                     	;# 
  1429  0F23                     	;# 
  1430  0F24                     	;# 
  1431  0F25                     	;# 
  1432  0F26                     	;# 
  1433  0F27                     	;# 
  1434  0F28                     	;# 
  1435  0F29                     	;# 
  1436  0F2A                     	;# 
  1437  0F2B                     	;# 
  1438  0F2C                     	;# 
  1439  0F2D                     	;# 
  1440  0FE4                     	;# 
  1441  0FE5                     	;# 
  1442  0FE6                     	;# 
  1443  0FE7                     	;# 
  1444  0FE8                     	;# 
  1445  0FE9                     	;# 
  1446  0FEA                     	;# 
  1447  0FEB                     	;# 
  1448  0FED                     	;# 
  1449  0FEE                     	;# 
  1450  0FEF                     	;# 
  1451  0000                     	;# 
  1452  0001                     	;# 
  1453  0002                     	;# 
  1454  0003                     	;# 
  1455  0004                     	;# 
  1456  0005                     	;# 
  1457  0006                     	;# 
  1458  0007                     	;# 
  1459  0008                     	;# 
  1460  0009                     	;# 
  1461  000A                     	;# 
  1462  000B                     	;# 
  1463  000C                     	;# 
  1464  000E                     	;# 
  1465  0011                     	;# 
  1466  0012                     	;# 
  1467  0013                     	;# 
  1468  0015                     	;# 
  1469  0016                     	;# 
  1470  0016                     	;# 
  1471  0017                     	;# 
  1472  0018                     	;# 
  1473  0019                     	;# 
  1474  001A                     	;# 
  1475  001B                     	;# 
  1476  001C                     	;# 
  1477  008C                     	;# 
  1478  008E                     	;# 
  1479  0091                     	;# 
  1480  0092                     	;# 
  1481  0093                     	;# 
  1482  0095                     	;# 
  1483  0096                     	;# 
  1484  0097                     	;# 
  1485  0098                     	;# 
  1486  0099                     	;# 
  1487  009A                     	;# 
  1488  009B                     	;# 
  1489  009B                     	;# 
  1490  009C                     	;# 
  1491  009D                     	;# 
  1492  009E                     	;# 
  1493  009F                     	;# 
  1494  010C                     	;# 
  1495  010E                     	;# 
  1496  0111                     	;# 
  1497  0112                     	;# 
  1498  0113                     	;# 
  1499  0114                     	;# 
  1500  0115                     	;# 
  1501  0116                     	;# 
  1502  0117                     	;# 
  1503  0118                     	;# 
  1504  0119                     	;# 
  1505  011C                     	;# 
  1506  018C                     	;# 
  1507  018E                     	;# 
  1508  0191                     	;# 
  1509  0191                     	;# 
  1510  0192                     	;# 
  1511  0193                     	;# 
  1512  0193                     	;# 
  1513  0194                     	;# 
  1514  0195                     	;# 
  1515  0196                     	;# 
  1516  0197                     	;# 
  1517  0199                     	;# 
  1518  0199                     	;# 
  1519  0199                     	;# 
  1520  019A                     	;# 
  1521  019A                     	;# 
  1522  019A                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019C                     	;# 
  1529  019C                     	;# 
  1530  019C                     	;# 
  1531  019D                     	;# 
  1532  019D                     	;# 
  1533  019D                     	;# 
  1534  019E                     	;# 
  1535  019E                     	;# 
  1536  019E                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  019F                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  020C                     	;# 
  1543  020E                     	;# 
  1544  0211                     	;# 
  1545  0211                     	;# 
  1546  0212                     	;# 
  1547  0212                     	;# 
  1548  0213                     	;# 
  1549  0213                     	;# 
  1550  0214                     	;# 
  1551  0214                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0215                     	;# 
  1556  0216                     	;# 
  1557  0216                     	;# 
  1558  0217                     	;# 
  1559  0217                     	;# 
  1560  028C                     	;# 
  1561  028E                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0293                     	;# 
  1567  0298                     	;# 
  1568  0298                     	;# 
  1569  0299                     	;# 
  1570  029A                     	;# 
  1571  029A                     	;# 
  1572  029E                     	;# 
  1573  030C                     	;# 
  1574  030E                     	;# 
  1575  038C                     	;# 
  1576  038E                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0397                     	;# 
  1581  0398                     	;# 
  1582  0399                     	;# 
  1583  0415                     	;# 
  1584  0416                     	;# 
  1585  0417                     	;# 
  1586  041C                     	;# 
  1587  041D                     	;# 
  1588  041E                     	;# 
  1589  0511                     	;# 
  1590  0515                     	;# 
  1591  0617                     	;# 
  1592  0618                     	;# 
  1593  0619                     	;# 
  1594  0619                     	;# 
  1595  061A                     	;# 
  1596  061B                     	;# 
  1597  061C                     	;# 
  1598  061C                     	;# 
  1599  0691                     	;# 
  1600  0692                     	;# 
  1601  0693                     	;# 
  1602  0694                     	;# 
  1603  0695                     	;# 
  1604  0696                     	;# 
  1605  0697                     	;# 
  1606  0698                     	;# 
  1607  0699                     	;# 
  1608  069A                     	;# 
  1609  069B                     	;# 
  1610  069C                     	;# 
  1611  069D                     	;# 
  1612  069E                     	;# 
  1613  069F                     	;# 
  1614  0E0F                     	;# 
  1615  0E10                     	;# 
  1616  0E11                     	;# 
  1617  0E12                     	;# 
  1618  0E13                     	;# 
  1619  0E14                     	;# 
  1620  0E15                     	;# 
  1621  0E17                     	;# 
  1622  0E20                     	;# 
  1623  0E21                     	;# 
  1624  0E22                     	;# 
  1625  0E24                     	;# 
  1626  0E25                     	;# 
  1627  0E28                     	;# 
  1628  0E29                     	;# 
  1629  0E2A                     	;# 
  1630  0E2B                     	;# 
  1631  0E90                     	;# 
  1632  0E91                     	;# 
  1633  0E92                     	;# 
  1634  0E94                     	;# 
  1635  0E95                     	;# 
  1636  0EA0                     	;# 
  1637  0EA1                     	;# 
  1638  0EA2                     	;# 
  1639  0EA3                     	;# 
  1640  0EA4                     	;# 
  1641  0EA5                     	;# 
  1642  0F0F                     	;# 
  1643  0F10                     	;# 
  1644  0F11                     	;# 
  1645  0F12                     	;# 
  1646  0F13                     	;# 
  1647  0F14                     	;# 
  1648  0F15                     	;# 
  1649  0F16                     	;# 
  1650  0F17                     	;# 
  1651  0F18                     	;# 
  1652  0F19                     	;# 
  1653  0F1A                     	;# 
  1654  0F1B                     	;# 
  1655  0F1C                     	;# 
  1656  0F1D                     	;# 
  1657  0F1E                     	;# 
  1658  0F1F                     	;# 
  1659  0F20                     	;# 
  1660  0F21                     	;# 
  1661  0F22                     	;# 
  1662  0F23                     	;# 
  1663  0F24                     	;# 
  1664  0F25                     	;# 
  1665  0F26                     	;# 
  1666  0F27                     	;# 
  1667  0F28                     	;# 
  1668  0F29                     	;# 
  1669  0F2A                     	;# 
  1670  0F2B                     	;# 
  1671  0F2C                     	;# 
  1672  0F2D                     	;# 
  1673  0FE4                     	;# 
  1674  0FE5                     	;# 
  1675  0FE6                     	;# 
  1676  0FE7                     	;# 
  1677  0FE8                     	;# 
  1678  0FE9                     	;# 
  1679  0FEA                     	;# 
  1680  0FEB                     	;# 
  1681  0FED                     	;# 
  1682  0FEE                     	;# 
  1683  0FEF                     	;# 
  1684  0000                     	;# 
  1685  0001                     	;# 
  1686  0002                     	;# 
  1687  0003                     	;# 
  1688  0004                     	;# 
  1689  0005                     	;# 
  1690  0006                     	;# 
  1691  0007                     	;# 
  1692  0008                     	;# 
  1693  0009                     	;# 
  1694  000A                     	;# 
  1695  000B                     	;# 
  1696  000C                     	;# 
  1697  000E                     	;# 
  1698  0011                     	;# 
  1699  0012                     	;# 
  1700  0013                     	;# 
  1701  0015                     	;# 
  1702  0016                     	;# 
  1703  0016                     	;# 
  1704  0017                     	;# 
  1705  0018                     	;# 
  1706  0019                     	;# 
  1707  001A                     	;# 
  1708  001B                     	;# 
  1709  001C                     	;# 
  1710  008C                     	;# 
  1711  008E                     	;# 
  1712  0091                     	;# 
  1713  0092                     	;# 
  1714  0093                     	;# 
  1715  0095                     	;# 
  1716  0096                     	;# 
  1717  0097                     	;# 
  1718  0098                     	;# 
  1719  0099                     	;# 
  1720  009A                     	;# 
  1721  009B                     	;# 
  1722  009B                     	;# 
  1723  009C                     	;# 
  1724  009D                     	;# 
  1725  009E                     	;# 
  1726  009F                     	;# 
  1727  010C                     	;# 
  1728  010E                     	;# 
  1729  0111                     	;# 
  1730  0112                     	;# 
  1731  0113                     	;# 
  1732  0114                     	;# 
  1733  0115                     	;# 
  1734  0116                     	;# 
  1735  0117                     	;# 
  1736  0118                     	;# 
  1737  0119                     	;# 
  1738  011C                     	;# 
  1739  018C                     	;# 
  1740  018E                     	;# 
  1741  0191                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0193                     	;# 
  1745  0193                     	;# 
  1746  0194                     	;# 
  1747  0195                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0199                     	;# 
  1751  0199                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019A                     	;# 
  1755  019A                     	;# 
  1756  019B                     	;# 
  1757  019B                     	;# 
  1758  019B                     	;# 
  1759  019B                     	;# 
  1760  019B                     	;# 
  1761  019C                     	;# 
  1762  019C                     	;# 
  1763  019C                     	;# 
  1764  019D                     	;# 
  1765  019D                     	;# 
  1766  019D                     	;# 
  1767  019E                     	;# 
  1768  019E                     	;# 
  1769  019E                     	;# 
  1770  019F                     	;# 
  1771  019F                     	;# 
  1772  019F                     	;# 
  1773  019F                     	;# 
  1774  019F                     	;# 
  1775  020C                     	;# 
  1776  020E                     	;# 
  1777  0211                     	;# 
  1778  0211                     	;# 
  1779  0212                     	;# 
  1780  0212                     	;# 
  1781  0213                     	;# 
  1782  0213                     	;# 
  1783  0214                     	;# 
  1784  0214                     	;# 
  1785  0215                     	;# 
  1786  0215                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0216                     	;# 
  1790  0216                     	;# 
  1791  0217                     	;# 
  1792  0217                     	;# 
  1793  028C                     	;# 
  1794  028E                     	;# 
  1795  0291                     	;# 
  1796  0291                     	;# 
  1797  0292                     	;# 
  1798  0293                     	;# 
  1799  0293                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  029A                     	;# 
  1804  029A                     	;# 
  1805  029E                     	;# 
  1806  030C                     	;# 
  1807  030E                     	;# 
  1808  038C                     	;# 
  1809  038E                     	;# 
  1810  0391                     	;# 
  1811  0392                     	;# 
  1812  0393                     	;# 
  1813  0397                     	;# 
  1814  0398                     	;# 
  1815  0399                     	;# 
  1816  0415                     	;# 
  1817  0416                     	;# 
  1818  0417                     	;# 
  1819  041C                     	;# 
  1820  041D                     	;# 
  1821  041E                     	;# 
  1822  0511                     	;# 
  1823  0515                     	;# 
  1824  0617                     	;# 
  1825  0618                     	;# 
  1826  0619                     	;# 
  1827  0619                     	;# 
  1828  061A                     	;# 
  1829  061B                     	;# 
  1830  061C                     	;# 
  1831  061C                     	;# 
  1832  0691                     	;# 
  1833  0692                     	;# 
  1834  0693                     	;# 
  1835  0694                     	;# 
  1836  0695                     	;# 
  1837  0696                     	;# 
  1838  0697                     	;# 
  1839  0698                     	;# 
  1840  0699                     	;# 
  1841  069A                     	;# 
  1842  069B                     	;# 
  1843  069C                     	;# 
  1844  069D                     	;# 
  1845  069E                     	;# 
  1846  069F                     	;# 
  1847  0E0F                     	;# 
  1848  0E10                     	;# 
  1849  0E11                     	;# 
  1850  0E12                     	;# 
  1851  0E13                     	;# 
  1852  0E14                     	;# 
  1853  0E15                     	;# 
  1854  0E17                     	;# 
  1855  0E20                     	;# 
  1856  0E21                     	;# 
  1857  0E22                     	;# 
  1858  0E24                     	;# 
  1859  0E25                     	;# 
  1860  0E28                     	;# 
  1861  0E29                     	;# 
  1862  0E2A                     	;# 
  1863  0E2B                     	;# 
  1864  0E90                     	;# 
  1865  0E91                     	;# 
  1866  0E92                     	;# 
  1867  0E94                     	;# 
  1868  0E95                     	;# 
  1869  0EA0                     	;# 
  1870  0EA1                     	;# 
  1871  0EA2                     	;# 
  1872  0EA3                     	;# 
  1873  0EA4                     	;# 
  1874  0EA5                     	;# 
  1875  0F0F                     	;# 
  1876  0F10                     	;# 
  1877  0F11                     	;# 
  1878  0F12                     	;# 
  1879  0F13                     	;# 
  1880  0F14                     	;# 
  1881  0F15                     	;# 
  1882  0F16                     	;# 
  1883  0F17                     	;# 
  1884  0F18                     	;# 
  1885  0F19                     	;# 
  1886  0F1A                     	;# 
  1887  0F1B                     	;# 
  1888  0F1C                     	;# 
  1889  0F1D                     	;# 
  1890  0F1E                     	;# 
  1891  0F1F                     	;# 
  1892  0F20                     	;# 
  1893  0F21                     	;# 
  1894  0F22                     	;# 
  1895  0F23                     	;# 
  1896  0F24                     	;# 
  1897  0F25                     	;# 
  1898  0F26                     	;# 
  1899  0F27                     	;# 
  1900  0F28                     	;# 
  1901  0F29                     	;# 
  1902  0F2A                     	;# 
  1903  0F2B                     	;# 
  1904  0F2C                     	;# 
  1905  0F2D                     	;# 
  1906  0FE4                     	;# 
  1907  0FE5                     	;# 
  1908  0FE6                     	;# 
  1909  0FE7                     	;# 
  1910  0FE8                     	;# 
  1911  0FE9                     	;# 
  1912  0FEA                     	;# 
  1913  0FEB                     	;# 
  1914  0FED                     	;# 
  1915  0FEE                     	;# 
  1916  0FEF                     	;# 
  1917  0000                     	;# 
  1918  0001                     	;# 
  1919  0002                     	;# 
  1920  0003                     	;# 
  1921  0004                     	;# 
  1922  0005                     	;# 
  1923  0006                     	;# 
  1924  0007                     	;# 
  1925  0008                     	;# 
  1926  0009                     	;# 
  1927  000A                     	;# 
  1928  000B                     	;# 
  1929  000C                     	;# 
  1930  000E                     	;# 
  1931  0011                     	;# 
  1932  0012                     	;# 
  1933  0013                     	;# 
  1934  0015                     	;# 
  1935  0016                     	;# 
  1936  0016                     	;# 
  1937  0017                     	;# 
  1938  0018                     	;# 
  1939  0019                     	;# 
  1940  001A                     	;# 
  1941  001B                     	;# 
  1942  001C                     	;# 
  1943  008C                     	;# 
  1944  008E                     	;# 
  1945  0091                     	;# 
  1946  0092                     	;# 
  1947  0093                     	;# 
  1948  0095                     	;# 
  1949  0096                     	;# 
  1950  0097                     	;# 
  1951  0098                     	;# 
  1952  0099                     	;# 
  1953  009A                     	;# 
  1954  009B                     	;# 
  1955  009B                     	;# 
  1956  009C                     	;# 
  1957  009D                     	;# 
  1958  009E                     	;# 
  1959  009F                     	;# 
  1960  010C                     	;# 
  1961  010E                     	;# 
  1962  0111                     	;# 
  1963  0112                     	;# 
  1964  0113                     	;# 
  1965  0114                     	;# 
  1966  0115                     	;# 
  1967  0116                     	;# 
  1968  0117                     	;# 
  1969  0118                     	;# 
  1970  0119                     	;# 
  1971  011C                     	;# 
  1972  018C                     	;# 
  1973  018E                     	;# 
  1974  0191                     	;# 
  1975  0191                     	;# 
  1976  0192                     	;# 
  1977  0193                     	;# 
  1978  0193                     	;# 
  1979  0194                     	;# 
  1980  0195                     	;# 
  1981  0196                     	;# 
  1982  0197                     	;# 
  1983  0199                     	;# 
  1984  0199                     	;# 
  1985  0199                     	;# 
  1986  019A                     	;# 
  1987  019A                     	;# 
  1988  019A                     	;# 
  1989  019B                     	;# 
  1990  019B                     	;# 
  1991  019B                     	;# 
  1992  019B                     	;# 
  1993  019B                     	;# 
  1994  019C                     	;# 
  1995  019C                     	;# 
  1996  019C                     	;# 
  1997  019D                     	;# 
  1998  019D                     	;# 
  1999  019D                     	;# 
  2000  019E                     	;# 
  2001  019E                     	;# 
  2002  019E                     	;# 
  2003  019F                     	;# 
  2004  019F                     	;# 
  2005  019F                     	;# 
  2006  019F                     	;# 
  2007  019F                     	;# 
  2008  020C                     	;# 
  2009  020E                     	;# 
  2010  0211                     	;# 
  2011  0211                     	;# 
  2012  0212                     	;# 
  2013  0212                     	;# 
  2014  0213                     	;# 
  2015  0213                     	;# 
  2016  0214                     	;# 
  2017  0214                     	;# 
  2018  0215                     	;# 
  2019  0215                     	;# 
  2020  0215                     	;# 
  2021  0215                     	;# 
  2022  0216                     	;# 
  2023  0216                     	;# 
  2024  0217                     	;# 
  2025  0217                     	;# 
  2026  028C                     	;# 
  2027  028E                     	;# 
  2028  0291                     	;# 
  2029  0291                     	;# 
  2030  0292                     	;# 
  2031  0293                     	;# 
  2032  0293                     	;# 
  2033  0298                     	;# 
  2034  0298                     	;# 
  2035  0299                     	;# 
  2036  029A                     	;# 
  2037  029A                     	;# 
  2038  029E                     	;# 
  2039  030C                     	;# 
  2040  030E                     	;# 
  2041  038C                     	;# 
  2042  038E                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  0393                     	;# 
  2046  0397                     	;# 
  2047  0398                     	;# 
  2048  0399                     	;# 
  2049  0415                     	;# 
  2050  0416                     	;# 
  2051  0417                     	;# 
  2052  041C                     	;# 
  2053  041D                     	;# 
  2054  041E                     	;# 
  2055  0511                     	;# 
  2056  0515                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  0619                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  061C                     	;# 
  2065  0691                     	;# 
  2066  0692                     	;# 
  2067  0693                     	;# 
  2068  0694                     	;# 
  2069  0695                     	;# 
  2070  0696                     	;# 
  2071  0697                     	;# 
  2072  0698                     	;# 
  2073  0699                     	;# 
  2074  069A                     	;# 
  2075  069B                     	;# 
  2076  069C                     	;# 
  2077  069D                     	;# 
  2078  069E                     	;# 
  2079  069F                     	;# 
  2080  0E0F                     	;# 
  2081  0E10                     	;# 
  2082  0E11                     	;# 
  2083  0E12                     	;# 
  2084  0E13                     	;# 
  2085  0E14                     	;# 
  2086  0E15                     	;# 
  2087  0E17                     	;# 
  2088  0E20                     	;# 
  2089  0E21                     	;# 
  2090  0E22                     	;# 
  2091  0E24                     	;# 
  2092  0E25                     	;# 
  2093  0E28                     	;# 
  2094  0E29                     	;# 
  2095  0E2A                     	;# 
  2096  0E2B                     	;# 
  2097  0E90                     	;# 
  2098  0E91                     	;# 
  2099  0E92                     	;# 
  2100  0E94                     	;# 
  2101  0E95                     	;# 
  2102  0EA0                     	;# 
  2103  0EA1                     	;# 
  2104  0EA2                     	;# 
  2105  0EA3                     	;# 
  2106  0EA4                     	;# 
  2107  0EA5                     	;# 
  2108  0F0F                     	;# 
  2109  0F10                     	;# 
  2110  0F11                     	;# 
  2111  0F12                     	;# 
  2112  0F13                     	;# 
  2113  0F14                     	;# 
  2114  0F15                     	;# 
  2115  0F16                     	;# 
  2116  0F17                     	;# 
  2117  0F18                     	;# 
  2118  0F19                     	;# 
  2119  0F1A                     	;# 
  2120  0F1B                     	;# 
  2121  0F1C                     	;# 
  2122  0F1D                     	;# 
  2123  0F1E                     	;# 
  2124  0F1F                     	;# 
  2125  0F20                     	;# 
  2126  0F21                     	;# 
  2127  0F22                     	;# 
  2128  0F23                     	;# 
  2129  0F24                     	;# 
  2130  0F25                     	;# 
  2131  0F26                     	;# 
  2132  0F27                     	;# 
  2133  0F28                     	;# 
  2134  0F29                     	;# 
  2135  0F2A                     	;# 
  2136  0F2B                     	;# 
  2137  0F2C                     	;# 
  2138  0F2D                     	;# 
  2139  0FE4                     	;# 
  2140  0FE5                     	;# 
  2141  0FE6                     	;# 
  2142  0FE7                     	;# 
  2143  0FE8                     	;# 
  2144  0FE9                     	;# 
  2145  0FEA                     	;# 
  2146  0FEB                     	;# 
  2147  0FED                     	;# 
  2148  0FEE                     	;# 
  2149  0FEF                     	;_IRRawCode
  2150                           
  2151                           	psect	idataBANK0
  2152  05C6                     __pidataBANK0:	
  2153                           
  2154                           ;initializer for _BlueLEDcount
  2155  05C6  34C4               	retlw	196
  2156  05C7  3409               	retlw	9
  2157                           
  2158                           ;initializer for _Sent
  2159  05C8  3401               	retlw	1
  2160                           
  2161                           ;initializer for _ChannelF
  2162  05C9  3403               	retlw	3
  2163  05CA  3400               	retlw	0
  2164  05CB  3403               	retlw	3
  2165  05CC  3403               	retlw	3
  2166  05CD  3403               	retlw	3
  2167  05CE  3403               	retlw	3
  2168  05CF  3400               	retlw	0
  2169  05D0  3400               	retlw	0
  2170  05D1  3401               	retlw	1
  2171  05D2  3400               	retlw	0
  2172  05D3  3400               	retlw	0
  2173  05D4  3400               	retlw	0
  2174                           
  2175                           	psect	stringtext
  2176  0700                     __pstringtext:	
  2177  0700                     _Version:	
  2178  0700  3431               	retlw	49
  2179  0701  342E               	retlw	46
  2180  0702  3430               	retlw	48
  2181  0703  345F               	retlw	95
  2182  0704  3444               	retlw	68
  2183  0705  3457               	retlw	87
  2184  0706  3430               	retlw	48
  2185  0707  3461               	retlw	97
  2186  0708  3400               	retlw	0
  2187  0709                     __end_of_Version:	
  2188  000B                     _INTCONbits	set	11
  2189  0011                     _PIR1bits	set	17
  2190  0012                     _PIR2bits	set	18
  2191  000E                     _PORTC	set	14
  2192  001B                     _PR2	set	27
  2193  0018                     _T1CONbits	set	24
  2194  001C                     _T2CONbits	set	28
  2195  0017                     _TMR1H	set	23
  2196  0016                     _TMR1L	set	22
  2197  001A                     _TMR2	set	26
  2198  0099                     _OSCCONbits	set	153
  2199  009A                     _OSCSTAT	set	154
  2200  0091                     _PIE1bits	set	145
  2201  0092                     _PIE2bits	set	146
  2202  008E                     _TRISCbits	set	142
  2203  04D0                     _HFIOFS	set	1232
  2204  010E                     _LATC	set	270
  2205  018E                     _ANSELC	set	398
  2206  0293                     _CCP1CONbits	set	659
  2207  029A                     _CCP2CONbits	set	666
  2208  030E                     _SLRCONCbits	set	782
  2209  0399                     _IOCCFbits	set	921
  2210  0398                     _IOCCNbits	set	920
  2211  0397                     _IOCCPbits	set	919
  2212  0416                     _PR4	set	1046
  2213  041D                     _PR6	set	1053
  2214  0417                     _T4CONbits	set	1047
  2215  041E                     _T6CONbits	set	1054
  2216  0415                     _TMR4	set	1045
  2217  041C                     _TMR6	set	1052
  2218                           
  2219                           ; #config settings
  2220  0000                     
  2221                           	psect	cinit
  2222  01D5                     start_initialization:	
  2223  01D5                     __initialization:		;BIGRAM
  2224                           
  2225                           ; Clear objects allocated to BIGRAM
  2226  01D5  3060               	movlw	low (0+8544)
  2227  01D6  0084               	movwf	4
  2228  01D7  3021               	movlw	high (0+8544)
  2229  01D8  0085               	movwf	5
  2230  01D9  3090               	movlw	144
  2231  01DA  00FE               	movwf	btemp
  2232  01DB  3000               	movlw	0
  2233  01DC  00FF               	movwf	btemp+1
  2234  01DD  3185  25E2  3181   	fcall	clear_ram0
  2235                           
  2236                           ; Clear objects allocated to COMMON
  2237  01E0  01F9               	clrf	__pbssCOMMON& (0+127)
  2238  01E1  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2239  01E2  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2240  01E3  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2241  01E4  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  2242                           
  2243                           ; Clear objects allocated to BANK0
  2244  01E5  3020               	movlw	low __pbssBANK0
  2245  01E6  0084               	movwf	4
  2246  01E7  3000               	movlw	high __pbssBANK0
  2247  01E8  0085               	movwf	5
  2248  01E9  3020               	movlw	32
  2249  01EA  00FE               	movwf	btemp
  2250  01EB  3000               	movlw	0
  2251  01EC  00FF               	movwf	btemp+1
  2252  01ED  3185  25E2  3181   	fcall	clear_ram0
  2253                           
  2254                           ; Initialize objects allocated to BANK0
  2255  01F0  30C6               	movlw	low __pidataBANK0
  2256  01F1  0084               	movwf	4
  2257  01F2  3085               	movlw	(high __pidataBANK0)| (0+128)
  2258  01F3  0085               	movwf	5
  2259  01F4  3051               	movlw	low __pdataBANK0
  2260  01F5  0086               	movwf	6
  2261  01F6  3000               	movlw	high __pdataBANK0
  2262  01F7  0087               	movwf	7
  2263  01F8  3000               	movlw	0
  2264  01F9  00FF               	movwf	btemp+1
  2265  01FA  300F               	movlw	15
  2266  01FB  3185  25EE         	fcall	init_ram
  2267  01FD                     end_of_initialization:	
  2268                           ;End of C runtime variable initialization code
  2269                           
  2270  01FD                     __end_of__initialization:	
  2271  01FD  0020               	movlb	0
  2272  01FE  3184  2C6E         	ljmp	_main	;jump to C main() function
  2273                           
  2274                           	psect	bssCOMMON
  2275  0079                     __pbssCOMMON:	
  2276  0079                     _IRrawCodeNum:	
  2277  0079                     	ds	1
  2278  007A                     _RFcodeBit:	
  2279  007A                     	ds	1
  2280  007B                     _RFcodePlace:	
  2281  007B                     	ds	1
  2282  007C                     _RFsendFlag:	
  2283  007C                     	ds	1
  2284  007D                     _IR_New_Code:	
  2285  007D                     	ds	1
  2286                           
  2287                           	psect	bssBANK0
  2288  0020                     __pbssBANK0:	
  2289  0020                     _RFsendCode:	
  2290  0020                     	ds	20
  2291  0034                     _IRrawCount:	
  2292  0034                     	ds	2
  2293  0036                     _TMR1_overflow:	
  2294  0036                     	ds	2
  2295  0038                     _TMR4_overflow:	
  2296  0038                     	ds	2
  2297  003A                     _IRfault:	
  2298  003A                     	ds	1
  2299  003B                     _Sendcount:	
  2300  003B                     	ds	1
  2301  003C                     _IR_NEC:	
  2302  003C                     	ds	4
  2303                           
  2304                           	psect	dataBANK0
  2305  0051                     __pdataBANK0:	
  2306  0051                     _BlueLEDcount:	
  2307  0051                     	ds	2
  2308  0053                     _Sent:	
  2309  0053                     	ds	1
  2310  0054                     _ChannelF:	
  2311  0054                     	ds	12
  2312                           
  2313                           	psect	clrtext
  2314  05E2                     clear_ram0:	
  2315                           ;	Called with FSR0 containing the base address, and
  2316                           ;	btemp/btemp+1 has the size to clear
  2317                           
  2318  05E2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2319  05E3                     clrloop0:	
  2320  05E3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2321  05E4  3101               	addfsr 0,1
  2322  05E5  3001               	movlw	1
  2323  05E6  02FE               	subwf	126,f
  2324  05E7  3000               	movlw	0
  2325  05E8  3BFF               	subwfb	127,f
  2326  05E9  087F               	movf	127,w
  2327  05EA  047E               	iorwf	126,w
  2328  05EB  1903               	btfsc	3,2
  2329  05EC  3400               	retlw	0	;all done for this memory range, return
  2330  05ED  2DE3               	goto	clrloop0	;have we reached the end yet?
  2331                           
  2332                           	psect	inittext
  2333  05EE                     init_ram:	
  2334  05EE  00FE               	movwf	126
  2335  05EF                     initloop:	
  2336  05EF  0012               	moviw fsr0++
  2337  05F0  001E               	movwi fsr1++
  2338  05F1  3001               	movlw	1
  2339  05F2  02FE               	subwf	126,f
  2340  05F3  3000               	movlw	0
  2341  05F4  3BFF               	subwfb	127,f
  2342  05F5  087F               	movf	127,w
  2343  05F6  047E               	iorwf	126,w
  2344  05F7  1903               	btfsc	3,2
  2345  05F8  3400               	retlw	0
  2346  05F9  2DEF               	goto	initloop
  2347                           
  2348                           	psect	cstackBANK1
  2349  00A0                     __pcstackBANK1:	
  2350  00A0                     ??_Timer2OFF:	
  2351  00A0                     ??_Reset_Timer1:	
  2352                           ; 0 bytes @ 0x0
  2353                           
  2354  00A0                     ??_Stop_Timer1:	
  2355                           ; 0 bytes @ 0x0
  2356                           
  2357  00A0                     ??_Timer4OFF:	
  2358                           ; 0 bytes @ 0x0
  2359                           
  2360  00A0                     ??_Timer6OFF:	
  2361                           ; 0 bytes @ 0x0
  2362                           
  2363  00A0                     ??_ConfigureOscillator:	
  2364                           ; 0 bytes @ 0x0
  2365                           
  2366  00A0                     ??_InitApp:	
  2367                           ; 0 bytes @ 0x0
  2368                           
  2369  00A0                     ??_init_Timers:	
  2370                           ; 0 bytes @ 0x0
  2371                           
  2372  00A0                     ??_init_IR:	
  2373                           ; 0 bytes @ 0x0
  2374                           
  2375  00A0                     ?_delayUS:	
  2376                           ; 0 bytes @ 0x0
  2377                           
  2378  00A0                     ??_Timer1Init:	
  2379                           ; 0 bytes @ 0x0
  2380                           
  2381  00A0                     ??_Timer2Init:	
  2382                           ; 0 bytes @ 0x0
  2383                           
  2384  00A0                     ??_Timer4Init:	
  2385                           ; 0 bytes @ 0x0
  2386                           
  2387  00A0                     ??_Timer6Init:	
  2388                           ; 0 bytes @ 0x0
  2389                           
  2390  00A0                     ??_Enable_IR:	
  2391                           ; 0 bytes @ 0x0
  2392                           
  2393  00A0                     ??_Timer2ON:	
  2394                           ; 0 bytes @ 0x0
  2395                           
  2396  00A0                     ??_Timer6ON:	
  2397                           ; 0 bytes @ 0x0
  2398                           
  2399  00A0                     ??_Timer6Reset:	
  2400                           ; 0 bytes @ 0x0
  2401                           
  2402  00A0                     ??_Set_Timer6:	
  2403                           ; 0 bytes @ 0x0
  2404                           
  2405  00A0                     ?_SendRF:	
  2406                           ; 0 bytes @ 0x0
  2407                           
  2408  00A0                     Set_Timer6@time:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  00A0                     SendRF@size:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  00A0                     delayUS@US:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417                           
  2418                           ; 4 bytes @ 0x0
  2419  00A0                     	ds	1
  2420  00A1                     SendRF@RepeatAmount:	
  2421                           
  2422                           ; 1 bytes @ 0x1
  2423  00A1                     	ds	1
  2424  00A2                     ??_SendRF:	
  2425                           
  2426                           ; 0 bytes @ 0x2
  2427  00A2                     	ds	2
  2428  00A4                     ??_delayUS:	
  2429  00A4                     SendRF@Code:	
  2430                           ; 0 bytes @ 0x4
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x4
  2434  00A4                     	ds	1
  2435  00A5                     SendRF@i:	
  2436  00A5                     delayUS@i:	
  2437                           ; 1 bytes @ 0x5
  2438                           
  2439                           
  2440                           ; 4 bytes @ 0x5
  2441  00A5                     	ds	1
  2442  00A6                     ?_UseIRCode:	
  2443  00A6                     UseIRCode@NEC:	
  2444                           ; 0 bytes @ 0x6
  2445                           
  2446                           
  2447                           ; 4 bytes @ 0x6
  2448  00A6                     	ds	3
  2449  00A9                     delayUS@j:	
  2450                           
  2451                           ; 1 bytes @ 0x9
  2452  00A9                     	ds	1
  2453  00AA                     ??_UseIRCode:	
  2454                           
  2455                           ; 0 bytes @ 0xA
  2456  00AA                     	ds	2
  2457  00AC                     UseIRCode@Code:	
  2458                           
  2459                           ; 1 bytes @ 0xC
  2460  00AC                     	ds	1
  2461  00AD                     ??_main:	
  2462                           
  2463                           ; 0 bytes @ 0xD
  2464  00AD                     	ds	1
  2465  00AE                     main@i:	
  2466                           
  2467                           ; 1 bytes @ 0xE
  2468  00AE                     	ds	1
  2469                           
  2470                           	psect	cstackCOMMON
  2471  0070                     __pcstackCOMMON:	
  2472  0070                     ?_Timer4Reset:	
  2473  0070                     ??_Timer4Reset:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_Set_Timer4:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ??_Set_Timer4:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_Timer4ON:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ??_Timer4ON:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_Timer2OFF:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_Reset_Timer1:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_Stop_Timer1:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?_Start_Timer1:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ??_Start_Timer1:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0070                     ?_Timer4OFF:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0070                     ?_Timer6OFF:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0070                     ?_ConfigureOscillator:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0070                     ?_InitApp:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0070                     ?_init_Timers:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0070                     ?_init_IR:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0070                     ?_Timer1Init:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0070                     ?_Timer2Init:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0070                     ?_Timer4Init:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0070                     ?_Timer6Init:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0070                     ?_Enable_IR:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0070                     ?_isr:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0070                     ?_main:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0070                     ?_Timer2ON:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0070                     ?_Timer6ON:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0070                     ?_Timer6Reset:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0070                     ?_Set_Timer6:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0070                     ?i1_Stop_Timer1:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0070                     ??i1_Stop_Timer1:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0070                     ?i1_Reset_Timer1:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0070                     ??i1_Reset_Timer1:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0070                     ?i1_Timer2OFF:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0070                     ??i1_Timer2OFF:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0070                     ?i1_Timer4OFF:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0070                     ??i1_Timer4OFF:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0070                     ?i1_Timer6OFF:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0070                     ??i1_Timer6OFF:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0070                     ?_IRrawToNEC:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0070                     Set_Timer4@time:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  0070                     IRrawToNEC@Raw:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x0
  2595  0070                     	ds	2
  2596  0072                     IRrawToNEC@NEC:	
  2597                           
  2598                           ; 1 bytes @ 0x2
  2599  0072                     	ds	1
  2600  0073                     IRrawToNEC@Invert:	
  2601                           
  2602                           ; 1 bytes @ 0x3
  2603  0073                     	ds	1
  2604  0074                     ??_IRrawToNEC:	
  2605                           
  2606                           ; 0 bytes @ 0x4
  2607  0074                     	ds	5
  2608                           
  2609                           	psect	cstackBANK0
  2610  0040                     __pcstackBANK0:	
  2611  0040                     IRrawToNEC@NECtemp:	
  2612                           
  2613                           ; 4 bytes @ 0x0
  2614  0040                     	ds	4
  2615  0044                     IRrawToNEC@Pause:	
  2616                           
  2617                           ; 1 bytes @ 0x4
  2618  0044                     	ds	1
  2619  0045                     IRrawToNEC@first:	
  2620                           
  2621                           ; 1 bytes @ 0x5
  2622  0045                     	ds	1
  2623  0046                     IRrawToNEC@i:	
  2624                           
  2625                           ; 1 bytes @ 0x6
  2626  0046                     	ds	1
  2627  0047                     IRrawToNEC@StartBit:	
  2628                           
  2629                           ; 1 bytes @ 0x7
  2630  0047                     	ds	1
  2631  0048                     ??_isr:	
  2632                           
  2633                           ; 0 bytes @ 0x8
  2634  0048                     	ds	9
  2635                           
  2636                           	psect	maintext
  2637  046E                     __pmaintext:	
  2638 ;;
  2639 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2640 ;;
  2641 ;; *************** function _main *****************
  2642 ;; Defined at:
  2643 ;;		line 48 in file "main.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  i               1   14[BANK1 ] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : B1F/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2657 ;;      Params:         0       0       0       0       0       0       0       0
  2658 ;;      Locals:         0       0       1       0       0       0       0       0
  2659 ;;      Temps:          0       0       1       0       0       0       0       0
  2660 ;;      Totals:         0       0       2       0       0       0       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels required when called:    5
  2663 ;; This function calls:
  2664 ;;		_ConfigureOscillator
  2665 ;;		_InitApp
  2666 ;;		_UseIRCode
  2667 ;;		_delayUS
  2668 ;;		_init_IR
  2669 ;;		_init_Timers
  2670 ;; This function is called by:
  2671 ;;		Startup code after reset
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _main
  2677  046E                     _main:	
  2678                           
  2679                           ;main.c: 50: unsigned char i=0;
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2683  046E  0021               	movlb	1	; select bank1
  2684  046F  01AE               	clrf	main@i^(0+128)
  2685                           
  2686                           ;main.c: 53: ConfigureOscillator();
  2687  0470  3185  25D5  3184   	fcall	_ConfigureOscillator
  2688                           
  2689                           ;main.c: 54: InitApp();
  2690  0473  3185  25B6  3184   	fcall	_InitApp
  2691                           
  2692                           ;main.c: 55: init_Timers();
  2693  0476  3185  25FA  3184   	fcall	_init_Timers
  2694                           
  2695                           ;main.c: 56: init_IR();
  2696  0479  3187  2710  3184   	fcall	_init_IR
  2697                           
  2698                           ;main.c: 59: LATC |= 0b00000100;
  2699  047C  0022               	movlb	2	; select bank2
  2700  047D  150E               	bsf	14,2	;volatile
  2701                           
  2702                           ;main.c: 60: for(i =0;i<10;i++)
  2703  047E  0021               	movlb	1	; select bank1
  2704  047F  01AE               	clrf	main@i^(0+128)
  2705  0480  300A               	movlw	10
  2706  0481  022E               	subwf	main@i^(0+128),w
  2707  0482  1803               	btfsc	3,0
  2708  0483  2CB5               	goto	l2261
  2709  0484                     l159:	
  2710                           
  2711                           ;main.c: 61: {
  2712                           ;main.c: 62: LATC |= 0b00000001;
  2713  0484  0022               	movlb	2	; select bank2
  2714  0485  140E               	bsf	14,0	;volatile
  2715                           
  2716                           ;main.c: 63: LATC &= ~0b00000010;
  2717  0486  30FD               	movlw	253
  2718  0487  0021               	movlb	1	; select bank1
  2719  0488  00AD               	movwf	??_main^(0+128)
  2720  0489  082D               	movf	??_main^(0+128),w
  2721  048A  0022               	movlb	2	; select bank2
  2722  048B  058E               	andwf	14,f	;volatile
  2723                           
  2724                           ;main.c: 64: delayUS(40000);
  2725  048C  3000               	movlw	0
  2726  048D  0021               	movlb	1	; select bank1
  2727  048E  00A3               	movwf	(delayUS@US+3)^(0+128)
  2728  048F  3000               	movlw	0
  2729  0490  00A2               	movwf	(delayUS@US+2)^(0+128)
  2730  0491  309C               	movlw	156
  2731  0492  00A1               	movwf	(delayUS@US+1)^(0+128)
  2732  0493  3040               	movlw	64
  2733  0494  00A0               	movwf	delayUS@US^(0+128)
  2734  0495  3185  255B  3184   	fcall	_delayUS
  2735                           
  2736                           ;main.c: 65: LATC |= 0b00000010;
  2737  0498  0022               	movlb	2	; select bank2
  2738  0499  148E               	bsf	14,1	;volatile
  2739                           
  2740                           ;main.c: 66: LATC &= ~0b00000001;
  2741  049A  30FE               	movlw	254
  2742  049B  0021               	movlb	1	; select bank1
  2743  049C  00AD               	movwf	??_main^(0+128)
  2744  049D  082D               	movf	??_main^(0+128),w
  2745  049E  0022               	movlb	2	; select bank2
  2746  049F  058E               	andwf	14,f	;volatile
  2747                           
  2748                           ;main.c: 67: delayUS(40000);
  2749  04A0  3000               	movlw	0
  2750  04A1  0021               	movlb	1	; select bank1
  2751  04A2  00A3               	movwf	(delayUS@US+3)^(0+128)
  2752  04A3  3000               	movlw	0
  2753  04A4  00A2               	movwf	(delayUS@US+2)^(0+128)
  2754  04A5  309C               	movlw	156
  2755  04A6  00A1               	movwf	(delayUS@US+1)^(0+128)
  2756  04A7  3040               	movlw	64
  2757  04A8  00A0               	movwf	delayUS@US^(0+128)
  2758  04A9  3185  255B  3184   	fcall	_delayUS
  2759  04AC  3001               	movlw	1
  2760  04AD  0021               	movlb	1	; select bank1
  2761  04AE  00AD               	movwf	??_main^(0+128)
  2762  04AF  082D               	movf	??_main^(0+128),w
  2763  04B0  07AE               	addwf	main@i^(0+128),f
  2764  04B1  300A               	movlw	10
  2765  04B2  022E               	subwf	main@i^(0+128),w
  2766  04B3  1C03               	skipc
  2767  04B4  2C84               	goto	l159
  2768  04B5                     l2261:	
  2769                           
  2770                           ;main.c: 68: }
  2771                           ;main.c: 69: LATC &= ~(0b00000010 + 0b00000100);
  2772  04B5  30F9               	movlw	249
  2773  04B6  00AD               	movwf	??_main^(0+128)
  2774  04B7  082D               	movf	??_main^(0+128),w
  2775  04B8  0022               	movlb	2	; select bank2
  2776  04B9  058E               	andwf	14,f	;volatile
  2777  04BA                     l161:	
  2778                           ;main.c: 71: while(1)
  2779                           
  2780                           
  2781                           ;main.c: 72: {
  2782                           ;main.c: 73: if(IR_New_Code)
  2783  04BA  087D               	movf	_IR_New_Code,w
  2784  04BB  1903               	btfsc	3,2
  2785  04BC  2CBA               	goto	l161
  2786                           
  2787                           ;main.c: 74: {
  2788                           ;main.c: 76: UseIRCode(&IR_New_Code,IR_NEC);
  2789  04BD  0020               	movlb	0	; select bank0
  2790  04BE  083F               	movf	_IR_NEC+3,w
  2791  04BF  0021               	movlb	1	; select bank1
  2792  04C0  00A9               	movwf	(UseIRCode@NEC+3)^(0+128)
  2793  04C1  0020               	movlb	0	; select bank0
  2794  04C2  083E               	movf	_IR_NEC+2,w
  2795  04C3  0021               	movlb	1	; select bank1
  2796  04C4  00A8               	movwf	(UseIRCode@NEC+2)^(0+128)
  2797  04C5  0020               	movlb	0	; select bank0
  2798  04C6  083D               	movf	_IR_NEC+1,w
  2799  04C7  0021               	movlb	1	; select bank1
  2800  04C8  00A7               	movwf	(UseIRCode@NEC+1)^(0+128)
  2801  04C9  0020               	movlb	0	; select bank0
  2802  04CA  083C               	movf	_IR_NEC,w
  2803  04CB  0021               	movlb	1	; select bank1
  2804  04CC  00A6               	movwf	UseIRCode@NEC^(0+128)
  2805  04CD  307D               	movlw	(low (_IR_New_Code| 0))& (0+255)
  2806  04CE  3185  2517  3184   	fcall	_UseIRCode
  2807  04D1  2CBA               	goto	l161
  2808  04D2                     __end_of_main:	
  2809                           
  2810                           	psect	text1
  2811  05FA                     __ptext1:	
  2812 ;; *************** function _init_Timers *****************
  2813 ;; Defined at:
  2814 ;;		line 48 in file "Timer.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2828 ;;      Params:         0       0       0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    4
  2835 ;; This function calls:
  2836 ;;		_Timer1Init
  2837 ;;		_Timer2Init
  2838 ;;		_Timer4Init
  2839 ;;		_Timer6Init
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _init_Timers
  2847  05FA                     _init_Timers:	
  2848                           
  2849                           ;Timer.c: 50: Timer1Init();
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _init_Timers: [wreg+status,2+status,0+pclath+cstack]
  2853  05FA  3185  25A4  3185   	fcall	_Timer1Init
  2854                           
  2855                           ;Timer.c: 51: Timer2Init();
  2856  05FD  3185  2590  3185   	fcall	_Timer2Init
  2857                           
  2858                           ;Timer.c: 52: Timer4Init();
  2859  0600  3186  2612  3185   	fcall	_Timer4Init
  2860                           
  2861                           ;Timer.c: 53: Timer6Init();
  2862  0603  3186  2606         	fcall	_Timer6Init
  2863  0605  0008               	return
  2864  0606                     __end_of_init_Timers:	
  2865                           
  2866                           	psect	text2
  2867  0606                     __ptext2:	
  2868 ;; *************** function _Timer6Init *****************
  2869 ;; Defined at:
  2870 ;;		line 229 in file "Timer.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2884 ;;      Params:         0       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    3
  2891 ;; This function calls:
  2892 ;;		_Timer6OFF
  2893 ;; This function is called by:
  2894 ;;		_init_Timers
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _Timer6Init
  2900  0606                     _Timer6Init:	
  2901                           
  2902                           ;Timer.c: 233: T6CONbits.T6OUTPS = 0xF;
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _Timer6Init: [wreg+status,2+status,0+pclath+cstack]
  2906  0606  3078               	movlw	120
  2907  0607  0028               	movlb	8	; select bank8
  2908  0608  049E               	iorwf	30,f	;volatile
  2909                           
  2910                           ;Timer.c: 239: T6CONbits.T6CKPS = 0x2;
  2911  0609  081E               	movf	30,w	;volatile
  2912  060A  39FC               	andlw	-4
  2913  060B  3802               	iorlw	2
  2914  060C  009E               	movwf	30	;volatile
  2915                           
  2916                           ;Timer.c: 241: PR6 = 0xFF;
  2917  060D  30FF               	movlw	255
  2918  060E  009D               	movwf	29	;volatile
  2919                           
  2920                           ;Timer.c: 242: Timer6OFF();
  2921  060F  3187  2717         	fcall	_Timer6OFF
  2922  0611  0008               	return
  2923  0612                     __end_of_Timer6Init:	
  2924                           
  2925                           	psect	text3
  2926  0612                     __ptext3:	
  2927 ;; *************** function _Timer4Init *****************
  2928 ;; Defined at:
  2929 ;;		line 165 in file "Timer.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2943 ;;      Params:         0       0       0       0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    3
  2950 ;; This function calls:
  2951 ;;		_Timer4OFF
  2952 ;; This function is called by:
  2953 ;;		_init_Timers
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function _Timer4Init
  2959  0612                     _Timer4Init:	
  2960                           
  2961                           ;Timer.c: 169: T4CONbits.T4OUTPS = 0xF;
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _Timer4Init: [wreg+status,2+status,0+pclath+cstack]
  2965  0612  3078               	movlw	120
  2966  0613  0028               	movlb	8	; select bank8
  2967  0614  0497               	iorwf	23,f	;volatile
  2968                           
  2969                           ;Timer.c: 175: T4CONbits.T4CKPS = 0x2;
  2970  0615  0817               	movf	23,w	;volatile
  2971  0616  39FC               	andlw	-4
  2972  0617  3802               	iorlw	2
  2973  0618  0097               	movwf	23	;volatile
  2974                           
  2975                           ;Timer.c: 177: PR4 = 0xFF;
  2976  0619  30FF               	movlw	255
  2977  061A  0096               	movwf	22	;volatile
  2978                           
  2979                           ;Timer.c: 178: Timer4OFF();
  2980  061B  3187  2709         	fcall	_Timer4OFF
  2981  061D  0008               	return
  2982  061E                     __end_of_Timer4Init:	
  2983                           
  2984                           	psect	text4
  2985  0709                     __ptext4:	
  2986 ;; *************** function _Timer4OFF *****************
  2987 ;; Defined at:
  2988 ;;		line 197 in file "Timer.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;		None               void
  2995 ;; Registers used:
  2996 ;;		None
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3002 ;;      Params:         0       0       0       0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    2
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_Timer4Init
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _Timer4OFF
  3018  0709                     _Timer4OFF:	
  3019                           
  3020                           ;Timer.c: 199: T4CONbits.TMR4ON = 0;
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _Timer4OFF: []
  3024  0709  0028               	movlb	8	; select bank8
  3025  070A  1117               	bcf	23,2	;volatile
  3026                           
  3027                           ;Timer.c: 200: PIR2bits.TMR4IF = 0;
  3028  070B  0020               	movlb	0	; select bank0
  3029  070C  1092               	bcf	18,1	;volatile
  3030                           
  3031                           ;Timer.c: 201: PIE2bits.TMR4IE = 0;
  3032  070D  0021               	movlb	1	; select bank1
  3033  070E  1092               	bcf	18,1	;volatile
  3034  070F  0008               	return
  3035  0710                     __end_of_Timer4OFF:	
  3036                           
  3037                           	psect	text5
  3038  0590                     __ptext5:	
  3039 ;; *************** function _Timer2Init *****************
  3040 ;; Defined at:
  3041 ;;		line 119 in file "Timer.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3055 ;;      Params:         0       0       0       0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		_Timer2OFF
  3064 ;; This function is called by:
  3065 ;;		_init_Timers
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _Timer2Init
  3071  0590                     _Timer2Init:	
  3072                           
  3073                           ;Timer.c: 123: T2CONbits.T2OUTPS = 0xE;
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _Timer2Init: [wreg+status,2+status,0+pclath+cstack]
  3077  0590  0020               	movlb	0	; select bank0
  3078  0591  081C               	movf	28,w	;volatile
  3079  0592  3987               	andlw	-121
  3080  0593  3870               	iorlw	112
  3081  0594  009C               	movwf	28	;volatile
  3082                           
  3083                           ;Timer.c: 129: T2CONbits.T2CKPS = 0x1;
  3084  0595  081C               	movf	28,w	;volatile
  3085  0596  39FC               	andlw	-4
  3086  0597  3801               	iorlw	1
  3087  0598  009C               	movwf	28	;volatile
  3088                           
  3089                           ;Timer.c: 132: CCP2CONbits.CCP2M = 0b1010;
  3090  0599  0025               	movlb	5	; select bank5
  3091  059A  081A               	movf	26,w	;volatile
  3092  059B  39F0               	andlw	-16
  3093  059C  380A               	iorlw	10
  3094  059D  009A               	movwf	26	;volatile
  3095                           
  3096                           ;Timer.c: 133: PR2 = 0xFF;
  3097  059E  30FF               	movlw	255
  3098  059F  0020               	movlb	0	; select bank0
  3099  05A0  009B               	movwf	27	;volatile
  3100                           
  3101                           ;Timer.c: 134: Timer2OFF();
  3102  05A1  3187  272C         	fcall	_Timer2OFF
  3103  05A3  0008               	return
  3104  05A4                     __end_of_Timer2Init:	
  3105                           
  3106                           	psect	text6
  3107  072C                     __ptext6:	
  3108 ;; *************** function _Timer2OFF *****************
  3109 ;; Defined at:
  3110 ;;		line 153 in file "Timer.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;		None               void
  3117 ;; Registers used:
  3118 ;;		None
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3124 ;;      Params:         0       0       0       0       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0
  3127 ;;      Totals:         0       0       0       0       0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    2
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_Timer2Init
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _Timer2OFF
  3140  072C                     _Timer2OFF:	
  3141                           
  3142                           ;Timer.c: 155: T2CONbits.TMR2ON = 0;
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in _Timer2OFF: []
  3146  072C  0020               	movlb	0	; select bank0
  3147  072D  111C               	bcf	28,2	;volatile
  3148                           
  3149                           ;Timer.c: 156: PIR1bits.TMR2IF = 0;
  3150  072E  1091               	bcf	17,1	;volatile
  3151                           
  3152                           ;Timer.c: 157: PIE1bits.TMR2IE = 0;
  3153  072F  0021               	movlb	1	; select bank1
  3154  0730  1091               	bcf	17,1	;volatile
  3155  0731  0008               	return
  3156  0732                     __end_of_Timer2OFF:	
  3157                           
  3158                           	psect	text7
  3159  0710                     __ptext7:	
  3160 ;; *************** function _init_IR *****************
  3161 ;; Defined at:
  3162 ;;		line 65 in file "IR.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;		None               void
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3176 ;;      Params:         0       0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_Enable_IR
  3185 ;;		_Timer1Init
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _init_IR
  3193  0710                     _init_IR:	
  3194                           
  3195                           ;IR.c: 67: Enable_IR();
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _init_IR: [wreg+status,2+status,0+pclath+cstack]
  3199  0710  3187  2756  3187   	fcall	_Enable_IR
  3200                           
  3201                           ;IR.c: 69: INTCONbits.IOCIE = 1;
  3202  0713  158B               	bsf	11,3	;volatile
  3203                           
  3204                           ;IR.c: 70: Timer1Init();
  3205  0714  3185  25A4         	fcall	_Timer1Init
  3206  0716  0008               	return
  3207  0717                     __end_of_init_IR:	
  3208                           
  3209                           	psect	text8
  3210  05A4                     __ptext8:	
  3211 ;; *************** function _Timer1Init *****************
  3212 ;; Defined at:
  3213 ;;		line 61 in file "Timer.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;		None               void
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3227 ;;      Params:         0       0       0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    3
  3234 ;; This function calls:
  3235 ;;		_Reset_Timer1
  3236 ;;		_Stop_Timer1
  3237 ;; This function is called by:
  3238 ;;		_init_Timers
  3239 ;;		_init_IR
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _Timer1Init
  3245  05A4                     _Timer1Init:	
  3246                           
  3247                           ;Timer.c: 64: T1CONbits.TMR1CS = 0x0;
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _Timer1Init: [wreg+status,2+status,0+pclath+cstack]
  3251  05A4  303F               	movlw	-193
  3252  05A5  0020               	movlb	0	; select bank0
  3253  05A6  0598               	andwf	24,f	;volatile
  3254                           
  3255                           ;Timer.c: 66: T1CONbits.T1CKPS = 0x3;
  3256  05A7  3030               	movlw	48
  3257  05A8  0498               	iorwf	24,f	;volatile
  3258                           
  3259                           ;Timer.c: 68: CCP1CONbits.CCP1M = 0b1010;
  3260  05A9  0025               	movlb	5	; select bank5
  3261  05AA  0813               	movf	19,w	;volatile
  3262  05AB  39F0               	andlw	-16
  3263  05AC  380A               	iorlw	10
  3264  05AD  0093               	movwf	19	;volatile
  3265                           
  3266                           ;Timer.c: 70: PIE1bits.TMR1IE = 0;
  3267  05AE  0021               	movlb	1	; select bank1
  3268  05AF  1011               	bcf	17,0	;volatile
  3269                           
  3270                           ;Timer.c: 72: Reset_Timer1();
  3271  05B0  3187  2752  3185   	fcall	_Reset_Timer1
  3272                           
  3273                           ;Timer.c: 73: Stop_Timer1();
  3274  05B3  3187  275E         	fcall	_Stop_Timer1
  3275  05B5  0008               	return
  3276  05B6                     __end_of_Timer1Init:	
  3277                           
  3278                           	psect	text9
  3279  075E                     __ptext9:	
  3280 ;; *************** function _Stop_Timer1 *****************
  3281 ;; Defined at:
  3282 ;;		line 81 in file "Timer.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		None
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3296 ;;      Params:         0       0       0       0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0
  3299 ;;      Totals:         0       0       0       0       0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    2
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_Timer1Init
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _Stop_Timer1
  3312  075E                     _Stop_Timer1:	
  3313                           
  3314                           ;Timer.c: 84: T1CONbits.TMR1ON =0;
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _Stop_Timer1: []
  3318  075E  0020               	movlb	0	; select bank0
  3319  075F  1018               	bcf	24,0	;volatile
  3320  0760  0008               	return
  3321  0761                     __end_of_Stop_Timer1:	
  3322                           
  3323                           	psect	text10
  3324  0752                     __ptext10:	
  3325 ;; *************** function _Reset_Timer1 *****************
  3326 ;; Defined at:
  3327 ;;		line 103 in file "Timer.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		status,2
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3341 ;;      Params:         0       0       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    2
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_Timer1Init
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _Reset_Timer1
  3357  0752                     _Reset_Timer1:	
  3358                           
  3359                           ;Timer.c: 109: TMR1H = 0;
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _Reset_Timer1: [status,2]
  3363  0752  0020               	movlb	0	; select bank0
  3364  0753  0197               	clrf	23	;volatile
  3365                           
  3366                           ;Timer.c: 110: TMR1L = 0;
  3367  0754  0196               	clrf	22	;volatile
  3368  0755  0008               	return
  3369  0756                     __end_of_Reset_Timer1:	
  3370                           
  3371                           	psect	text11
  3372  0756                     __ptext11:	
  3373 ;; *************** function _Enable_IR *****************
  3374 ;; Defined at:
  3375 ;;		line 78 in file "IR.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;		None               void
  3382 ;; Registers used:
  3383 ;;		None
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3389 ;;      Params:         0       0       0       0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    2
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_init_IR
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _Enable_IR
  3405  0756                     _Enable_IR:	
  3406                           
  3407                           ;IR.c: 81: IOCCPbits.IOCCP4 = 1;
  3408                           
  3409                           ;incstack = 0
  3410                           ; Regs used in _Enable_IR: []
  3411  0756  0027               	movlb	7	; select bank7
  3412  0757  1617               	bsf	23,4	;volatile
  3413                           
  3414                           ;IR.c: 83: IOCCNbits.IOCCN4 = 1;
  3415  0758  1618               	bsf	24,4	;volatile
  3416  0759  0008               	return
  3417  075A                     __end_of_Enable_IR:	
  3418                           
  3419                           	psect	text12
  3420  055B                     __ptext12:	
  3421 ;; *************** function _delayUS *****************
  3422 ;; Defined at:
  3423 ;;		line 50 in file "MISC.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  US              4    0[BANK1 ] long 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  i               4    5[BANK1 ] long 
  3428 ;;  j               1    9[BANK1 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;		None               void
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3438 ;;      Params:         0       0       4       0       0       0       0       0
  3439 ;;      Locals:         0       0       5       0       0       0       0       0
  3440 ;;      Temps:          0       0       1       0       0       0       0       0
  3441 ;;      Totals:         0       0      10       0       0       0       0       0
  3442 ;;Total ram usage:       10 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    2
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _delayUS
  3454  055B                     _delayUS:	
  3455                           
  3456                           ;MISC.c: 52: long i;
  3457                           ;MISC.c: 53: unsigned char j;
  3458                           ;MISC.c: 54: for(i=0;i<US;i+=31)
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _delayUS: [wreg+status,2+status,0]
  3462  055B  3000               	movlw	0
  3463  055C  0021               	movlb	1	; select bank1
  3464  055D  00A8               	movwf	(delayUS@i+3)^(0+128)
  3465  055E  3000               	movlw	0
  3466  055F  00A7               	movwf	(delayUS@i+2)^(0+128)
  3467  0560  3000               	movlw	0
  3468  0561  00A6               	movwf	(delayUS@i+1)^(0+128)
  3469  0562  3000               	movlw	0
  3470  0563  00A5               	movwf	delayUS@i^(0+128)
  3471  0564                     l195:	
  3472  0564  0828               	movf	(delayUS@i+3)^(0+128),w
  3473  0565  3A80               	xorlw	128
  3474  0566  00A4               	movwf	??_delayUS^(0+128)
  3475  0567  0823               	movf	(delayUS@US+3)^(0+128),w
  3476  0568  3A80               	xorlw	128
  3477  0569  0224               	subwf	??_delayUS^(0+128),w
  3478  056A  1D03               	skipz
  3479  056B  2D76               	goto	u1693
  3480  056C  0822               	movf	(delayUS@US+2)^(0+128),w
  3481  056D  0227               	subwf	(delayUS@i+2)^(0+128),w
  3482  056E  1D03               	skipz
  3483  056F  2D76               	goto	u1693
  3484  0570  0821               	movf	(delayUS@US+1)^(0+128),w
  3485  0571  0226               	subwf	(delayUS@i+1)^(0+128),w
  3486  0572  1D03               	skipz
  3487  0573  2D76               	goto	u1693
  3488  0574  0820               	movf	delayUS@US^(0+128),w
  3489  0575  0225               	subwf	delayUS@i^(0+128),w
  3490  0576                     u1693:	
  3491  0576  1803               	btfsc	3,0
  3492  0577  0008               	return
  3493                           
  3494                           ;MISC.c: 55: {
  3495                           ;MISC.c: 56: for(j=0;j<8;j++)
  3496  0578  01A9               	clrf	delayUS@j^(0+128)
  3497  0579  3008               	movlw	8
  3498  057A  0229               	subwf	delayUS@j^(0+128),w
  3499  057B  1803               	btfsc	3,0
  3500  057C  2D87               	goto	l2209
  3501  057D                     l197:	
  3502                           
  3503                           ;MISC.c: 57: {
  3504                           ;MISC.c: 58: __nop();
  3505  057D  0000               	nop
  3506  057E  3001               	movlw	1
  3507  057F  0021               	movlb	1	; select bank1
  3508  0580  00A4               	movwf	??_delayUS^(0+128)
  3509  0581  0824               	movf	??_delayUS^(0+128),w
  3510  0582  07A9               	addwf	delayUS@j^(0+128),f
  3511  0583  3008               	movlw	8
  3512  0584  0229               	subwf	delayUS@j^(0+128),w
  3513  0585  1C03               	skipc
  3514  0586  2D7D               	goto	l197
  3515  0587                     l2209:	
  3516  0587  301F               	movlw	31
  3517  0588  07A5               	addwf	delayUS@i^(0+128),f
  3518  0589  3000               	movlw	0
  3519  058A  3DA6               	addwfc	(delayUS@i+1)^(0+128),f
  3520  058B  3000               	movlw	0
  3521  058C  3DA7               	addwfc	(delayUS@i+2)^(0+128),f
  3522  058D  3000               	movlw	0
  3523  058E  3DA8               	addwfc	(delayUS@i+3)^(0+128),f
  3524  058F  2D64               	goto	l195
  3525  0590                     __end_of_delayUS:	
  3526                           
  3527                           	psect	text13
  3528  0517                     __ptext13:	
  3529 ;; *************** function _UseIRCode *****************
  3530 ;; Defined at:
  3531 ;;		line 280 in file "IR.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  Code            1    wreg     PTR unsigned char 
  3534 ;;		 -> IR_New_Code(1), 
  3535 ;;  NEC             4    6[BANK1 ] unsigned long 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  Code            1   12[BANK1 ] PTR unsigned char 
  3538 ;;		 -> IR_New_Code(1), 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3548 ;;      Params:         0       0       4       0       0       0       0       0
  3549 ;;      Locals:         0       0       1       0       0       0       0       0
  3550 ;;      Temps:          0       0       2       0       0       0       0       0
  3551 ;;      Totals:         0       0       7       0       0       0       0       0
  3552 ;;Total ram usage:        7 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    4
  3555 ;; This function calls:
  3556 ;;		_SendRF
  3557 ;;		_Set_Timer6
  3558 ;;		_Timer6OFF
  3559 ;;		_Timer6ON
  3560 ;;		_Timer6Reset
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _UseIRCode
  3568  0517                     _UseIRCode:	
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _UseIRCode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3572                           ;UseIRCode@Code stored from wreg
  3573  0517  0021               	movlb	1	; select bank1
  3574  0518  00AC               	movwf	UseIRCode@Code^(0+128)
  3575                           
  3576                           ;IR.c: 282: Timer6OFF();
  3577  0519  3187  2717  3185   	fcall	_Timer6OFF
  3578                           
  3579                           ;IR.c: 283: Timer6Reset();
  3580  051C  3187  2761  3185   	fcall	_Timer6Reset
  3581                           
  3582                           ;IR.c: 284: if(*Code == 2)
  3583  051F  0021               	movlb	1	; select bank1
  3584  0520  082C               	movf	UseIRCode@Code^(0+128),w
  3585  0521  0086               	movwf	6
  3586  0522  0187               	clrf	7
  3587  0523  3002               	movlw	2
  3588  0524  0601               	xorwf	1,w
  3589  0525  1D03               	btfss	3,2
  3590  0526  2D29               	goto	l2217
  3591                           
  3592                           ;IR.c: 285: {
  3593                           ;IR.c: 286: LATC |= 0b00000100;
  3594  0527  0022               	movlb	2	; select bank2
  3595  0528  150E               	bsf	14,2	;volatile
  3596  0529                     l2217:	
  3597                           
  3598                           ;IR.c: 287: }
  3599                           ;IR.c: 288: if(NEC == 0x1CE350AF)
  3600  0529  30AF               	movlw	175
  3601  052A  0021               	movlb	1	; select bank1
  3602  052B  0626               	xorwf	UseIRCode@NEC^(0+128),w
  3603  052C  3050               	movlw	80
  3604  052D  1903               	skipnz
  3605  052E  0627               	xorwf	(UseIRCode@NEC+1)^(0+128),w
  3606  052F  30E3               	movlw	227
  3607  0530  1903               	skipnz
  3608  0531  0628               	xorwf	(UseIRCode@NEC+2)^(0+128),w
  3609  0532  301C               	movlw	28
  3610  0533  1903               	skipnz
  3611  0534  0629               	xorwf	(UseIRCode@NEC+3)^(0+128),w
  3612  0535  1D03               	btfss	3,2
  3613  0536  2D47               	goto	l454
  3614                           
  3615                           ;IR.c: 289: {
  3616                           ;IR.c: 290: LATC |= 0b00000001;
  3617  0537  0022               	movlb	2	; select bank2
  3618  0538  140E               	bsf	14,0	;volatile
  3619                           
  3620                           ;IR.c: 291: SendRF(ChannelF, 12, 10);
  3621  0539  300C               	movlw	12
  3622  053A  0021               	movlb	1	; select bank1
  3623  053B  00AA               	movwf	??_UseIRCode^(0+128)
  3624  053C  082A               	movf	??_UseIRCode^(0+128),w
  3625  053D  00A0               	movwf	SendRF@size^(0+128)
  3626  053E  300A               	movlw	10
  3627  053F  00AB               	movwf	(??_UseIRCode+1)^(0+128)
  3628  0540  082B               	movf	(??_UseIRCode+1)^(0+128),w
  3629  0541  00A1               	movwf	SendRF@RepeatAmount^(0+128)
  3630  0542  3054               	movlw	(low (_ChannelF| 0))& (0+255)
  3631  0543  3184  24D2  3185   	fcall	_SendRF
  3632                           
  3633                           ;IR.c: 292: }
  3634  0546  2D49               	goto	l2223
  3635  0547                     l454:	
  3636                           
  3637                           ;IR.c: 293: else
  3638                           ;IR.c: 294: {
  3639                           ;IR.c: 295: LATC |= 0b00000010;
  3640  0547  0022               	movlb	2	; select bank2
  3641  0548  148E               	bsf	14,1	;volatile
  3642  0549                     l2223:	
  3643                           ;IR.c: 296: }
  3644                           ;IR.c: 297: while(!Sent);
  3645                           
  3646  0549  0020               	movlb	0	; select bank0
  3647  054A  0853               	movf	_Sent,w	;volatile
  3648  054B  1903               	btfsc	3,2
  3649  054C  2D49               	goto	l2223
  3650                           
  3651                           ;IR.c: 298: Set_Timer6(0xFF);
  3652  054D  30FF               	movlw	255
  3653  054E  3187  2732  3185   	fcall	_Set_Timer6
  3654                           
  3655                           ;IR.c: 299: PIR2bits.TMR6IF = 0;
  3656  0551  0020               	movlb	0	; select bank0
  3657  0552  1112               	bcf	18,2	;volatile
  3658                           
  3659                           ;IR.c: 300: Timer6ON();
  3660  0553  3187  273E         	fcall	_Timer6ON
  3661                           
  3662                           ;IR.c: 301: *Code = 0;
  3663  0555  0021               	movlb	1	; select bank1
  3664  0556  082C               	movf	UseIRCode@Code^(0+128),w
  3665  0557  0086               	movwf	6
  3666  0558  0187               	clrf	7
  3667  0559  0181               	clrf	1
  3668  055A  0008               	return
  3669  055B                     __end_of_UseIRCode:	
  3670                           
  3671                           	psect	text14
  3672  0761                     __ptext14:	
  3673 ;; *************** function _Timer6Reset *****************
  3674 ;; Defined at:
  3675 ;;		line 273 in file "Timer.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		status,2
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3689 ;;      Params:         0       0       0       0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_UseIRCode
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _Timer6Reset
  3705  0761                     _Timer6Reset:	
  3706                           
  3707                           ;Timer.c: 275: TMR6 = 0;
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _Timer6Reset: [status,2]
  3711  0761  0028               	movlb	8	; select bank8
  3712  0762  019C               	clrf	28	;volatile
  3713  0763  0008               	return
  3714  0764                     __end_of_Timer6Reset:	
  3715                           
  3716                           	psect	text15
  3717  073E                     __ptext15:	
  3718 ;; *************** function _Timer6ON *****************
  3719 ;; Defined at:
  3720 ;;		line 250 in file "Timer.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;		None               void
  3727 ;; Registers used:
  3728 ;;		None
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3734 ;;      Params:         0       0       0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    2
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_UseIRCode
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _Timer6ON
  3750  073E                     _Timer6ON:	
  3751                           
  3752                           ;Timer.c: 252: T6CONbits.TMR6ON = 1;
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _Timer6ON: []
  3756  073E  0028               	movlb	8	; select bank8
  3757  073F  151E               	bsf	30,2	;volatile
  3758                           
  3759                           ;Timer.c: 253: PIE2bits.TMR6IE = 1;
  3760  0740  0021               	movlb	1	; select bank1
  3761  0741  1512               	bsf	18,2	;volatile
  3762  0742  0008               	return
  3763  0743                     __end_of_Timer6ON:	
  3764                           
  3765                           	psect	text16
  3766  0717                     __ptext16:	
  3767 ;; *************** function _Timer6OFF *****************
  3768 ;; Defined at:
  3769 ;;		line 261 in file "Timer.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		None
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3783 ;;      Params:         0       0       0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0
  3786 ;;      Totals:         0       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_Timer6Init
  3794 ;;		_UseIRCode
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _Timer6OFF
  3800  0717                     _Timer6OFF:	
  3801                           
  3802                           ;Timer.c: 263: T6CONbits.TMR6ON = 0;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _Timer6OFF: []
  3806  0717  0028               	movlb	8	; select bank8
  3807  0718  111E               	bcf	30,2	;volatile
  3808                           
  3809                           ;Timer.c: 264: PIR2bits.TMR6IF = 0;
  3810  0719  0020               	movlb	0	; select bank0
  3811  071A  1112               	bcf	18,2	;volatile
  3812                           
  3813                           ;Timer.c: 265: PIE2bits.TMR6IE = 0;
  3814  071B  0021               	movlb	1	; select bank1
  3815  071C  1112               	bcf	18,2	;volatile
  3816  071D  0008               	return
  3817  071E                     __end_of_Timer6OFF:	
  3818                           
  3819                           	psect	text17
  3820  0732                     __ptext17:	
  3821 ;; *************** function _Set_Timer6 *****************
  3822 ;; Defined at:
  3823 ;;		line 283 in file "Timer.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  time            1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  time            1    0[BANK1 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3837 ;;      Params:         0       0       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       1       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0
  3840 ;;      Totals:         0       0       1       0       0       0       0       0
  3841 ;;Total ram usage:        1 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_UseIRCode
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _Set_Timer6
  3853  0732                     _Set_Timer6:	
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _Set_Timer6: [wreg]
  3857                           ;Set_Timer6@time stored from wreg
  3858  0732  0021               	movlb	1	; select bank1
  3859  0733  00A0               	movwf	Set_Timer6@time^(0+128)
  3860                           
  3861                           ;Timer.c: 285: PR6 = time;
  3862  0734  0820               	movf	Set_Timer6@time^(0+128),w
  3863  0735  0028               	movlb	8	; select bank8
  3864  0736  009D               	movwf	29	;volatile
  3865  0737  0008               	return
  3866  0738                     __end_of_Set_Timer6:	
  3867                           
  3868                           	psect	text18
  3869  04D2                     __ptext18:	
  3870 ;; *************** function _SendRF *****************
  3871 ;; Defined at:
  3872 ;;		line 56 in file "RF.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  Code            1    wreg     PTR unsigned char 
  3875 ;;		 -> ChannelF(12), 
  3876 ;;  size            1    0[BANK1 ] unsigned char 
  3877 ;;  RepeatAmount    1    1[BANK1 ] unsigned char 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  Code            1    4[BANK1 ] PTR unsigned char 
  3880 ;;		 -> ChannelF(12), 
  3881 ;;  i               1    5[BANK1 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      unsigned char 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3891 ;;      Params:         0       0       2       0       0       0       0       0
  3892 ;;      Locals:         0       0       2       0       0       0       0       0
  3893 ;;      Temps:          0       0       2       0       0       0       0       0
  3894 ;;      Totals:         0       0       6       0       0       0       0       0
  3895 ;;Total ram usage:        6 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		_Timer2ON
  3900 ;; This function is called by:
  3901 ;;		_UseIRCode
  3902 ;;		_SendRF_wait
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           
  3907                           ;psect for function _SendRF
  3908  04D2                     _SendRF:	
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _SendRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3912                           ;SendRF@Code stored from wreg
  3913  04D2  0021               	movlb	1	; select bank1
  3914  04D3  00A4               	movwf	SendRF@Code^(0+128)
  3915                           
  3916                           ;RF.c: 58: unsigned char i;
  3917                           ;RF.c: 59: if(Sent == 1)
  3918  04D4  0020               	movlb	0	; select bank0
  3919  04D5  0353               	decf	_Sent,w	;volatile
  3920  04D6  1D03               	btfss	3,2
  3921  04D7  2D15               	goto	l2167
  3922                           
  3923                           ;RF.c: 60: {
  3924                           ;RF.c: 62: Sent = 0;
  3925  04D8  01D3               	clrf	_Sent	;volatile
  3926                           
  3927                           ;RF.c: 63: Sendcount = RepeatAmount;
  3928  04D9  0021               	movlb	1	; select bank1
  3929  04DA  0821               	movf	SendRF@RepeatAmount^(0+128),w
  3930  04DB  00A2               	movwf	??_SendRF^(0+128)
  3931  04DC  0822               	movf	??_SendRF^(0+128),w
  3932  04DD  0020               	movlb	0	; select bank0
  3933  04DE  00BB               	movwf	_Sendcount	;volatile
  3934                           
  3935                           ;RF.c: 64: RFsendFlag = 1;
  3936  04DF  3001               	movlw	1
  3937  04E0  0021               	movlb	1	; select bank1
  3938  04E1  00A2               	movwf	??_SendRF^(0+128)
  3939  04E2  0822               	movf	??_SendRF^(0+128),w
  3940  04E3  00FC               	movwf	_RFsendFlag	;volatile
  3941                           
  3942                           ;RF.c: 65: RFcodeBit = 0;
  3943  04E4  01FA               	clrf	_RFcodeBit
  3944                           
  3945                           ;RF.c: 66: RFcodePlace = 1;
  3946  04E5  01FB               	clrf	_RFcodePlace
  3947  04E6  0AFB               	incf	_RFcodePlace,f
  3948                           
  3949                           ;RF.c: 69: if(size >= 20)
  3950  04E7  3014               	movlw	20
  3951  04E8  0220               	subwf	SendRF@size^(0+128),w
  3952  04E9  1C03               	skipc
  3953  04EA  2CED               	goto	l2147
  3954                           
  3955                           ;RF.c: 70: {
  3956                           ;RF.c: 71: return 0;
  3957  04EB  3000               	movlw	0
  3958  04EC  0008               	return
  3959  04ED                     l2147:	
  3960                           
  3961                           ;RF.c: 72: }
  3962                           ;RF.c: 73: for(i=0;i<size;i++)
  3963  04ED  01A5               	clrf	SendRF@i^(0+128)
  3964  04EE                     l2153:	
  3965  04EE  0820               	movf	SendRF@size^(0+128),w
  3966  04EF  0225               	subwf	SendRF@i^(0+128),w
  3967  04F0  1803               	btfsc	3,0
  3968  04F1  2D05               	goto	l2155
  3969                           
  3970                           ;RF.c: 74: {
  3971                           ;RF.c: 75: RFsendCode[i] = Code[i];
  3972  04F2  0825               	movf	SendRF@i^(0+128),w
  3973  04F3  0724               	addwf	SendRF@Code^(0+128),w
  3974  04F4  00A2               	movwf	??_SendRF^(0+128)
  3975  04F5  0822               	movf	??_SendRF^(0+128),w
  3976  04F6  0086               	movwf	6
  3977  04F7  0187               	clrf	7
  3978  04F8  0801               	movf	1,w
  3979  04F9  00A3               	movwf	(??_SendRF+1)^(0+128)
  3980  04FA  0825               	movf	SendRF@i^(0+128),w
  3981  04FB  3E20               	addlw	(low (_RFsendCode| 0))& (0+255)
  3982  04FC  0086               	movwf	6
  3983  04FD  0187               	clrf	7
  3984  04FE  0823               	movf	(??_SendRF+1)^(0+128),w
  3985  04FF  0081               	movwf	1
  3986  0500  3001               	movlw	1
  3987  0501  00A2               	movwf	??_SendRF^(0+128)
  3988  0502  0822               	movf	??_SendRF^(0+128),w
  3989  0503  07A5               	addwf	SendRF@i^(0+128),f
  3990  0504  2CEE               	goto	l2153
  3991  0505                     l2155:	
  3992                           
  3993                           ;RF.c: 76: }
  3994                           ;RF.c: 77: RFsendCode[i] = 99;
  3995  0505  3063               	movlw	99
  3996  0506  00A2               	movwf	??_SendRF^(0+128)
  3997  0507  0825               	movf	SendRF@i^(0+128),w
  3998  0508  3E20               	addlw	(low (_RFsendCode| 0))& (0+255)
  3999  0509  0086               	movwf	6
  4000  050A  0187               	clrf	7
  4001  050B  0822               	movf	??_SendRF^(0+128),w
  4002  050C  0081               	movwf	1
  4003                           
  4004                           ;RF.c: 79: TMR2 = 0;
  4005  050D  0020               	movlb	0	; select bank0
  4006  050E  019A               	clrf	26	;volatile
  4007                           
  4008                           ;RF.c: 80: (PR2 = 240);
  4009  050F  30F0               	movlw	240
  4010  0510  009B               	movwf	27	;volatile
  4011                           
  4012                           ;RF.c: 81: Timer2ON();
  4013  0511  3187  2743         	fcall	_Timer2ON
  4014                           
  4015                           ;RF.c: 82: return 1;
  4016  0513  3001               	movlw	1
  4017  0514  0008               	return
  4018  0515                     l2167:	
  4019                           
  4020                           ;RF.c: 83: }
  4021                           ;RF.c: 84: return 2;
  4022  0515  3002               	movlw	2
  4023  0516  0008               	return
  4024  0517                     __end_of_SendRF:	
  4025                           
  4026                           	psect	text19
  4027  0743                     __ptext19:	
  4028 ;; *************** function _Timer2ON *****************
  4029 ;; Defined at:
  4030 ;;		line 142 in file "Timer.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;		None               void
  4037 ;; Registers used:
  4038 ;;		None
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4044 ;;      Params:         0       0       0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    2
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_SendRF
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _Timer2ON
  4060  0743                     _Timer2ON:	
  4061                           
  4062                           ;Timer.c: 144: T2CONbits.TMR2ON = 1;
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _Timer2ON: []
  4066  0743  0020               	movlb	0	; select bank0
  4067  0744  151C               	bsf	28,2	;volatile
  4068                           
  4069                           ;Timer.c: 145: PIE1bits.TMR2IE = 1;
  4070  0745  0021               	movlb	1	; select bank1
  4071  0746  1491               	bsf	17,1	;volatile
  4072  0747  0008               	return
  4073  0748                     __end_of_Timer2ON:	
  4074                           
  4075                           	psect	text20
  4076  05B6                     __ptext20:	
  4077 ;; *************** function _InitApp *****************
  4078 ;; Defined at:
  4079 ;;		line 53 in file "user.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		status,2
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4093 ;;      Params:         0       0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    2
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _InitApp
  4109  05B6                     _InitApp:	
  4110                           
  4111                           ;user.c: 55: TRISCbits.TRISC0 = 0;
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _InitApp: [status,2]
  4115  05B6  0021               	movlb	1	; select bank1
  4116  05B7  100E               	bcf	14,0	;volatile
  4117                           
  4118                           ;user.c: 56: TRISCbits.TRISC1 = 0;
  4119  05B8  108E               	bcf	14,1	;volatile
  4120                           
  4121                           ;user.c: 57: TRISCbits.TRISC2 = 0;
  4122  05B9  110E               	bcf	14,2	;volatile
  4123                           
  4124                           ;user.c: 58: TRISCbits.TRISC3 = 0;
  4125  05BA  118E               	bcf	14,3	;volatile
  4126                           
  4127                           ;user.c: 60: TRISCbits.TRISC5 = 1;
  4128  05BB  168E               	bsf	14,5	;volatile
  4129                           
  4130                           ;user.c: 61: TRISCbits.TRISC4 = 1;
  4131  05BC  160E               	bsf	14,4	;volatile
  4132                           
  4133                           ;user.c: 62: ANSELC = 0;
  4134  05BD  0023               	movlb	3	; select bank3
  4135  05BE  018E               	clrf	14	;volatile
  4136                           
  4137                           ;user.c: 63: SLRCONCbits.SLRC3 = 0;
  4138  05BF  0026               	movlb	6	; select bank6
  4139  05C0  118E               	bcf	14,3	;volatile
  4140                           
  4141                           ;user.c: 64: LATC =0;
  4142  05C1  0022               	movlb	2	; select bank2
  4143  05C2  018E               	clrf	14	;volatile
  4144                           
  4145                           ;user.c: 67: INTCONbits.PEIE = 1;
  4146  05C3  170B               	bsf	11,6	;volatile
  4147                           
  4148                           ;user.c: 68: INTCONbits.GIE = 1;
  4149  05C4  178B               	bsf	11,7	;volatile
  4150  05C5  0008               	return
  4151  05C6                     __end_of_InitApp:	
  4152                           
  4153                           	psect	text21
  4154  05D5                     __ptext21:	
  4155 ;; *************** function _ConfigureOscillator *****************
  4156 ;; Defined at:
  4157 ;;		line 48 in file "system.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;		None               void
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4171 ;;      Params:         0       0       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    2
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _ConfigureOscillator
  4187  05D5                     _ConfigureOscillator:	
  4188                           
  4189                           ;system.c: 50: OSCCONbits.IRCF = 0xE;
  4190                           
  4191                           ;incstack = 0
  4192                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  4193  05D5  0021               	movlb	1	; select bank1
  4194  05D6  0819               	movf	25,w	;volatile
  4195  05D7  3987               	andlw	-121
  4196  05D8  3870               	iorlw	112
  4197  05D9  0099               	movwf	25	;volatile
  4198                           
  4199                           ;system.c: 56: OSCCONbits.SPLLEN = 0;
  4200  05DA  1399               	bcf	25,7	;volatile
  4201  05DB                     l2177:	
  4202                           ;system.c: 59: while(!(OSCSTAT & HFIOFS));
  4203                           
  4204  05DB  3000               	movlw	0
  4205  05DC  181A               	btfsc	26,0	;volatile
  4206  05DD  3001               	movlw	1
  4207  05DE  051A               	andwf	26,w	;volatile
  4208  05DF  1D03               	btfss	3,2
  4209  05E0  0008               	return
  4210  05E1  2DDB               	goto	l2177
  4211  05E2                     __end_of_ConfigureOscillator:	
  4212                           
  4213                           	psect	intentry
  4214  0004                     __pintentry:	
  4215 ;; *************** function _isr *****************
  4216 ;; Defined at:
  4217 ;;		line 60 in file "interrupts.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;		None               void
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4231 ;;      Params:         0       0       0       0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0
  4233 ;;      Temps:          0       9       0       0       0       0       0       0
  4234 ;;      Totals:         0       9       0       0       0       0       0       0
  4235 ;;Total ram usage:        9 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    1
  4238 ;; This function calls:
  4239 ;;		_IRrawToNEC
  4240 ;;		_Set_Timer4
  4241 ;;		_Start_Timer1
  4242 ;;		_Timer4ON
  4243 ;;		_Timer4Reset
  4244 ;;		i1_Reset_Timer1
  4245 ;;		i1_Stop_Timer1
  4246 ;;		i1_Timer2OFF
  4247 ;;		i1_Timer4OFF
  4248 ;;		i1_Timer6OFF
  4249 ;; This function is called by:
  4250 ;;		Interrupt level 1
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254  0004                     _isr:	
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4258  0004  3180               	pagesel	$
  4259  0005  0020               	movlb	0	; select bank0
  4260  0006  087F               	movf	127,w
  4261  0007  00D0               	movwf	??_isr+8
  4262                           
  4263                           ;interrupts.c: 64: INTCONbits.GIE = 0;
  4264  0008  138B               	bcf	11,7	;volatile
  4265                           
  4266                           ;interrupts.c: 65: if(PIR1bits.TMR2IF)
  4267  0009  1C91               	btfss	17,1	;volatile
  4268  000A  28C8               	goto	i1l77
  4269                           
  4270                           ;interrupts.c: 66: {
  4271                           ;interrupts.c: 69: PIE1bits.TMR2IE = 0;
  4272  000B  0021               	movlb	1	; select bank1
  4273  000C  1091               	bcf	17,1	;volatile
  4274                           
  4275                           ;interrupts.c: 71: if(RFsendCode[RFcodeBit] != 99)
  4276  000D  087A               	movf	_RFcodeBit,w
  4277  000E  3E20               	addlw	(low (_RFsendCode| 0))& (0+255)
  4278  000F  0086               	movwf	6
  4279  0010  0187               	clrf	7
  4280  0011  3063               	movlw	99
  4281  0012  0601               	xorwf	1,w
  4282  0013  1903               	btfsc	3,2
  4283  0014  2886               	goto	i1l1923
  4284                           
  4285                           ;interrupts.c: 72: {
  4286                           ;interrupts.c: 74: if(RFsendFlag)
  4287  0015  087C               	movf	_RFsendFlag,w	;volatile
  4288  0016  1903               	btfsc	3,2
  4289  0017  28C0               	goto	i1l1963
  4290                           
  4291                           ;interrupts.c: 75: {
  4292                           ;interrupts.c: 76: if(RFsendCode[RFcodeBit] == 0)
  4293  0018  087A               	movf	_RFcodeBit,w
  4294  0019  3E20               	addlw	(low (_RFsendCode| 0))& (0+255)
  4295  001A  0086               	movwf	6
  4296  001B  0187               	clrf	7
  4297  001C  0801               	movf	1,w
  4298  001D  1D03               	btfss	3,2
  4299  001E  283E               	goto	i1l1841
  4300                           
  4301                           ;interrupts.c: 77: {
  4302                           ;interrupts.c: 78: if(RFcodePlace == 1)
  4303  001F  037B               	decf	_RFcodePlace,w
  4304  0020  1903               	btfsc	3,2
  4305  0021  2889               	goto	L6
  4306                           
  4307                           ;interrupts.c: 85: else if(RFcodePlace == 2)
  4308                           
  4309                           ;interrupts.c: 84: }
  4310                           
  4311                           ;interrupts.c: 83: TMR2 = 0;
  4312                           
  4313                           ;interrupts.c: 82: RFcodePlace++;
  4314                           
  4315                           ;interrupts.c: 81: (PR2 = 8);
  4316                           
  4317                           ;interrupts.c: 79: {
  4318                           ;interrupts.c: 80: (LATC |= 0b00001000);
  4319  0022  3002               	movlw	2
  4320  0023  067B               	xorwf	_RFcodePlace,w
  4321  0024  1903               	btfsc	3,2
  4322  0025  285A               	goto	L4
  4323                           
  4324                           ;interrupts.c: 91: else if(RFcodePlace == 3)
  4325                           
  4326                           ;interrupts.c: 90: }
  4327                           
  4328                           ;interrupts.c: 89: RFcodePlace++;
  4329                           
  4330                           ;interrupts.c: 88: (PR2 = 24);
  4331                           
  4332                           ;interrupts.c: 86: {
  4333                           ;interrupts.c: 87: (LATC &= ~0b00001000);
  4334  0026  3003               	movlw	3
  4335  0027  067B               	xorwf	_RFcodePlace,w
  4336  0028  1903               	btfsc	3,2
  4337  0029  2889               	goto	L6
  4338                           
  4339                           ;interrupts.c: 98: else if(RFcodePlace == 4)
  4340                           
  4341                           ;interrupts.c: 97: }
  4342                           
  4343                           ;interrupts.c: 96: TMR2 = 0;
  4344                           
  4345                           ;interrupts.c: 95: RFcodePlace++;
  4346                           
  4347                           ;interrupts.c: 94: (PR2 = 8);
  4348                           
  4349                           ;interrupts.c: 92: {
  4350                           ;interrupts.c: 93: (LATC |= 0b00001000);
  4351  002A  3004               	movlw	4
  4352  002B  067B               	xorwf	_RFcodePlace,w
  4353  002C  1D03               	btfss	3,2
  4354  002D  2883               	goto	i1l106
  4355                           
  4356                           ;interrupts.c: 99: {
  4357                           ;interrupts.c: 100: (LATC &= ~0b00001000);
  4358  002E  30F7               	movlw	247
  4359  002F  0020               	movlb	0	; select bank0
  4360  0030  00C8               	movwf	??_isr
  4361  0031  0848               	movf	??_isr,w
  4362  0032  0022               	movlb	2	; select bank2
  4363  0033  058E               	andwf	14,f	;volatile
  4364                           
  4365                           ;interrupts.c: 101: (PR2 = 24);
  4366  0034  3018               	movlw	24
  4367  0035  0020               	movlb	0	; select bank0
  4368  0036  009B               	movwf	27	;volatile
  4369                           
  4370                           ;interrupts.c: 102: RFcodePlace = 1;
  4371  0037  01FB               	clrf	_RFcodePlace
  4372  0038  0AFB               	incf	_RFcodePlace,f
  4373                           
  4374                           ;interrupts.c: 103: RFcodeBit++;
  4375  0039  3001               	movlw	1
  4376  003A  00C8               	movwf	??_isr
  4377  003B  0848               	movf	??_isr,w
  4378  003C  07FA               	addwf	_RFcodeBit,f
  4379                           
  4380                           ;interrupts.c: 104: }
  4381  003D  28C0               	goto	i1l1963
  4382  003E                     i1l1841:	
  4383                           ;interrupts.c: 110: }
  4384                           ;interrupts.c: 111: }
  4385                           
  4386                           ;interrupts.c: 109: RFsendFlag = 0;
  4387                           
  4388                           ;interrupts.c: 105: else
  4389                           ;interrupts.c: 106: {
  4390                           ;interrupts.c: 108: RFcodePlace = 1;
  4391                           
  4392                           
  4393                           ;interrupts.c: 112: else if(RFsendCode[RFcodeBit] == 1)
  4394  003E  087A               	movf	_RFcodeBit,w
  4395  003F  3E20               	addlw	(low (_RFsendCode| 0))& (0+255)
  4396  0040  0086               	movwf	6
  4397  0041  0187               	clrf	7
  4398  0042  0301               	decf	1,w
  4399  0043  1D03               	btfss	3,2
  4400  0044  2853               	goto	i1l1883
  4401                           
  4402                           ;interrupts.c: 113: {
  4403                           ;interrupts.c: 114: if(RFcodePlace == 1)
  4404  0045  037B               	decf	_RFcodePlace,w
  4405  0046  1903               	btfsc	3,2
  4406  0047  2865               	goto	L1
  4407                           
  4408                           ;interrupts.c: 120: else if(RFcodePlace == 2)
  4409                           
  4410                           ;interrupts.c: 119: }
  4411                           
  4412                           ;interrupts.c: 118: RFcodePlace++;
  4413                           
  4414                           ;interrupts.c: 117: (PR2 = 24);
  4415                           
  4416                           ;interrupts.c: 115: {
  4417                           ;interrupts.c: 116: (LATC |= 0b00001000);
  4418  0048  3002               	movlw	2
  4419  0049  067B               	xorwf	_RFcodePlace,w
  4420  004A  1D03               	btfss	3,2
  4421  004B  2861               	goto	i1l1901
  4422                           
  4423                           ;interrupts.c: 121: {
  4424                           ;interrupts.c: 122: (LATC &= ~0b00001000);
  4425  004C  30F7               	movlw	247
  4426  004D  0020               	movlb	0	; select bank0
  4427  004E  00C8               	movwf	??_isr
  4428  004F  0848               	movf	??_isr,w
  4429  0050  0022               	movlb	2	; select bank2
  4430  0051  058E               	andwf	14,f	;volatile
  4431  0052  288B               	goto	L3
  4432  0053                     i1l1883:	
  4433                           ;interrupts.c: 146: }
  4434                           ;interrupts.c: 147: }
  4435                           
  4436                           ;interrupts.c: 145: RFsendFlag = 0;
  4437                           
  4438                           ;interrupts.c: 141: else
  4439                           ;interrupts.c: 142: {
  4440                           ;interrupts.c: 144: RFcodePlace = 1;
  4441                           
  4442                           ;interrupts.c: 140: }
  4443                           
  4444                           ;interrupts.c: 139: TMR2 = 0;
  4445                           
  4446                           ;interrupts.c: 138: RFcodeBit++;
  4447                           
  4448                           ;interrupts.c: 137: RFcodePlace = 1;
  4449                           
  4450                           ;interrupts.c: 136: (PR2 = 8);
  4451                           
  4452                           ;interrupts.c: 134: {
  4453                           ;interrupts.c: 135: (LATC &= ~0b00001000);
  4454                           
  4455                           ;interrupts.c: 133: else if(RFcodePlace == 4)
  4456                           
  4457                           ;interrupts.c: 132: }
  4458                           
  4459                           ;interrupts.c: 131: RFcodePlace++;
  4460                           
  4461                           ;interrupts.c: 130: (PR2 = 24);
  4462                           
  4463                           ;interrupts.c: 128: {
  4464                           ;interrupts.c: 129: (LATC |= 0b00001000);
  4465                           
  4466                           ;interrupts.c: 127: else if(RFcodePlace == 3)
  4467                           
  4468                           ;interrupts.c: 126: }
  4469                           
  4470                           ;interrupts.c: 125: TMR2 = 0;
  4471                           
  4472                           ;interrupts.c: 124: RFcodePlace++;
  4473                           
  4474                           ;interrupts.c: 123: (PR2 = 8);
  4475                           
  4476                           
  4477                           ;interrupts.c: 148: else
  4478                           ;interrupts.c: 149: {
  4479                           ;interrupts.c: 151: if(RFcodePlace == 1)
  4480  0053  037B               	decf	_RFcodePlace,w
  4481  0054  1903               	btfsc	3,2
  4482  0055  2889               	goto	L6
  4483                           
  4484                           ;interrupts.c: 158: else if(RFcodePlace == 2)
  4485                           
  4486                           ;interrupts.c: 157: }
  4487                           
  4488                           ;interrupts.c: 156: TMR2 = 0;
  4489                           
  4490                           ;interrupts.c: 155: RFcodePlace++;
  4491                           
  4492                           ;interrupts.c: 154: (PR2 = 8);
  4493                           
  4494                           ;interrupts.c: 152: {
  4495                           ;interrupts.c: 153: (LATC |= 0b00001000);
  4496  0056  3002               	movlw	2
  4497  0057  067B               	xorwf	_RFcodePlace,w
  4498  0058  1D03               	btfss	3,2
  4499  0059  2861               	goto	i1l1901
  4500  005A                     L4:	
  4501                           
  4502                           ;interrupts.c: 159: {
  4503                           ;interrupts.c: 160: (LATC &= ~0b00001000);
  4504  005A  30F7               	movlw	247
  4505  005B  0020               	movlb	0	; select bank0
  4506  005C  00C8               	movwf	??_isr
  4507  005D  0848               	movf	??_isr,w
  4508  005E  0022               	movlb	2	; select bank2
  4509  005F  058E               	andwf	14,f	;volatile
  4510  0060  2867               	goto	L2
  4511  0061                     i1l1901:	
  4512                           ;interrupts.c: 163: }
  4513                           
  4514                           ;interrupts.c: 162: RFcodePlace++;
  4515                           
  4516                           ;interrupts.c: 161: (PR2 = 24);
  4517                           
  4518                           
  4519                           ;interrupts.c: 164: else if(RFcodePlace == 3)
  4520  0061  3003               	movlw	3
  4521  0062  067B               	xorwf	_RFcodePlace,w
  4522  0063  1D03               	btfss	3,2
  4523  0064  286F               	goto	i1l1909
  4524  0065                     L1:	
  4525                           
  4526                           ;interrupts.c: 165: {
  4527                           ;interrupts.c: 166: (LATC |= 0b00001000);
  4528  0065  0022               	movlb	2	; select bank2
  4529  0066  158E               	bsf	14,3	;volatile
  4530  0067                     L2:	
  4531                           
  4532                           ;interrupts.c: 167: (PR2 = 24);
  4533  0067  3018               	movlw	24
  4534  0068  0020               	movlb	0	; select bank0
  4535  0069  009B               	movwf	27	;volatile
  4536                           
  4537                           ;interrupts.c: 168: RFcodePlace++;
  4538  006A  3001               	movlw	1
  4539  006B  00C8               	movwf	??_isr
  4540  006C  0848               	movf	??_isr,w
  4541  006D  07FB               	addwf	_RFcodePlace,f
  4542                           
  4543                           ;interrupts.c: 169: }
  4544  006E  28C0               	goto	i1l1963
  4545  006F                     i1l1909:	
  4546                           
  4547                           ;interrupts.c: 170: else if(RFcodePlace == 4)
  4548  006F  3004               	movlw	4
  4549  0070  067B               	xorwf	_RFcodePlace,w
  4550  0071  1D03               	btfss	3,2
  4551  0072  2883               	goto	i1l106
  4552                           
  4553                           ;interrupts.c: 171: {
  4554                           ;interrupts.c: 172: (LATC &= ~0b00001000);
  4555  0073  30F7               	movlw	247
  4556  0074  0020               	movlb	0	; select bank0
  4557  0075  00C8               	movwf	??_isr
  4558  0076  0848               	movf	??_isr,w
  4559  0077  0022               	movlb	2	; select bank2
  4560  0078  058E               	andwf	14,f	;volatile
  4561                           
  4562                           ;interrupts.c: 173: (PR2 = 8);
  4563  0079  3008               	movlw	8
  4564  007A  0020               	movlb	0	; select bank0
  4565  007B  009B               	movwf	27	;volatile
  4566                           
  4567                           ;interrupts.c: 174: RFcodePlace = 1;
  4568  007C  01FB               	clrf	_RFcodePlace
  4569  007D  0AFB               	incf	_RFcodePlace,f
  4570                           
  4571                           ;interrupts.c: 175: RFcodeBit++;
  4572  007E  3001               	movlw	1
  4573  007F  00C8               	movwf	??_isr
  4574  0080  0848               	movf	??_isr,w
  4575  0081  07FA               	addwf	_RFcodeBit,f
  4576  0082  2892               	goto	i1l1931
  4577  0083                     i1l106:	
  4578                           ;interrupts.c: 177: }
  4579                           
  4580                           ;interrupts.c: 176: TMR2 = 0;
  4581                           
  4582                           
  4583                           ;interrupts.c: 178: else
  4584                           ;interrupts.c: 179: {
  4585                           ;interrupts.c: 181: RFcodePlace = 1;
  4586  0083  01FB               	clrf	_RFcodePlace
  4587  0084  0AFB               	incf	_RFcodePlace,f
  4588  0085  28BF               	goto	i1l1961
  4589  0086                     i1l1923:	
  4590                           ;interrupts.c: 183: }
  4591                           ;interrupts.c: 184: }
  4592                           ;interrupts.c: 185: }
  4593                           ;interrupts.c: 186: }
  4594                           
  4595                           ;interrupts.c: 182: RFsendFlag = 0;
  4596                           
  4597                           
  4598                           ;interrupts.c: 187: else
  4599                           ;interrupts.c: 188: {
  4600                           ;interrupts.c: 190: if(RFcodePlace == 1)
  4601  0086  037B               	decf	_RFcodePlace,w
  4602  0087  1D03               	btfss	3,2
  4603  0088  2894               	goto	i1l1933
  4604  0089                     L6:	
  4605                           
  4606                           ;interrupts.c: 191: {
  4607                           ;interrupts.c: 192: (LATC |= 0b00001000);
  4608  0089  0022               	movlb	2	; select bank2
  4609  008A  158E               	bsf	14,3	;volatile
  4610  008B                     L3:	
  4611                           
  4612                           ;interrupts.c: 193: (PR2 = 8);
  4613  008B  3008               	movlw	8
  4614  008C  0020               	movlb	0	; select bank0
  4615  008D  009B               	movwf	27	;volatile
  4616                           
  4617                           ;interrupts.c: 194: RFcodePlace++;
  4618  008E  3001               	movlw	1
  4619  008F  00C8               	movwf	??_isr
  4620  0090  0848               	movf	??_isr,w
  4621  0091  07FB               	addwf	_RFcodePlace,f
  4622  0092                     i1l1931:	
  4623                           
  4624                           ;interrupts.c: 195: TMR2 = 0;
  4625  0092  019A               	clrf	26	;volatile
  4626                           
  4627                           ;interrupts.c: 196: }
  4628  0093  28C0               	goto	i1l1963
  4629  0094                     i1l1933:	
  4630                           
  4631                           ;interrupts.c: 197: else if( RFcodePlace == 2)
  4632  0094  3002               	movlw	2
  4633  0095  067B               	xorwf	_RFcodePlace,w
  4634  0096  1D03               	btfss	3,2
  4635  0097  28AE               	goto	i1l1949
  4636                           
  4637                           ;interrupts.c: 198: {
  4638                           ;interrupts.c: 199: (LATC &= ~0b00001000);
  4639  0098  30F7               	movlw	247
  4640  0099  0020               	movlb	0	; select bank0
  4641  009A  00C8               	movwf	??_isr
  4642  009B  0848               	movf	??_isr,w
  4643  009C  0022               	movlb	2	; select bank2
  4644  009D  058E               	andwf	14,f	;volatile
  4645                           
  4646                           ;interrupts.c: 200: (PR2 = 240);
  4647  009E  30F0               	movlw	240
  4648  009F  0020               	movlb	0	; select bank0
  4649  00A0  009B               	movwf	27	;volatile
  4650                           
  4651                           ;interrupts.c: 201: RFcodePlace++;
  4652  00A1  3001               	movlw	1
  4653  00A2  00C8               	movwf	??_isr
  4654  00A3  0848               	movf	??_isr,w
  4655  00A4  07FB               	addwf	_RFcodePlace,f
  4656                           
  4657                           ;interrupts.c: 202: Sendcount--;
  4658  00A5  3001               	movlw	1
  4659  00A6  02BB               	subwf	_Sendcount,f	;volatile
  4660                           
  4661                           ;interrupts.c: 203: if(Sendcount)
  4662  00A7  083B               	movf	_Sendcount,w	;volatile
  4663  00A8  1903               	btfsc	3,2
  4664  00A9  28C0               	goto	i1l1963
  4665                           
  4666                           ;interrupts.c: 204: {
  4667                           ;interrupts.c: 206: RFcodePlace = 1;
  4668  00AA  01FB               	clrf	_RFcodePlace
  4669  00AB  0AFB               	incf	_RFcodePlace,f
  4670                           
  4671                           ;interrupts.c: 207: RFcodeBit = 0;
  4672  00AC  01FA               	clrf	_RFcodeBit
  4673                           
  4674                           ;interrupts.c: 208: }
  4675                           ;interrupts.c: 209: }
  4676  00AD  28C0               	goto	i1l1963
  4677  00AE                     i1l1949:	
  4678                           
  4679                           ;interrupts.c: 210: else
  4680                           ;interrupts.c: 211: {
  4681                           ;interrupts.c: 213: Timer4Reset();
  4682  00AE  3187  2767  3180   	fcall	_Timer4Reset
  4683                           
  4684                           ;interrupts.c: 214: PIR2bits.TMR4IF = 0;
  4685  00B1  0020               	movlb	0	; select bank0
  4686  00B2  1092               	bcf	18,1	;volatile
  4687                           
  4688                           ;interrupts.c: 215: TMR4_overflow = 0;
  4689  00B3  01B8               	clrf	_TMR4_overflow	;volatile
  4690  00B4  01B9               	clrf	_TMR4_overflow+1	;volatile
  4691                           
  4692                           ;interrupts.c: 216: Set_Timer4(0xFF);
  4693  00B5  30FF               	movlw	255
  4694  00B6  3187  274D  3180   	fcall	_Set_Timer4
  4695                           
  4696                           ;interrupts.c: 217: Timer4ON();
  4697  00B9  3187  2748  3180   	fcall	_Timer4ON
  4698                           
  4699                           ;interrupts.c: 218: Timer2OFF();
  4700  00BC  3187  2738  3180   	fcall	i1_Timer2OFF
  4701  00BF                     i1l1961:	
  4702                           
  4703                           ;interrupts.c: 219: RFsendFlag = 0;
  4704  00BF  01FC               	clrf	_RFsendFlag	;volatile
  4705  00C0                     i1l1963:	
  4706                           
  4707                           ;interrupts.c: 220: }
  4708                           ;interrupts.c: 221: }
  4709                           ;interrupts.c: 222: PIR1bits.TMR2IF = 0;
  4710  00C0  0020               	movlb	0	; select bank0
  4711  00C1  1091               	bcf	17,1	;volatile
  4712                           
  4713                           ;interrupts.c: 223: if(RFsendFlag)
  4714  00C2  087C               	movf	_RFsendFlag,w	;volatile
  4715  00C3  1903               	btfsc	3,2
  4716  00C4  29CE               	goto	i1l115
  4717                           
  4718                           ;interrupts.c: 224: {
  4719                           ;interrupts.c: 226: PIE1bits.TMR2IE = 1;
  4720  00C5  0021               	movlb	1	; select bank1
  4721  00C6  1491               	bsf	17,1	;volatile
  4722                           
  4723                           ;interrupts.c: 227: }
  4724                           ;interrupts.c: 228: }
  4725  00C7  29CE               	goto	i1l115
  4726  00C8                     i1l77:	
  4727                           
  4728                           ;interrupts.c: 229: else if(PIR1bits.TMR1IF)
  4729  00C8  1C11               	btfss	17,0	;volatile
  4730  00C9  28D7               	goto	i1l116
  4731                           
  4732                           ;interrupts.c: 230: {
  4733                           ;interrupts.c: 232: PIE1bits.TMR1IE = 0;
  4734  00CA  0021               	movlb	1	; select bank1
  4735  00CB  1011               	bcf	17,0	;volatile
  4736                           
  4737                           ;interrupts.c: 233: Reset_Timer1();
  4738  00CC  3187  275A  3180   	fcall	i1_Reset_Timer1
  4739                           
  4740                           ;interrupts.c: 250: Stop_Timer1();
  4741  00CF  3187  2764  3180   	fcall	i1_Stop_Timer1
  4742                           
  4743                           ;interrupts.c: 251: IR_New_Code = 0;
  4744  00D2  01FD               	clrf	_IR_New_Code
  4745                           
  4746                           ;interrupts.c: 252: IRrawCodeNum = 0;
  4747  00D3  01F9               	clrf	_IRrawCodeNum
  4748                           
  4749                           ;interrupts.c: 254: PIR1bits.TMR1IF = 0;
  4750  00D4  0020               	movlb	0	; select bank0
  4751  00D5  1011               	bcf	17,0	;volatile
  4752                           
  4753                           ;interrupts.c: 255: }
  4754  00D6  29CE               	goto	i1l115
  4755  00D7                     i1l116:	
  4756                           
  4757                           ;interrupts.c: 256: else if(IOCCFbits.IOCCF4)
  4758  00D7  0027               	movlb	7	; select bank7
  4759  00D8  1E19               	btfss	25,4	;volatile
  4760  00D9  29A2               	goto	i1l118
  4761                           
  4762                           ;interrupts.c: 257: {
  4763                           ;interrupts.c: 260: IOCCPbits.IOCCP4 = 0;
  4764  00DA  1217               	bcf	23,4	;volatile
  4765                           
  4766                           ;interrupts.c: 262: IOCCNbits.IOCCN4 = 0;
  4767  00DB  1218               	bcf	24,4	;volatile
  4768                           
  4769                           ;interrupts.c: 264: IRrawCount = TMR1L;
  4770  00DC  0020               	movlb	0	; select bank0
  4771  00DD  0816               	movf	22,w	;volatile
  4772  00DE  00C8               	movwf	??_isr
  4773  00DF  01C9               	clrf	??_isr+1
  4774  00E0  0848               	movf	??_isr,w
  4775  00E1  00B4               	movwf	_IRrawCount
  4776  00E2  0849               	movf	??_isr+1,w
  4777  00E3  00B5               	movwf	_IRrawCount+1
  4778                           
  4779                           ;interrupts.c: 265: IRrawCount += ((unsigned int)TMR1H << 8);
  4780  00E4  0817               	movf	23,w	;volatile
  4781  00E5  00C8               	movwf	??_isr
  4782  00E6  01C9               	clrf	??_isr+1
  4783  00E7  0848               	movf	??_isr,w
  4784  00E8  00C9               	movwf	??_isr+1
  4785  00E9  01C8               	clrf	??_isr
  4786  00EA  0848               	movf	??_isr,w
  4787  00EB  07B4               	addwf	_IRrawCount,f
  4788  00EC  0849               	movf	??_isr+1,w
  4789  00ED  3DB5               	addwfc	_IRrawCount+1,f
  4790                           
  4791                           ;interrupts.c: 267: Stop_Timer1();
  4792  00EE  3187  2764  3180   	fcall	i1_Stop_Timer1
  4793                           
  4794                           ;interrupts.c: 268: Reset_Timer1();
  4795  00F1  3187  275A  3180   	fcall	i1_Reset_Timer1
  4796                           
  4797                           ;interrupts.c: 269: PIR1bits.TMR1IF = 0;
  4798  00F4  0020               	movlb	0	; select bank0
  4799  00F5  1011               	bcf	17,0	;volatile
  4800                           
  4801                           ;interrupts.c: 270: Start_Timer1();
  4802  00F6  3187  276A  3180   	fcall	_Start_Timer1
  4803                           
  4804                           ;interrupts.c: 271: PIE1bits.TMR1IE = 1;
  4805  00F9  0021               	movlb	1	; select bank1
  4806  00FA  1411               	bsf	17,0	;volatile
  4807                           
  4808                           ;interrupts.c: 272: if(IRrawCodeNum < 72)
  4809  00FB  3048               	movlw	72
  4810  00FC  0279               	subwf	_IRrawCodeNum,w
  4811  00FD  1803               	skipnc
  4812  00FE  2978               	goto	i1l2015
  4813                           
  4814                           ;interrupts.c: 273: {
  4815                           ;interrupts.c: 275: if(IRrawCodeNum != 0)
  4816  00FF  0879               	movf	_IRrawCodeNum,w
  4817  0100  1903               	btfsc	3,2
  4818  0101  296A               	goto	i1l2007
  4819                           
  4820                           ;interrupts.c: 276: {
  4821                           ;interrupts.c: 288: IRRawCode[IRrawCodeNum - 1] = IRrawCount;
  4822  0102  0879               	movf	_IRrawCodeNum,w
  4823  0103  0020               	movlb	0	; select bank0
  4824  0104  00C8               	movwf	??_isr
  4825  0105  01C9               	clrf	??_isr+1
  4826  0106  35C8               	lslf	??_isr,f
  4827  0107  0DC9               	rlf	??_isr+1,f
  4828  0108  0848               	movf	??_isr,w
  4829  0109  3EFE               	addlw	254
  4830  010A  00CA               	movwf	??_isr+2
  4831  010B  30FF               	movlw	255
  4832  010C  3D49               	addwfc	??_isr+1,w
  4833  010D  00CB               	movwf	??_isr+3
  4834  010E  3060               	movlw	96
  4835  010F  00CC               	movwf	??_isr+4
  4836  0110  3021               	movlw	33
  4837  0111  00CD               	movwf	??_isr+5
  4838  0112  084A               	movf	??_isr+2,w
  4839  0113  074C               	addwf	??_isr+4,w
  4840  0114  0086               	movwf	6
  4841  0115  084B               	movf	??_isr+3,w
  4842  0116  3D4D               	addwfc	??_isr+5,w
  4843  0117  0087               	movwf	7
  4844  0118  0834               	movf	_IRrawCount,w
  4845  0119  3FC0               	movwi [0]fsr1
  4846  011A  0835               	movf	_IRrawCount+1,w
  4847  011B  3FC1               	movwi [1]fsr1
  4848                           
  4849                           ;interrupts.c: 290: if( IRRawCode[IRrawCodeNum - 1] >= 22500 && IRRawCode[IRrawCodeNum -
      +                           1] <= 25000 )
  4850  011C  0879               	movf	_IRrawCodeNum,w
  4851  011D  00C8               	movwf	??_isr
  4852  011E  01C9               	clrf	??_isr+1
  4853  011F  35C8               	lslf	??_isr,f
  4854  0120  0DC9               	rlf	??_isr+1,f
  4855  0121  0848               	movf	??_isr,w
  4856  0122  3EFE               	addlw	254
  4857  0123  00CA               	movwf	??_isr+2
  4858  0124  30FF               	movlw	255
  4859  0125  3D49               	addwfc	??_isr+1,w
  4860  0126  00CB               	movwf	??_isr+3
  4861  0127  3060               	movlw	96
  4862  0128  00CC               	movwf	??_isr+4
  4863  0129  3021               	movlw	33
  4864  012A  00CD               	movwf	??_isr+5
  4865  012B  084A               	movf	??_isr+2,w
  4866  012C  074C               	addwf	??_isr+4,w
  4867  012D  0086               	movwf	6
  4868  012E  084B               	movf	??_isr+3,w
  4869  012F  3D4D               	addwfc	??_isr+5,w
  4870  0130  0087               	movwf	7
  4871  0131  3F40               	moviw [0]fsr1
  4872  0132  00CE               	movwf	??_isr+6
  4873  0133  3F41               	moviw [1]fsr1
  4874  0134  00CF               	movwf	??_isr+7
  4875  0135  3057               	movlw	87
  4876  0136  024F               	subwf	??_isr+7,w
  4877  0137  30E4               	movlw	228
  4878  0138  1903               	skipnz
  4879  0139  024E               	subwf	??_isr+6,w
  4880  013A  1C03               	skipc
  4881  013B  2973               	goto	i1l2013
  4882  013C  0879               	movf	_IRrawCodeNum,w
  4883  013D  00C8               	movwf	??_isr
  4884  013E  01C9               	clrf	??_isr+1
  4885  013F  35C8               	lslf	??_isr,f
  4886  0140  0DC9               	rlf	??_isr+1,f
  4887  0141  0848               	movf	??_isr,w
  4888  0142  3EFE               	addlw	254
  4889  0143  00CA               	movwf	??_isr+2
  4890  0144  30FF               	movlw	255
  4891  0145  3D49               	addwfc	??_isr+1,w
  4892  0146  00CB               	movwf	??_isr+3
  4893  0147  3060               	movlw	96
  4894  0148  00CC               	movwf	??_isr+4
  4895  0149  3021               	movlw	33
  4896  014A  00CD               	movwf	??_isr+5
  4897  014B  084A               	movf	??_isr+2,w
  4898  014C  074C               	addwf	??_isr+4,w
  4899  014D  0086               	movwf	6
  4900  014E  084B               	movf	??_isr+3,w
  4901  014F  3D4D               	addwfc	??_isr+5,w
  4902  0150  0087               	movwf	7
  4903  0151  3F40               	moviw [0]fsr1
  4904  0152  00CE               	movwf	??_isr+6
  4905  0153  3F41               	moviw [1]fsr1
  4906  0154  00CF               	movwf	??_isr+7
  4907  0155  3061               	movlw	97
  4908  0156  024F               	subwf	??_isr+7,w
  4909  0157  30A9               	movlw	169
  4910  0158  1903               	skipnz
  4911  0159  024E               	subwf	??_isr+6,w
  4912  015A  1803               	skipnc
  4913  015B  2973               	goto	i1l2013
  4914                           
  4915                           ;interrupts.c: 291: {
  4916                           ;interrupts.c: 293: IR_New_Code = 2;
  4917  015C  3002               	movlw	2
  4918  015D  00C8               	movwf	??_isr
  4919  015E  0848               	movf	??_isr,w
  4920  015F  00FD               	movwf	_IR_New_Code
  4921                           
  4922                           ;interrupts.c: 294: IRrawCodeNum =0;
  4923  0160  01F9               	clrf	_IRrawCodeNum
  4924                           
  4925                           ;interrupts.c: 295: IRRawCode[0] = 22500;
  4926  0161  3060               	movlw	96
  4927  0162  0086               	movwf	6
  4928  0163  3021               	movlw	33
  4929  0164  0087               	movwf	7
  4930  0165  30E4               	movlw	228
  4931  0166  3FC0               	movwi [0]fsr1
  4932  0167  3057               	movlw	87
  4933  0168  3FC1               	movwi [1]fsr1
  4934                           
  4935                           ;interrupts.c: 297: }
  4936                           ;interrupts.c: 298: }
  4937  0169  2973               	goto	i1l2013
  4938  016A                     i1l2007:	
  4939                           
  4940                           ;interrupts.c: 299: else
  4941                           ;interrupts.c: 300: {
  4942                           ;interrupts.c: 301: TMR1_overflow = 0;
  4943  016A  0020               	movlb	0	; select bank0
  4944  016B  01B6               	clrf	_TMR1_overflow	;volatile
  4945  016C  01B7               	clrf	_TMR1_overflow+1	;volatile
  4946                           
  4947                           ;interrupts.c: 302: Stop_Timer1();
  4948  016D  3187  2764  3180   	fcall	i1_Stop_Timer1
  4949                           
  4950                           ;interrupts.c: 303: Start_Timer1();
  4951  0170  3187  276A  3180   	fcall	_Start_Timer1
  4952  0173                     i1l2013:	
  4953                           
  4954                           ;interrupts.c: 304: }
  4955                           ;interrupts.c: 305: IRrawCodeNum++;
  4956  0173  3001               	movlw	1
  4957  0174  0020               	movlb	0	; select bank0
  4958  0175  00C8               	movwf	??_isr
  4959  0176  0848               	movf	??_isr,w
  4960  0177  07F9               	addwf	_IRrawCodeNum,f
  4961  0178                     i1l2015:	
  4962                           
  4963                           ;interrupts.c: 306: }
  4964                           ;interrupts.c: 307: if(IRrawCodeNum == 72)
  4965  0178  3048               	movlw	72
  4966  0179  0679               	xorwf	_IRrawCodeNum,w
  4967  017A  1D03               	btfss	3,2
  4968  017B  299C               	goto	i1l2029
  4969                           
  4970                           ;interrupts.c: 308: {
  4971                           ;interrupts.c: 311: PIR1bits.TMR1IF = 0;
  4972  017C  0020               	movlb	0	; select bank0
  4973  017D  1011               	bcf	17,0	;volatile
  4974                           
  4975                           ;interrupts.c: 312: PIE1bits.TMR1IE = 0;
  4976  017E  0021               	movlb	1	; select bank1
  4977  017F  1011               	bcf	17,0	;volatile
  4978                           
  4979                           ;interrupts.c: 313: Stop_Timer1();
  4980  0180  3187  2764  3180   	fcall	i1_Stop_Timer1
  4981                           
  4982                           ;interrupts.c: 314: if(!IR_New_Code)
  4983  0183  087D               	movf	_IR_New_Code,w
  4984  0184  1D03               	btfss	3,2
  4985  0185  2998               	goto	i1l2025
  4986                           
  4987                           ;interrupts.c: 315: {
  4988                           ;interrupts.c: 317: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
  4989  0186  3060               	movlw	96
  4990  0187  00F0               	movwf	IRrawToNEC@Raw
  4991  0188  3021               	movlw	33
  4992  0189  00F1               	movwf	IRrawToNEC@Raw+1
  4993  018A  303C               	movlw	(low (_IR_NEC| 0))& (0+255)
  4994  018B  0020               	movlb	0	; select bank0
  4995  018C  00C8               	movwf	??_isr
  4996  018D  0848               	movf	??_isr,w
  4997  018E  00F2               	movwf	IRrawToNEC@NEC
  4998  018F  01F3               	clrf	IRrawToNEC@Invert
  4999  0190  0AF3               	incf	IRrawToNEC@Invert,f
  5000  0191  3182  2200  3180   	fcall	_IRrawToNEC
  5001  0194  0020               	movlb	0	; select bank0
  5002  0195  00C9               	movwf	??_isr+1
  5003  0196  0849               	movf	??_isr+1,w
  5004  0197  00FD               	movwf	_IR_New_Code
  5005  0198                     i1l2025:	
  5006                           
  5007                           ;interrupts.c: 318: }
  5008                           ;interrupts.c: 319: IRrawCodeNum = 0;
  5009  0198  01F9               	clrf	_IRrawCodeNum
  5010                           
  5011                           ;interrupts.c: 320: TMR1_overflow = 0;
  5012  0199  0020               	movlb	0	; select bank0
  5013  019A  01B6               	clrf	_TMR1_overflow	;volatile
  5014  019B  01B7               	clrf	_TMR1_overflow+1	;volatile
  5015  019C                     i1l2029:	
  5016                           
  5017                           ;interrupts.c: 321: }
  5018                           ;interrupts.c: 324: IOCCPbits.IOCCP4 = 1;
  5019  019C  0027               	movlb	7	; select bank7
  5020  019D  1617               	bsf	23,4	;volatile
  5021                           
  5022                           ;interrupts.c: 326: IOCCNbits.IOCCN4 = 1;
  5023  019E  1618               	bsf	24,4	;volatile
  5024                           
  5025                           ;interrupts.c: 328: IOCCFbits.IOCCF4 = 0;
  5026  019F  1219               	bcf	25,4	;volatile
  5027                           
  5028                           ;interrupts.c: 329: INTCONbits.IOCIF = 0;
  5029  01A0  100B               	bcf	11,0	;volatile
  5030                           
  5031                           ;interrupts.c: 330: }
  5032  01A1  29CE               	goto	i1l115
  5033  01A2                     i1l118:	
  5034                           
  5035                           ;interrupts.c: 331: else if(PIR2bits.TMR4IF)
  5036  01A2  0020               	movlb	0	; select bank0
  5037  01A3  1C92               	btfss	18,1	;volatile
  5038  01A4  29C1               	goto	i1l126
  5039                           
  5040                           ;interrupts.c: 332: {
  5041                           ;interrupts.c: 334: Timer4OFF();
  5042  01A5  3187  2725  3180   	fcall	i1_Timer4OFF
  5043                           
  5044                           ;interrupts.c: 335: if(TMR4_overflow < 6)
  5045  01A8  3000               	movlw	0
  5046  01A9  0020               	movlb	0	; select bank0
  5047  01AA  0239               	subwf	_TMR4_overflow+1,w	;volatile
  5048  01AB  3006               	movlw	6
  5049  01AC  1903               	skipnz
  5050  01AD  0238               	subwf	_TMR4_overflow,w	;volatile
  5051  01AE  1803               	skipnc
  5052  01AF  29BC               	goto	i1l2045
  5053                           
  5054                           ;interrupts.c: 336: {
  5055                           ;interrupts.c: 337: Timer4Reset();
  5056  01B0  3187  2767  3180   	fcall	_Timer4Reset
  5057                           
  5058                           ;interrupts.c: 338: Timer4ON();
  5059  01B3  3187  2748  3180   	fcall	_Timer4ON
  5060                           
  5061                           ;interrupts.c: 339: TMR4_overflow++;
  5062  01B6  3001               	movlw	1
  5063  01B7  0020               	movlb	0	; select bank0
  5064  01B8  07B8               	addwf	_TMR4_overflow,f	;volatile
  5065  01B9  3000               	movlw	0
  5066  01BA  3DB9               	addwfc	_TMR4_overflow+1,f	;volatile
  5067                           
  5068                           ;interrupts.c: 340: }
  5069  01BB  29CE               	goto	i1l115
  5070  01BC                     i1l2045:	
  5071                           
  5072                           ;interrupts.c: 341: else
  5073                           ;interrupts.c: 342: {
  5074                           ;interrupts.c: 347: Sent = 1;
  5075  01BC  3001               	movlw	1
  5076  01BD  00C8               	movwf	??_isr
  5077  01BE  0848               	movf	??_isr,w
  5078  01BF  00D3               	movwf	_Sent	;volatile
  5079                           
  5080                           ;interrupts.c: 348: }
  5081                           ;interrupts.c: 349: }
  5082  01C0  29CE               	goto	i1l115
  5083  01C1                     i1l126:	
  5084                           
  5085                           ;interrupts.c: 350: else if(PIR2bits.TMR6IF)
  5086  01C1  1D12               	btfss	18,2	;volatile
  5087  01C2  29CD               	goto	i1l130
  5088                           
  5089                           ;interrupts.c: 351: {
  5090                           ;interrupts.c: 353: Timer6OFF();
  5091  01C3  3187  271E  3180   	fcall	i1_Timer6OFF
  5092                           
  5093                           ;interrupts.c: 354: LATC &= ~(0b00000001 + 0b00000010 + 0b00000100);
  5094  01C6  30F8               	movlw	248
  5095  01C7  0020               	movlb	0	; select bank0
  5096  01C8  00C8               	movwf	??_isr
  5097  01C9  0848               	movf	??_isr,w
  5098  01CA  0022               	movlb	2	; select bank2
  5099  01CB  058E               	andwf	14,f	;volatile
  5100                           
  5101                           ;interrupts.c: 355: }
  5102  01CC  29CE               	goto	i1l115
  5103  01CD                     i1l130:	
  5104                           
  5105                           ;interrupts.c: 356: else
  5106                           ;interrupts.c: 357: {
  5107                           ;interrupts.c: 359: __nop();
  5108  01CD  0000               	nop
  5109  01CE                     i1l115:	
  5110                           
  5111                           ;interrupts.c: 360: }
  5112                           ;interrupts.c: 361: INTCONbits.GIE = 1;
  5113  01CE  178B               	bsf	11,7	;volatile
  5114  01CF  0020               	movlb	0	; select bank0
  5115  01D0  0850               	movf	??_isr+8,w
  5116  01D1  00FF               	movwf	127
  5117  01D2  0009               	retfie
  5118  01D3                     __end_of_isr:	
  5119                           
  5120                           	psect	text23
  5121  071E                     __ptext23:	
  5122 ;; *************** function i1_Timer6OFF *****************
  5123 ;; Defined at:
  5124 ;;		line 261 in file "Timer.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;		None               void
  5131 ;; Registers used:
  5132 ;;		None
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5138 ;;      Params:         0       0       0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_isr
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function i1_Timer6OFF
  5153  071E                     i1_Timer6OFF:	
  5154                           
  5155                           ;Timer.c: 263: T6CONbits.TMR6ON = 0;
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in i1_Timer6OFF: []
  5159  071E  0028               	movlb	8	; select bank8
  5160  071F  111E               	bcf	30,2	;volatile
  5161                           
  5162                           ;Timer.c: 264: PIR2bits.TMR6IF = 0;
  5163  0720  0020               	movlb	0	; select bank0
  5164  0721  1112               	bcf	18,2	;volatile
  5165                           
  5166                           ;Timer.c: 265: PIE2bits.TMR6IE = 0;
  5167  0722  0021               	movlb	1	; select bank1
  5168  0723  1112               	bcf	18,2	;volatile
  5169  0724  0008               	return
  5170  0725                     __end_ofi1_Timer6OFF:	
  5171                           
  5172                           	psect	text24
  5173  0725                     __ptext24:	
  5174 ;; *************** function i1_Timer4OFF *****************
  5175 ;; Defined at:
  5176 ;;		line 197 in file "Timer.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		None
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5190 ;;      Params:         0       0       0       0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_isr
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function i1_Timer4OFF
  5205  0725                     i1_Timer4OFF:	
  5206                           
  5207                           ;Timer.c: 199: T4CONbits.TMR4ON = 0;
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in i1_Timer4OFF: []
  5211  0725  0028               	movlb	8	; select bank8
  5212  0726  1117               	bcf	23,2	;volatile
  5213                           
  5214                           ;Timer.c: 200: PIR2bits.TMR4IF = 0;
  5215  0727  0020               	movlb	0	; select bank0
  5216  0728  1092               	bcf	18,1	;volatile
  5217                           
  5218                           ;Timer.c: 201: PIE2bits.TMR4IE = 0;
  5219  0729  0021               	movlb	1	; select bank1
  5220  072A  1092               	bcf	18,1	;volatile
  5221  072B  0008               	return
  5222  072C                     __end_ofi1_Timer4OFF:	
  5223                           
  5224                           	psect	text25
  5225  0738                     __ptext25:	
  5226 ;; *************** function i1_Timer2OFF *****************
  5227 ;; Defined at:
  5228 ;;		line 153 in file "Timer.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;		None               void
  5235 ;; Registers used:
  5236 ;;		None
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5242 ;;      Params:         0       0       0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_isr
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function i1_Timer2OFF
  5257  0738                     i1_Timer2OFF:	
  5258                           
  5259                           ;Timer.c: 155: T2CONbits.TMR2ON = 0;
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in i1_Timer2OFF: []
  5263  0738  0020               	movlb	0	; select bank0
  5264  0739  111C               	bcf	28,2	;volatile
  5265                           
  5266                           ;Timer.c: 156: PIR1bits.TMR2IF = 0;
  5267  073A  1091               	bcf	17,1	;volatile
  5268                           
  5269                           ;Timer.c: 157: PIE1bits.TMR2IE = 0;
  5270  073B  0021               	movlb	1	; select bank1
  5271  073C  1091               	bcf	17,1	;volatile
  5272  073D  0008               	return
  5273  073E                     __end_ofi1_Timer2OFF:	
  5274                           
  5275                           	psect	text26
  5276  0764                     __ptext26:	
  5277 ;; *************** function i1_Stop_Timer1 *****************
  5278 ;; Defined at:
  5279 ;;		line 81 in file "Timer.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;		None               void
  5286 ;; Registers used:
  5287 ;;		None
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5293 ;;      Params:         0       0       0       0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_isr
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function i1_Stop_Timer1
  5308  0764                     i1_Stop_Timer1:	
  5309                           
  5310                           ;Timer.c: 84: T1CONbits.TMR1ON =0;
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in i1_Stop_Timer1: []
  5314  0764  0020               	movlb	0	; select bank0
  5315  0765  1018               	bcf	24,0	;volatile
  5316  0766  0008               	return
  5317  0767                     __end_ofi1_Stop_Timer1:	
  5318                           
  5319                           	psect	text27
  5320  075A                     __ptext27:	
  5321 ;; *************** function i1_Reset_Timer1 *****************
  5322 ;; Defined at:
  5323 ;;		line 103 in file "Timer.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		status,2
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5337 ;;      Params:         0       0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_isr
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function i1_Reset_Timer1
  5352  075A                     i1_Reset_Timer1:	
  5353                           
  5354                           ;Timer.c: 109: TMR1H = 0;
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in i1_Reset_Timer1: [status,2]
  5358  075A  0020               	movlb	0	; select bank0
  5359  075B  0197               	clrf	23	;volatile
  5360                           
  5361                           ;Timer.c: 110: TMR1L = 0;
  5362  075C  0196               	clrf	22	;volatile
  5363  075D  0008               	return
  5364  075E                     __end_ofi1_Reset_Timer1:	
  5365                           
  5366                           	psect	text28
  5367  0767                     __ptext28:	
  5368 ;; *************** function _Timer4Reset *****************
  5369 ;; Defined at:
  5370 ;;		line 209 in file "Timer.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;		None               void
  5377 ;; Registers used:
  5378 ;;		status,2
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5384 ;;      Params:         0       0       0       0       0       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0
  5387 ;;      Totals:         0       0       0       0       0       0       0       0
  5388 ;;Total ram usage:        0 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_isr
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _Timer4Reset
  5399  0767                     _Timer4Reset:	
  5400                           
  5401                           ;Timer.c: 211: TMR4 = 0;
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in _Timer4Reset: [status,2]
  5405  0767  0028               	movlb	8	; select bank8
  5406  0768  0195               	clrf	21	;volatile
  5407  0769  0008               	return
  5408  076A                     __end_of_Timer4Reset:	
  5409                           
  5410                           	psect	text29
  5411  0748                     __ptext29:	
  5412 ;; *************** function _Timer4ON *****************
  5413 ;; Defined at:
  5414 ;;		line 186 in file "Timer.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;		None               void
  5421 ;; Registers used:
  5422 ;;		None
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5428 ;;      Params:         0       0       0       0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0
  5431 ;;      Totals:         0       0       0       0       0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_isr
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _Timer4ON
  5443  0748                     _Timer4ON:	
  5444                           
  5445                           ;Timer.c: 188: T4CONbits.TMR4ON = 1;
  5446                           
  5447                           ;incstack = 0
  5448                           ; Regs used in _Timer4ON: []
  5449  0748  0028               	movlb	8	; select bank8
  5450  0749  1517               	bsf	23,2	;volatile
  5451                           
  5452                           ;Timer.c: 189: PIE2bits.TMR4IE = 1;
  5453  074A  0021               	movlb	1	; select bank1
  5454  074B  1492               	bsf	18,1	;volatile
  5455  074C  0008               	return
  5456  074D                     __end_of_Timer4ON:	
  5457                           
  5458                           	psect	text30
  5459  076A                     __ptext30:	
  5460 ;; *************** function _Start_Timer1 *****************
  5461 ;; Defined at:
  5462 ;;		line 92 in file "Timer.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;		None               void
  5469 ;; Registers used:
  5470 ;;		None
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5476 ;;      Params:         0       0       0       0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_isr
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function _Start_Timer1
  5491  076A                     _Start_Timer1:	
  5492                           
  5493                           ;Timer.c: 95: T1CONbits.TMR1ON =1;
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in _Start_Timer1: []
  5497  076A  0020               	movlb	0	; select bank0
  5498  076B  1418               	bsf	24,0	;volatile
  5499  076C  0008               	return
  5500  076D                     __end_of_Start_Timer1:	
  5501                           
  5502                           	psect	text31
  5503  074D                     __ptext31:	
  5504 ;; *************** function _Set_Timer4 *****************
  5505 ;; Defined at:
  5506 ;;		line 219 in file "Timer.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  time            1    wreg     unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  time            1    0[COMMON] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;		None               void
  5513 ;; Registers used:
  5514 ;;		wreg
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5520 ;;      Params:         0       0       0       0       0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0
  5523 ;;      Totals:         1       0       0       0       0       0       0       0
  5524 ;;Total ram usage:        1 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_isr
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _Set_Timer4
  5535  074D                     _Set_Timer4:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _Set_Timer4: [wreg]
  5539                           ;Set_Timer4@time stored from wreg
  5540  074D  00F0               	movwf	Set_Timer4@time
  5541                           
  5542                           ;Timer.c: 221: PR4 = time;
  5543  074E  0870               	movf	Set_Timer4@time,w
  5544  074F  0028               	movlb	8	; select bank8
  5545  0750  0096               	movwf	22	;volatile
  5546  0751  0008               	return
  5547  0752                     __end_of_Set_Timer4:	
  5548                           
  5549                           	psect	text32
  5550  0200                     __ptext32:	
  5551 ;; *************** function _IRrawToNEC *****************
  5552 ;; Defined at:
  5553 ;;		line 122 in file "IR.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  Raw             2    0[COMMON] PTR unsigned int 
  5556 ;;		 -> IRRawCode(144), 
  5557 ;;  NEC             1    2[COMMON] PTR unsigned long 
  5558 ;;		 -> IR_NEC(4), 
  5559 ;;  Invert          1    3[COMMON] unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  NECtemp         4    0[BANK0 ] unsigned long 
  5562 ;;  StartBit        1    7[BANK0 ] unsigned char 
  5563 ;;  i               1    6[BANK0 ] unsigned char 
  5564 ;;  first           1    5[BANK0 ] unsigned char 
  5565 ;;  Pause           1    4[BANK0 ] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      unsigned char 
  5568 ;; Registers used:
  5569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5575 ;;      Params:         4       0       0       0       0       0       0       0
  5576 ;;      Locals:         0       8       0       0       0       0       0       0
  5577 ;;      Temps:          5       0       0       0       0       0       0       0
  5578 ;;      Totals:         9       8       0       0       0       0       0       0
  5579 ;;Total ram usage:       17 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_isr
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _IRrawToNEC
  5590  0200                     _IRrawToNEC:	
  5591                           
  5592                           ;IR.c: 150: unsigned char i;
  5593                           ;IR.c: 151: unsigned char Pause =0;
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _IRrawToNEC: [wreg+fsr1l+fsr1h+status,2+status,0]
  5597  0200  0020               	movlb	0	; select bank0
  5598  0201  01C4               	clrf	IRrawToNEC@Pause
  5599                           
  5600                           ;IR.c: 152: unsigned char first =0;
  5601  0202  01C5               	clrf	IRrawToNEC@first
  5602                           
  5603                           ;IR.c: 153: unsigned char StartBit=72;
  5604  0203  3048               	movlw	72
  5605  0204  00F4               	movwf	??_IRrawToNEC
  5606  0205  0874               	movf	??_IRrawToNEC,w
  5607  0206  00C7               	movwf	IRrawToNEC@StartBit
  5608                           
  5609                           ;IR.c: 154: unsigned long NECtemp = 0;
  5610  0207  3000               	movlw	0
  5611  0208  00C3               	movwf	IRrawToNEC@NECtemp+3
  5612  0209  3000               	movlw	0
  5613  020A  00C2               	movwf	IRrawToNEC@NECtemp+2
  5614  020B  3000               	movlw	0
  5615  020C  00C1               	movwf	IRrawToNEC@NECtemp+1
  5616  020D  3000               	movlw	0
  5617  020E  00C0               	movwf	IRrawToNEC@NECtemp
  5618                           
  5619                           ;IR.c: 157: for (i =0; i < 72; i++)
  5620  020F  01C6               	clrf	IRrawToNEC@i
  5621  0210  3048               	movlw	72
  5622  0211  0246               	subwf	IRrawToNEC@i,w
  5623  0212  1803               	btfsc	3,0
  5624  0213  2A7B               	goto	i1l1599
  5625  0214                     i1l1579:	
  5626                           
  5627                           ;IR.c: 158: {
  5628                           ;IR.c: 159: if(Raw[i] >= 22500 && Raw[i] <= 25000 )
  5629  0214  0846               	movf	IRrawToNEC@i,w
  5630  0215  00F4               	movwf	??_IRrawToNEC
  5631  0216  01F5               	clrf	??_IRrawToNEC+1
  5632  0217  35F4               	lslf	??_IRrawToNEC,f
  5633  0218  0DF5               	rlf	??_IRrawToNEC+1,f
  5634  0219  0874               	movf	??_IRrawToNEC,w
  5635  021A  0770               	addwf	IRrawToNEC@Raw,w
  5636  021B  0086               	movwf	6
  5637  021C  0875               	movf	??_IRrawToNEC+1,w
  5638  021D  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5639  021E  0087               	movwf	7
  5640  021F  3F40               	moviw [0]fsr1
  5641  0220  00F6               	movwf	??_IRrawToNEC+2
  5642  0221  3F41               	moviw [1]fsr1
  5643  0222  00F7               	movwf	??_IRrawToNEC+3
  5644  0223  3057               	movlw	87
  5645  0224  0277               	subwf	??_IRrawToNEC+3,w
  5646  0225  30E4               	movlw	228
  5647  0226  1903               	skipnz
  5648  0227  0276               	subwf	??_IRrawToNEC+2,w
  5649  0228  1C03               	skipc
  5650  0229  2A42               	goto	i1l1589
  5651  022A  0846               	movf	IRrawToNEC@i,w
  5652  022B  00F4               	movwf	??_IRrawToNEC
  5653  022C  01F5               	clrf	??_IRrawToNEC+1
  5654  022D  35F4               	lslf	??_IRrawToNEC,f
  5655  022E  0DF5               	rlf	??_IRrawToNEC+1,f
  5656  022F  0874               	movf	??_IRrawToNEC,w
  5657  0230  0770               	addwf	IRrawToNEC@Raw,w
  5658  0231  0086               	movwf	6
  5659  0232  0875               	movf	??_IRrawToNEC+1,w
  5660  0233  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5661  0234  0087               	movwf	7
  5662  0235  3F40               	moviw [0]fsr1
  5663  0236  00F6               	movwf	??_IRrawToNEC+2
  5664  0237  3F41               	moviw [1]fsr1
  5665  0238  00F7               	movwf	??_IRrawToNEC+3
  5666  0239  3061               	movlw	97
  5667  023A  0277               	subwf	??_IRrawToNEC+3,w
  5668  023B  30A9               	movlw	169
  5669  023C  1903               	skipnz
  5670  023D  0276               	subwf	??_IRrawToNEC+2,w
  5671  023E  1803               	skipnc
  5672  023F  2A42               	goto	i1l1589
  5673                           
  5674                           ;IR.c: 160: {
  5675                           ;IR.c: 162: return 2;
  5676  0240  3002               	movlw	2
  5677  0241  0008               	return
  5678  0242                     i1l1589:	
  5679                           ;IR.c: 163: }
  5680                           
  5681                           
  5682                           ;IR.c: 164: else if(Raw[i] >= 2000 && Raw[i] <= 2500 )
  5683  0242  0846               	movf	IRrawToNEC@i,w
  5684  0243  00F4               	movwf	??_IRrawToNEC
  5685  0244  01F5               	clrf	??_IRrawToNEC+1
  5686  0245  35F4               	lslf	??_IRrawToNEC,f
  5687  0246  0DF5               	rlf	??_IRrawToNEC+1,f
  5688  0247  0874               	movf	??_IRrawToNEC,w
  5689  0248  0770               	addwf	IRrawToNEC@Raw,w
  5690  0249  0086               	movwf	6
  5691  024A  0875               	movf	??_IRrawToNEC+1,w
  5692  024B  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5693  024C  0087               	movwf	7
  5694  024D  3F40               	moviw [0]fsr1
  5695  024E  00F6               	movwf	??_IRrawToNEC+2
  5696  024F  3F41               	moviw [1]fsr1
  5697  0250  00F7               	movwf	??_IRrawToNEC+3
  5698  0251  3007               	movlw	7
  5699  0252  0277               	subwf	??_IRrawToNEC+3,w
  5700  0253  30D0               	movlw	208
  5701  0254  1903               	skipnz
  5702  0255  0276               	subwf	??_IRrawToNEC+2,w
  5703  0256  1C03               	skipc
  5704  0257  2A73               	goto	i1l1595
  5705  0258  0846               	movf	IRrawToNEC@i,w
  5706  0259  00F4               	movwf	??_IRrawToNEC
  5707  025A  01F5               	clrf	??_IRrawToNEC+1
  5708  025B  35F4               	lslf	??_IRrawToNEC,f
  5709  025C  0DF5               	rlf	??_IRrawToNEC+1,f
  5710  025D  0874               	movf	??_IRrawToNEC,w
  5711  025E  0770               	addwf	IRrawToNEC@Raw,w
  5712  025F  0086               	movwf	6
  5713  0260  0875               	movf	??_IRrawToNEC+1,w
  5714  0261  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5715  0262  0087               	movwf	7
  5716  0263  3F40               	moviw [0]fsr1
  5717  0264  00F6               	movwf	??_IRrawToNEC+2
  5718  0265  3F41               	moviw [1]fsr1
  5719  0266  00F7               	movwf	??_IRrawToNEC+3
  5720  0267  3009               	movlw	9
  5721  0268  0277               	subwf	??_IRrawToNEC+3,w
  5722  0269  30C5               	movlw	197
  5723  026A  1903               	skipnz
  5724  026B  0276               	subwf	??_IRrawToNEC+2,w
  5725  026C  1803               	skipnc
  5726  026D  2A73               	goto	i1l1595
  5727                           
  5728                           ;IR.c: 165: {
  5729                           ;IR.c: 167: StartBit = i;
  5730  026E  0846               	movf	IRrawToNEC@i,w
  5731  026F  00F4               	movwf	??_IRrawToNEC
  5732  0270  0874               	movf	??_IRrawToNEC,w
  5733  0271  00C7               	movwf	IRrawToNEC@StartBit
  5734                           
  5735                           ;IR.c: 168: break;
  5736  0272  2A7B               	goto	i1l1599
  5737  0273                     i1l1595:	
  5738  0273  3001               	movlw	1
  5739  0274  00F4               	movwf	??_IRrawToNEC
  5740  0275  0874               	movf	??_IRrawToNEC,w
  5741  0276  07C6               	addwf	IRrawToNEC@i,f
  5742  0277  3048               	movlw	72
  5743  0278  0246               	subwf	IRrawToNEC@i,w
  5744  0279  1C03               	skipc
  5745  027A  2A14               	goto	i1l1579
  5746  027B                     i1l1599:	
  5747                           
  5748                           ;IR.c: 169: }
  5749                           ;IR.c: 170: }
  5750                           ;IR.c: 171: if(72 - StartBit < 72)
  5751  027B  0847               	movf	IRrawToNEC@StartBit,w
  5752  027C  00F4               	movwf	??_IRrawToNEC
  5753  027D  01F5               	clrf	??_IRrawToNEC+1
  5754  027E  09F4               	comf	??_IRrawToNEC,f
  5755  027F  09F5               	comf	??_IRrawToNEC+1,f
  5756  0280  0AF4               	incf	??_IRrawToNEC,f
  5757  0281  1903               	skipnz
  5758  0282  0AF5               	incf	??_IRrawToNEC+1,f
  5759  0283  0874               	movf	??_IRrawToNEC,w
  5760  0284  3E48               	addlw	72
  5761  0285  00F6               	movwf	??_IRrawToNEC+2
  5762  0286  3000               	movlw	0
  5763  0287  3D75               	addwfc	??_IRrawToNEC+1,w
  5764  0288  00F7               	movwf	??_IRrawToNEC+3
  5765  0289  0877               	movf	??_IRrawToNEC+3,w
  5766  028A  3A80               	xorlw	128
  5767  028B  00F8               	movwf	??_IRrawToNEC+4
  5768  028C  3080               	movlw	128
  5769  028D  0278               	subwf	??_IRrawToNEC+4,w
  5770  028E  1D03               	skipz
  5771  028F  2A92               	goto	u92_25
  5772  0290  3048               	movlw	72
  5773  0291  0276               	subwf	??_IRrawToNEC+2,w
  5774  0292                     u92_25:	
  5775  0292  1803               	skipnc
  5776  0293  2A96               	goto	i1l1605
  5777                           
  5778                           ;IR.c: 172: {
  5779                           ;IR.c: 174: return 0;
  5780  0294  3000               	movlw	0
  5781  0295  0008               	return
  5782  0296                     i1l1605:	
  5783                           
  5784                           ;IR.c: 175: }
  5785                           ;IR.c: 177: StartBit++;
  5786  0296  3001               	movlw	1
  5787  0297  00F4               	movwf	??_IRrawToNEC
  5788  0298  0874               	movf	??_IRrawToNEC,w
  5789  0299  0020               	movlb	0	; select bank0
  5790  029A  07C7               	addwf	IRrawToNEC@StartBit,f
  5791                           
  5792                           ;IR.c: 178: if(Raw[StartBit] < 875 || Raw[StartBit] > 1375 )
  5793  029B  0847               	movf	IRrawToNEC@StartBit,w
  5794  029C  00F4               	movwf	??_IRrawToNEC
  5795  029D  01F5               	clrf	??_IRrawToNEC+1
  5796  029E  35F4               	lslf	??_IRrawToNEC,f
  5797  029F  0DF5               	rlf	??_IRrawToNEC+1,f
  5798  02A0  0874               	movf	??_IRrawToNEC,w
  5799  02A1  0770               	addwf	IRrawToNEC@Raw,w
  5800  02A2  0086               	movwf	6
  5801  02A3  0875               	movf	??_IRrawToNEC+1,w
  5802  02A4  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5803  02A5  0087               	movwf	7
  5804  02A6  3F40               	moviw [0]fsr1
  5805  02A7  00F6               	movwf	??_IRrawToNEC+2
  5806  02A8  3F41               	moviw [1]fsr1
  5807  02A9  00F7               	movwf	??_IRrawToNEC+3
  5808  02AA  3003               	movlw	3
  5809  02AB  0277               	subwf	??_IRrawToNEC+3,w
  5810  02AC  306B               	movlw	107
  5811  02AD  1903               	skipnz
  5812  02AE  0276               	subwf	??_IRrawToNEC+2,w
  5813  02AF  1C03               	skipc
  5814  02B0  2AC7               	goto	i1l1611
  5815  02B1  0847               	movf	IRrawToNEC@StartBit,w
  5816  02B2  00F4               	movwf	??_IRrawToNEC
  5817  02B3  01F5               	clrf	??_IRrawToNEC+1
  5818  02B4  35F4               	lslf	??_IRrawToNEC,f
  5819  02B5  0DF5               	rlf	??_IRrawToNEC+1,f
  5820  02B6  0874               	movf	??_IRrawToNEC,w
  5821  02B7  0770               	addwf	IRrawToNEC@Raw,w
  5822  02B8  0086               	movwf	6
  5823  02B9  0875               	movf	??_IRrawToNEC+1,w
  5824  02BA  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5825  02BB  0087               	movwf	7
  5826  02BC  3F40               	moviw [0]fsr1
  5827  02BD  00F6               	movwf	??_IRrawToNEC+2
  5828  02BE  3F41               	moviw [1]fsr1
  5829  02BF  00F7               	movwf	??_IRrawToNEC+3
  5830  02C0  3005               	movlw	5
  5831  02C1  0277               	subwf	??_IRrawToNEC+3,w
  5832  02C2  3060               	movlw	96
  5833  02C3  1903               	skipnz
  5834  02C4  0276               	subwf	??_IRrawToNEC+2,w
  5835  02C5  1C03               	skipc
  5836  02C6  2AC9               	goto	i1l1615
  5837  02C7                     i1l1611:	
  5838                           
  5839                           ;IR.c: 179: {
  5840                           ;IR.c: 181: return 0;
  5841  02C7  3000               	movlw	0
  5842  02C8  0008               	return
  5843  02C9                     i1l1615:	
  5844                           
  5845                           ;IR.c: 182: }
  5846                           ;IR.c: 185: StartBit++;
  5847  02C9  3001               	movlw	1
  5848  02CA  00F4               	movwf	??_IRrawToNEC
  5849  02CB  0874               	movf	??_IRrawToNEC,w
  5850  02CC  07C7               	addwf	IRrawToNEC@StartBit,f
  5851                           
  5852                           ;IR.c: 186: for(i = StartBit; i < 72;i++)
  5853  02CD  0847               	movf	IRrawToNEC@StartBit,w
  5854  02CE  00F4               	movwf	??_IRrawToNEC
  5855  02CF  0874               	movf	??_IRrawToNEC,w
  5856  02D0  00C6               	movwf	IRrawToNEC@i
  5857  02D1  3048               	movlw	72
  5858  02D2  0246               	subwf	IRrawToNEC@i,w
  5859  02D3  1803               	btfsc	3,0
  5860  02D4  2C6C               	goto	i1l1717
  5861  02D5                     i1l1623:	
  5862                           
  5863                           ;IR.c: 187: {
  5864                           ;IR.c: 188: if(Raw[StartBit] >= 62 && Raw[StartBit] <= 300 )
  5865  02D5  0847               	movf	IRrawToNEC@StartBit,w
  5866  02D6  00F4               	movwf	??_IRrawToNEC
  5867  02D7  01F5               	clrf	??_IRrawToNEC+1
  5868  02D8  35F4               	lslf	??_IRrawToNEC,f
  5869  02D9  0DF5               	rlf	??_IRrawToNEC+1,f
  5870  02DA  0874               	movf	??_IRrawToNEC,w
  5871  02DB  0770               	addwf	IRrawToNEC@Raw,w
  5872  02DC  0086               	movwf	6
  5873  02DD  0875               	movf	??_IRrawToNEC+1,w
  5874  02DE  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5875  02DF  0087               	movwf	7
  5876  02E0  3F40               	moviw [0]fsr1
  5877  02E1  00F6               	movwf	??_IRrawToNEC+2
  5878  02E2  3F41               	moviw [1]fsr1
  5879  02E3  00F7               	movwf	??_IRrawToNEC+3
  5880  02E4  3000               	movlw	0
  5881  02E5  0277               	subwf	??_IRrawToNEC+3,w
  5882  02E6  303E               	movlw	62
  5883  02E7  1903               	skipnz
  5884  02E8  0276               	subwf	??_IRrawToNEC+2,w
  5885  02E9  1C03               	skipc
  5886  02EA  2B2C               	goto	i1l1647
  5887  02EB  0847               	movf	IRrawToNEC@StartBit,w
  5888  02EC  00F4               	movwf	??_IRrawToNEC
  5889  02ED  01F5               	clrf	??_IRrawToNEC+1
  5890  02EE  35F4               	lslf	??_IRrawToNEC,f
  5891  02EF  0DF5               	rlf	??_IRrawToNEC+1,f
  5892  02F0  0874               	movf	??_IRrawToNEC,w
  5893  02F1  0770               	addwf	IRrawToNEC@Raw,w
  5894  02F2  0086               	movwf	6
  5895  02F3  0875               	movf	??_IRrawToNEC+1,w
  5896  02F4  3D71               	addwfc	IRrawToNEC@Raw+1,w
  5897  02F5  0087               	movwf	7
  5898  02F6  3F40               	moviw [0]fsr1
  5899  02F7  00F6               	movwf	??_IRrawToNEC+2
  5900  02F8  3F41               	moviw [1]fsr1
  5901  02F9  00F7               	movwf	??_IRrawToNEC+3
  5902  02FA  3001               	movlw	1
  5903  02FB  0277               	subwf	??_IRrawToNEC+3,w
  5904  02FC  302D               	movlw	45
  5905  02FD  1903               	skipnz
  5906  02FE  0276               	subwf	??_IRrawToNEC+2,w
  5907  02FF  1803               	skipnc
  5908  0300  2B2C               	goto	i1l1647
  5909                           
  5910                           ;IR.c: 189: {
  5911                           ;IR.c: 190: if(Pause != 3)
  5912  0301  3003               	movlw	3
  5913  0302  0644               	xorwf	IRrawToNEC@Pause,w
  5914  0303  1903               	btfsc	3,2
  5915  0304  2B1F               	goto	i1l1641
  5916                           
  5917                           ;IR.c: 191: {
  5918                           ;IR.c: 192: if(!first)
  5919  0305  0845               	movf	IRrawToNEC@first,w
  5920  0306  1D03               	btfss	3,2
  5921  0307  2B0B               	goto	i1l1633
  5922                           
  5923                           ;IR.c: 193: {
  5924                           ;IR.c: 195: first = 1;
  5925  0308  01C5               	clrf	IRrawToNEC@first
  5926  0309  0AC5               	incf	IRrawToNEC@first,f
  5927                           
  5928                           ;IR.c: 196: }
  5929  030A  2C60               	goto	i1l1713
  5930  030B                     i1l1633:	
  5931                           
  5932                           ;IR.c: 197: else
  5933                           ;IR.c: 198: {
  5934                           ;IR.c: 199: first = 0;
  5935  030B  01C5               	clrf	IRrawToNEC@first
  5936                           
  5937                           ;IR.c: 200: NECtemp <<= 1;
  5938  030C  3001               	movlw	1
  5939  030D                     u100_25:	
  5940  030D  35C0               	lslf	IRrawToNEC@NECtemp,f
  5941  030E  0DC1               	rlf	IRrawToNEC@NECtemp+1,f
  5942  030F  0DC2               	rlf	IRrawToNEC@NECtemp+2,f
  5943  0310  0DC3               	rlf	IRrawToNEC@NECtemp+3,f
  5944  0311  0B89               	decfsz	9,f
  5945  0312  2B0D               	goto	u100_25
  5946                           
  5947                           ;IR.c: 201: if(!Invert)
  5948  0313  0873               	movf	IRrawToNEC@Invert,w
  5949  0314  1D03               	btfss	3,2
  5950  0315  2C60               	goto	i1l1713
  5951                           
  5952                           ;IR.c: 202: {
  5953                           ;IR.c: 203: NECtemp++;
  5954  0316  3001               	movlw	1
  5955  0317  07C0               	addwf	IRrawToNEC@NECtemp,f
  5956  0318  3000               	movlw	0
  5957  0319  3DC1               	addwfc	IRrawToNEC@NECtemp+1,f
  5958  031A  3000               	movlw	0
  5959  031B  3DC2               	addwfc	IRrawToNEC@NECtemp+2,f
  5960  031C  3000               	movlw	0
  5961  031D  3DC3               	addwfc	IRrawToNEC@NECtemp+3,f
  5962                           
  5963                           ;IR.c: 204: }
  5964                           ;IR.c: 206: }
  5965                           ;IR.c: 207: }
  5966  031E  2C60               	goto	i1l1713
  5967  031F                     i1l1641:	
  5968                           
  5969                           ;IR.c: 208: else
  5970                           ;IR.c: 209: {
  5971                           ;IR.c: 211: *NEC = NECtemp;
  5972  031F  0872               	movf	IRrawToNEC@NEC,w
  5973  0320  0086               	movwf	6
  5974  0321  0187               	clrf	7
  5975  0322  0840               	movf	IRrawToNEC@NECtemp,w
  5976  0323  3FC0               	movwi [0]fsr1
  5977  0324  0841               	movf	IRrawToNEC@NECtemp+1,w
  5978  0325  3FC1               	movwi [1]fsr1
  5979  0326  0842               	movf	IRrawToNEC@NECtemp+2,w
  5980  0327  3FC2               	movwi [2]fsr1
  5981  0328  0843               	movf	IRrawToNEC@NECtemp+3,w
  5982  0329  3FC3               	movwi [3]fsr1
  5983                           
  5984                           ;IR.c: 212: return 1;
  5985  032A  3001               	movlw	1
  5986  032B  0008               	return
  5987  032C                     i1l1647:	
  5988                           ;IR.c: 213: }
  5989                           ;IR.c: 214: }
  5990                           
  5991                           
  5992                           ;IR.c: 215: else if(Raw[StartBit] >= 350 && Raw[StartBit] <= 425)
  5993  032C  0847               	movf	IRrawToNEC@StartBit,w
  5994  032D  00F4               	movwf	??_IRrawToNEC
  5995  032E  01F5               	clrf	??_IRrawToNEC+1
  5996  032F  35F4               	lslf	??_IRrawToNEC,f
  5997  0330  0DF5               	rlf	??_IRrawToNEC+1,f
  5998  0331  0874               	movf	??_IRrawToNEC,w
  5999  0332  0770               	addwf	IRrawToNEC@Raw,w
  6000  0333  0086               	movwf	6
  6001  0334  0875               	movf	??_IRrawToNEC+1,w
  6002  0335  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6003  0336  0087               	movwf	7
  6004  0337  3F40               	moviw [0]fsr1
  6005  0338  00F6               	movwf	??_IRrawToNEC+2
  6006  0339  3F41               	moviw [1]fsr1
  6007  033A  00F7               	movwf	??_IRrawToNEC+3
  6008  033B  3001               	movlw	1
  6009  033C  0277               	subwf	??_IRrawToNEC+3,w
  6010  033D  305E               	movlw	94
  6011  033E  1903               	skipnz
  6012  033F  0276               	subwf	??_IRrawToNEC+2,w
  6013  0340  1C03               	skipc
  6014  0341  2B71               	goto	i1l1663
  6015  0342  0847               	movf	IRrawToNEC@StartBit,w
  6016  0343  00F4               	movwf	??_IRrawToNEC
  6017  0344  01F5               	clrf	??_IRrawToNEC+1
  6018  0345  35F4               	lslf	??_IRrawToNEC,f
  6019  0346  0DF5               	rlf	??_IRrawToNEC+1,f
  6020  0347  0874               	movf	??_IRrawToNEC,w
  6021  0348  0770               	addwf	IRrawToNEC@Raw,w
  6022  0349  0086               	movwf	6
  6023  034A  0875               	movf	??_IRrawToNEC+1,w
  6024  034B  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6025  034C  0087               	movwf	7
  6026  034D  3F40               	moviw [0]fsr1
  6027  034E  00F6               	movwf	??_IRrawToNEC+2
  6028  034F  3F41               	moviw [1]fsr1
  6029  0350  00F7               	movwf	??_IRrawToNEC+3
  6030  0351  3001               	movlw	1
  6031  0352  0277               	subwf	??_IRrawToNEC+3,w
  6032  0353  30AA               	movlw	170
  6033  0354  1903               	skipnz
  6034  0355  0276               	subwf	??_IRrawToNEC+2,w
  6035  0356  1803               	skipnc
  6036  0357  2B71               	goto	i1l1663
  6037                           
  6038                           ;IR.c: 216: {
  6039                           ;IR.c: 217: if(first)
  6040  0358  0845               	movf	IRrawToNEC@first,w
  6041  0359  1903               	btfsc	3,2
  6042  035A  2B6F               	goto	i1l1659
  6043                           
  6044                           ;IR.c: 218: {
  6045                           ;IR.c: 220: NECtemp <<= 1;
  6046  035B  3001               	movlw	1
  6047  035C                     u105_25:	
  6048  035C  35C0               	lslf	IRrawToNEC@NECtemp,f
  6049  035D  0DC1               	rlf	IRrawToNEC@NECtemp+1,f
  6050  035E  0DC2               	rlf	IRrawToNEC@NECtemp+2,f
  6051  035F  0DC3               	rlf	IRrawToNEC@NECtemp+3,f
  6052  0360  0B89               	decfsz	9,f
  6053  0361  2B5C               	goto	u105_25
  6054                           
  6055                           ;IR.c: 221: if(Invert)
  6056  0362  0873               	movf	IRrawToNEC@Invert,w
  6057  0363  1903               	btfsc	3,2
  6058  0364  2B6D               	goto	i1l1657
  6059                           
  6060                           ;IR.c: 222: {
  6061                           ;IR.c: 223: NECtemp++;
  6062  0365  3001               	movlw	1
  6063  0366  07C0               	addwf	IRrawToNEC@NECtemp,f
  6064  0367  3000               	movlw	0
  6065  0368  3DC1               	addwfc	IRrawToNEC@NECtemp+1,f
  6066  0369  3000               	movlw	0
  6067  036A  3DC2               	addwfc	IRrawToNEC@NECtemp+2,f
  6068  036B  3000               	movlw	0
  6069  036C  3DC3               	addwfc	IRrawToNEC@NECtemp+3,f
  6070  036D                     i1l1657:	
  6071                           
  6072                           ;IR.c: 224: }
  6073                           ;IR.c: 225: first = 0;
  6074  036D  01C5               	clrf	IRrawToNEC@first
  6075                           
  6076                           ;IR.c: 226: }
  6077  036E  2C60               	goto	i1l1713
  6078  036F                     i1l1659:	
  6079                           
  6080                           ;IR.c: 227: else
  6081                           ;IR.c: 228: {
  6082                           ;IR.c: 230: return 0;
  6083  036F  3000               	movlw	0
  6084  0370  0008               	return
  6085  0371                     i1l1663:	
  6086                           ;IR.c: 231: }
  6087                           ;IR.c: 232: }
  6088                           
  6089                           
  6090                           ;IR.c: 233: else if(Raw[StartBit] == 0 && first == 1)
  6091  0371  0847               	movf	IRrawToNEC@StartBit,w
  6092  0372  00F4               	movwf	??_IRrawToNEC
  6093  0373  01F5               	clrf	??_IRrawToNEC+1
  6094  0374  35F4               	lslf	??_IRrawToNEC,f
  6095  0375  0DF5               	rlf	??_IRrawToNEC+1,f
  6096  0376  0874               	movf	??_IRrawToNEC,w
  6097  0377  0770               	addwf	IRrawToNEC@Raw,w
  6098  0378  0086               	movwf	6
  6099  0379  0875               	movf	??_IRrawToNEC+1,w
  6100  037A  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6101  037B  0087               	movwf	7
  6102  037C  0016               	moviw fsr1++
  6103  037D  0401               	iorwf	1,w
  6104  037E  1D03               	btfss	3,2
  6105  037F  2B90               	goto	i1l1675
  6106  0380  0345               	decf	IRrawToNEC@first,w
  6107  0381  1D03               	btfss	3,2
  6108  0382  2B90               	goto	i1l1675
  6109                           
  6110                           ;IR.c: 234: {
  6111                           ;IR.c: 239: *NEC = NECtemp;
  6112  0383  0872               	movf	IRrawToNEC@NEC,w
  6113  0384  0086               	movwf	6
  6114  0385  0187               	clrf	7
  6115  0386  0840               	movf	IRrawToNEC@NECtemp,w
  6116  0387  3FC0               	movwi [0]fsr1
  6117  0388  0841               	movf	IRrawToNEC@NECtemp+1,w
  6118  0389  3FC1               	movwi [1]fsr1
  6119  038A  0842               	movf	IRrawToNEC@NECtemp+2,w
  6120  038B  3FC2               	movwi [2]fsr1
  6121  038C  0843               	movf	IRrawToNEC@NECtemp+3,w
  6122  038D  3FC3               	movwi [3]fsr1
  6123                           
  6124                           ;IR.c: 240: return 1;
  6125  038E  3001               	movlw	1
  6126  038F  0008               	return
  6127  0390                     i1l1675:	
  6128                           ;IR.c: 241: }
  6129                           
  6130                           
  6131                           ;IR.c: 242: else if(Raw[StartBit] >= 9500 && Raw[StartBit] <= 10500)
  6132  0390  0847               	movf	IRrawToNEC@StartBit,w
  6133  0391  00F4               	movwf	??_IRrawToNEC
  6134  0392  01F5               	clrf	??_IRrawToNEC+1
  6135  0393  35F4               	lslf	??_IRrawToNEC,f
  6136  0394  0DF5               	rlf	??_IRrawToNEC+1,f
  6137  0395  0874               	movf	??_IRrawToNEC,w
  6138  0396  0770               	addwf	IRrawToNEC@Raw,w
  6139  0397  0086               	movwf	6
  6140  0398  0875               	movf	??_IRrawToNEC+1,w
  6141  0399  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6142  039A  0087               	movwf	7
  6143  039B  3F40               	moviw [0]fsr1
  6144  039C  00F6               	movwf	??_IRrawToNEC+2
  6145  039D  3F41               	moviw [1]fsr1
  6146  039E  00F7               	movwf	??_IRrawToNEC+3
  6147  039F  3025               	movlw	37
  6148  03A0  0277               	subwf	??_IRrawToNEC+3,w
  6149  03A1  301C               	movlw	28
  6150  03A2  1903               	skipnz
  6151  03A3  0276               	subwf	??_IRrawToNEC+2,w
  6152  03A4  1C03               	skipc
  6153  03A5  2BBF               	goto	i1l1681
  6154  03A6  0847               	movf	IRrawToNEC@StartBit,w
  6155  03A7  00F4               	movwf	??_IRrawToNEC
  6156  03A8  01F5               	clrf	??_IRrawToNEC+1
  6157  03A9  35F4               	lslf	??_IRrawToNEC,f
  6158  03AA  0DF5               	rlf	??_IRrawToNEC+1,f
  6159  03AB  0874               	movf	??_IRrawToNEC,w
  6160  03AC  0770               	addwf	IRrawToNEC@Raw,w
  6161  03AD  0086               	movwf	6
  6162  03AE  0875               	movf	??_IRrawToNEC+1,w
  6163  03AF  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6164  03B0  0087               	movwf	7
  6165  03B1  3F40               	moviw [0]fsr1
  6166  03B2  00F6               	movwf	??_IRrawToNEC+2
  6167  03B3  3F41               	moviw [1]fsr1
  6168  03B4  00F7               	movwf	??_IRrawToNEC+3
  6169  03B5  3029               	movlw	41
  6170  03B6  0277               	subwf	??_IRrawToNEC+3,w
  6171  03B7  3005               	movlw	5
  6172  03B8  1903               	skipnz
  6173  03B9  0276               	subwf	??_IRrawToNEC+2,w
  6174  03BA  1803               	skipnc
  6175  03BB  2BBF               	goto	i1l1681
  6176                           
  6177                           ;IR.c: 243: {
  6178                           ;IR.c: 245: Pause = 1;
  6179  03BC  01C4               	clrf	IRrawToNEC@Pause
  6180  03BD  0AC4               	incf	IRrawToNEC@Pause,f
  6181                           
  6182                           ;IR.c: 246: }
  6183  03BE  2C60               	goto	i1l1713
  6184  03BF                     i1l1681:	
  6185                           
  6186                           ;IR.c: 247: else if(Pause == 1 && Raw[StartBit] >= 2000 && Raw[StartBit] <= 2500)
  6187  03BF  0344               	decf	IRrawToNEC@Pause,w
  6188  03C0  1D03               	btfss	3,2
  6189  03C1  2BF0               	goto	i1l1689
  6190  03C2  0847               	movf	IRrawToNEC@StartBit,w
  6191  03C3  00F4               	movwf	??_IRrawToNEC
  6192  03C4  01F5               	clrf	??_IRrawToNEC+1
  6193  03C5  35F4               	lslf	??_IRrawToNEC,f
  6194  03C6  0DF5               	rlf	??_IRrawToNEC+1,f
  6195  03C7  0874               	movf	??_IRrawToNEC,w
  6196  03C8  0770               	addwf	IRrawToNEC@Raw,w
  6197  03C9  0086               	movwf	6
  6198  03CA  0875               	movf	??_IRrawToNEC+1,w
  6199  03CB  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6200  03CC  0087               	movwf	7
  6201  03CD  3F40               	moviw [0]fsr1
  6202  03CE  00F6               	movwf	??_IRrawToNEC+2
  6203  03CF  3F41               	moviw [1]fsr1
  6204  03D0  00F7               	movwf	??_IRrawToNEC+3
  6205  03D1  3007               	movlw	7
  6206  03D2  0277               	subwf	??_IRrawToNEC+3,w
  6207  03D3  30D0               	movlw	208
  6208  03D4  1903               	skipnz
  6209  03D5  0276               	subwf	??_IRrawToNEC+2,w
  6210  03D6  1C03               	skipc
  6211  03D7  2BF0               	goto	i1l1689
  6212  03D8  0847               	movf	IRrawToNEC@StartBit,w
  6213  03D9  00F4               	movwf	??_IRrawToNEC
  6214  03DA  01F5               	clrf	??_IRrawToNEC+1
  6215  03DB  35F4               	lslf	??_IRrawToNEC,f
  6216  03DC  0DF5               	rlf	??_IRrawToNEC+1,f
  6217  03DD  0874               	movf	??_IRrawToNEC,w
  6218  03DE  0770               	addwf	IRrawToNEC@Raw,w
  6219  03DF  0086               	movwf	6
  6220  03E0  0875               	movf	??_IRrawToNEC+1,w
  6221  03E1  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6222  03E2  0087               	movwf	7
  6223  03E3  3F40               	moviw [0]fsr1
  6224  03E4  00F6               	movwf	??_IRrawToNEC+2
  6225  03E5  3F41               	moviw [1]fsr1
  6226  03E6  00F7               	movwf	??_IRrawToNEC+3
  6227  03E7  3009               	movlw	9
  6228  03E8  0277               	subwf	??_IRrawToNEC+3,w
  6229  03E9  30C5               	movlw	197
  6230  03EA  1903               	skipnz
  6231  03EB  0276               	subwf	??_IRrawToNEC+2,w
  6232  03EC  1803               	skipnc
  6233  03ED  2BF0               	goto	i1l1689
  6234                           
  6235                           ;IR.c: 248: {
  6236                           ;IR.c: 250: Pause = 2;
  6237  03EE  3002               	movlw	2
  6238  03EF  2C21               	goto	L7
  6239  03F0                     i1l1689:	
  6240                           ;IR.c: 251: }
  6241                           
  6242                           
  6243                           ;IR.c: 252: else if(Pause == 2 && Raw[StartBit] >= 462 && Raw[StartBit] <= 625)
  6244  03F0  3002               	movlw	2
  6245  03F1  0644               	xorwf	IRrawToNEC@Pause,w
  6246  03F2  1D03               	btfss	3,2
  6247  03F3  2C25               	goto	i1l1697
  6248  03F4  0847               	movf	IRrawToNEC@StartBit,w
  6249  03F5  00F4               	movwf	??_IRrawToNEC
  6250  03F6  01F5               	clrf	??_IRrawToNEC+1
  6251  03F7  35F4               	lslf	??_IRrawToNEC,f
  6252  03F8  0DF5               	rlf	??_IRrawToNEC+1,f
  6253  03F9  0874               	movf	??_IRrawToNEC,w
  6254  03FA  0770               	addwf	IRrawToNEC@Raw,w
  6255  03FB  0086               	movwf	6
  6256  03FC  0875               	movf	??_IRrawToNEC+1,w
  6257  03FD  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6258  03FE  0087               	movwf	7
  6259  03FF  3F40               	moviw [0]fsr1
  6260  0400  00F6               	movwf	??_IRrawToNEC+2
  6261  0401  3F41               	moviw [1]fsr1
  6262  0402  00F7               	movwf	??_IRrawToNEC+3
  6263  0403  3001               	movlw	1
  6264  0404  0277               	subwf	??_IRrawToNEC+3,w
  6265  0405  30CE               	movlw	206
  6266  0406  1903               	skipnz
  6267  0407  0276               	subwf	??_IRrawToNEC+2,w
  6268  0408  1C03               	skipc
  6269  0409  2C25               	goto	i1l1697
  6270  040A  0847               	movf	IRrawToNEC@StartBit,w
  6271  040B  00F4               	movwf	??_IRrawToNEC
  6272  040C  01F5               	clrf	??_IRrawToNEC+1
  6273  040D  35F4               	lslf	??_IRrawToNEC,f
  6274  040E  0DF5               	rlf	??_IRrawToNEC+1,f
  6275  040F  0874               	movf	??_IRrawToNEC,w
  6276  0410  0770               	addwf	IRrawToNEC@Raw,w
  6277  0411  0086               	movwf	6
  6278  0412  0875               	movf	??_IRrawToNEC+1,w
  6279  0413  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6280  0414  0087               	movwf	7
  6281  0415  3F40               	moviw [0]fsr1
  6282  0416  00F6               	movwf	??_IRrawToNEC+2
  6283  0417  3F41               	moviw [1]fsr1
  6284  0418  00F7               	movwf	??_IRrawToNEC+3
  6285  0419  3002               	movlw	2
  6286  041A  0277               	subwf	??_IRrawToNEC+3,w
  6287  041B  3072               	movlw	114
  6288  041C  1903               	skipnz
  6289  041D  0276               	subwf	??_IRrawToNEC+2,w
  6290  041E  1803               	skipnc
  6291  041F  2C25               	goto	i1l1697
  6292                           
  6293                           ;IR.c: 253: {
  6294                           ;IR.c: 256: Pause = 3;
  6295  0420  3003               	movlw	3
  6296  0421                     L7:	
  6297  0421  00F4               	movwf	??_IRrawToNEC
  6298  0422  0874               	movf	??_IRrawToNEC,w
  6299  0423  00C4               	movwf	IRrawToNEC@Pause
  6300                           
  6301                           ;IR.c: 257: }
  6302  0424  2C60               	goto	i1l1713
  6303  0425                     i1l1697:	
  6304                           
  6305                           ;IR.c: 258: else if(Raw[StartBit] >= 22500 && Raw[StartBit] <= 25000)
  6306  0425  0847               	movf	IRrawToNEC@StartBit,w
  6307  0426  00F4               	movwf	??_IRrawToNEC
  6308  0427  01F5               	clrf	??_IRrawToNEC+1
  6309  0428  35F4               	lslf	??_IRrawToNEC,f
  6310  0429  0DF5               	rlf	??_IRrawToNEC+1,f
  6311  042A  0874               	movf	??_IRrawToNEC,w
  6312  042B  0770               	addwf	IRrawToNEC@Raw,w
  6313  042C  0086               	movwf	6
  6314  042D  0875               	movf	??_IRrawToNEC+1,w
  6315  042E  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6316  042F  0087               	movwf	7
  6317  0430  3F40               	moviw [0]fsr1
  6318  0431  00F6               	movwf	??_IRrawToNEC+2
  6319  0432  3F41               	moviw [1]fsr1
  6320  0433  00F7               	movwf	??_IRrawToNEC+3
  6321  0434  3057               	movlw	87
  6322  0435  0277               	subwf	??_IRrawToNEC+3,w
  6323  0436  30E4               	movlw	228
  6324  0437  1903               	skipnz
  6325  0438  0276               	subwf	??_IRrawToNEC+2,w
  6326  0439  1C03               	skipc
  6327  043A  2C5E               	goto	i1l1709
  6328  043B  0847               	movf	IRrawToNEC@StartBit,w
  6329  043C  00F4               	movwf	??_IRrawToNEC
  6330  043D  01F5               	clrf	??_IRrawToNEC+1
  6331  043E  35F4               	lslf	??_IRrawToNEC,f
  6332  043F  0DF5               	rlf	??_IRrawToNEC+1,f
  6333  0440  0874               	movf	??_IRrawToNEC,w
  6334  0441  0770               	addwf	IRrawToNEC@Raw,w
  6335  0442  0086               	movwf	6
  6336  0443  0875               	movf	??_IRrawToNEC+1,w
  6337  0444  3D71               	addwfc	IRrawToNEC@Raw+1,w
  6338  0445  0087               	movwf	7
  6339  0446  3F40               	moviw [0]fsr1
  6340  0447  00F6               	movwf	??_IRrawToNEC+2
  6341  0448  3F41               	moviw [1]fsr1
  6342  0449  00F7               	movwf	??_IRrawToNEC+3
  6343  044A  3061               	movlw	97
  6344  044B  0277               	subwf	??_IRrawToNEC+3,w
  6345  044C  30A9               	movlw	169
  6346  044D  1903               	skipnz
  6347  044E  0276               	subwf	??_IRrawToNEC+2,w
  6348  044F  1803               	skipnc
  6349  0450  2C5E               	goto	i1l1709
  6350                           
  6351                           ;IR.c: 259: {
  6352                           ;IR.c: 261: *NEC = NECtemp;
  6353  0451  0872               	movf	IRrawToNEC@NEC,w
  6354  0452  0086               	movwf	6
  6355  0453  0187               	clrf	7
  6356  0454  0840               	movf	IRrawToNEC@NECtemp,w
  6357  0455  3FC0               	movwi [0]fsr1
  6358  0456  0841               	movf	IRrawToNEC@NECtemp+1,w
  6359  0457  3FC1               	movwi [1]fsr1
  6360  0458  0842               	movf	IRrawToNEC@NECtemp+2,w
  6361  0459  3FC2               	movwi [2]fsr1
  6362  045A  0843               	movf	IRrawToNEC@NECtemp+3,w
  6363  045B  3FC3               	movwi [3]fsr1
  6364                           
  6365                           ;IR.c: 262: return 2;
  6366  045C  3002               	movlw	2
  6367  045D  0008               	return
  6368  045E                     i1l1709:	
  6369                           ;IR.c: 263: }
  6370                           
  6371                           
  6372                           ;IR.c: 264: else
  6373                           ;IR.c: 265: {
  6374                           ;IR.c: 266: return 0;
  6375  045E  3000               	movlw	0
  6376  045F  0008               	return
  6377  0460                     i1l1713:	
  6378                           
  6379                           ;IR.c: 267: }
  6380                           ;IR.c: 268: StartBit++;
  6381  0460  3001               	movlw	1
  6382  0461  00F4               	movwf	??_IRrawToNEC
  6383  0462  0874               	movf	??_IRrawToNEC,w
  6384  0463  07C7               	addwf	IRrawToNEC@StartBit,f
  6385  0464  3001               	movlw	1
  6386  0465  00F4               	movwf	??_IRrawToNEC
  6387  0466  0874               	movf	??_IRrawToNEC,w
  6388  0467  07C6               	addwf	IRrawToNEC@i,f
  6389  0468  3048               	movlw	72
  6390  0469  0246               	subwf	IRrawToNEC@i,w
  6391  046A  1C03               	skipc
  6392  046B  2AD5               	goto	i1l1623
  6393  046C                     i1l1717:	
  6394                           
  6395                           ;IR.c: 269: }
  6396                           ;IR.c: 271: return 0;
  6397  046C  3000               	movlw	0
  6398  046D  0008               	return
  6399  046E                     __end_of_IRrawToNEC:	
  6400  007E                     btemp	set	126	;btemp
  6401  007E                     wtemp	set	126
  6402  007E                     wtemp0	set	126
  6403  0080                     wtemp1	set	128
  6404  0082                     wtemp2	set	130
  6405  0084                     wtemp3	set	132
  6406  0086                     wtemp4	set	134
  6407  0088                     wtemp5	set	136
  6408  007F                     wtemp6	set	127
  6409  007E                     ttemp	set	126
  6410  007E                     ttemp0	set	126
  6411  0081                     ttemp1	set	129
  6412  0084                     ttemp2	set	132
  6413  0087                     ttemp3	set	135
  6414  007F                     ttemp4	set	127
  6415  007E                     ltemp	set	126
  6416  007E                     ltemp0	set	126
  6417  0082                     ltemp1	set	130
  6418  0086                     ltemp2	set	134
  6419  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    9
    Data        15
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     17      64
    BANK1            80     15      15
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    UseIRCode@Code	PTR unsigned char  size(1) Largest target is 1
		 -> IR_New_Code(COMMON[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(1) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BIGRAM[144]), 

    SendRF@Code	PTR unsigned char  size(1) Largest target is 12
		 -> ChannelF(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_IRrawToNEC

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_IRrawToNEC

Critical Paths under _main in BANK1

    _main->_UseIRCode
    _UseIRCode->_SendRF

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1130
                                             13 BANK1      2     2      0
                _ConfigureOscillator
                            _InitApp
                          _UseIRCode
                            _delayUS
                            _init_IR
                        _init_Timers
 ---------------------------------------------------------------------------------
 (1) _init_Timers                                          0     0      0       0
                         _Timer1Init
                         _Timer2Init
                         _Timer4Init
                         _Timer6Init
 ---------------------------------------------------------------------------------
 (2) _Timer6Init                                           0     0      0       0
                          _Timer6OFF
 ---------------------------------------------------------------------------------
 (2) _Timer4Init                                           0     0      0       0
                          _Timer4OFF
 ---------------------------------------------------------------------------------
 (3) _Timer4OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer2Init                                           0     0      0       0
                          _Timer2OFF
 ---------------------------------------------------------------------------------
 (3) _Timer2OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IR                                              0     0      0       0
                          _Enable_IR
                         _Timer1Init
 ---------------------------------------------------------------------------------
 (2) _Timer1Init                                           0     0      0       0
                       _Reset_Timer1
                        _Stop_Timer1
 ---------------------------------------------------------------------------------
 (3) _Stop_Timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reset_Timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Enable_IR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayUS                                             10     6      4     266
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                            7     3      4     793
                                              6 BANK1      7     3      4
                             _SendRF
                         _Set_Timer6
                          _Timer6OFF
                           _Timer6ON
                        _Timer6Reset
 ---------------------------------------------------------------------------------
 (2) _Timer6Reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer6ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer6OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_Timer6                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SendRF                                               6     4      2     574
                                              0 BANK1      6     4      2
                           _Timer2ON
 ---------------------------------------------------------------------------------
 (3) _Timer2ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  9     9      0    1501
                                              8 BANK0      9     9      0
                         _IRrawToNEC
                         _Set_Timer4
                       _Start_Timer1
                           _Timer4ON
                        _Timer4Reset
                     i1_Reset_Timer1
                      i1_Stop_Timer1
                        i1_Timer2OFF
                        i1_Timer4OFF
                        i1_Timer6OFF
 ---------------------------------------------------------------------------------
 (5) i1_Timer6OFF                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_Timer4OFF                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_Timer2OFF                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_Stop_Timer1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_Reset_Timer1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timer4Reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timer4ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Start_Timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Set_Timer4                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _IRrawToNEC                                          17    13      4    1479
                                              0 COMMON     9     5      4
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _UseIRCode
     _SendRF
       _Timer2ON
     _Set_Timer6
     _Timer6OFF
     _Timer6ON
     _Timer6Reset
   _delayUS
   _init_IR
     _Enable_IR
     _Timer1Init
       _Reset_Timer1
       _Stop_Timer1
   _init_Timers
     _Timer1Init
       _Reset_Timer1
       _Stop_Timer1
     _Timer2Init
       _Timer2OFF
     _Timer4Init
       _Timer4OFF
     _Timer6Init
       _Timer6OFF

 _isr (ROOT)
   _IRrawToNEC
   _Set_Timer4
   _Start_Timer1
   _Timer4ON
   _Timer4Reset
   i1_Reset_Timer1
   i1_Stop_Timer1
   i1_Timer2OFF
   i1_Timer4OFF
   i1_Timer6OFF

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      F       F       8       18.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Mar 17 16:25:43 2015

                 __CFG_CP$OFF 0000                   __CFG_LVP$ON 0000                           l161 04BA  
                         l159 0484                           l195 0564                           l197 057D  
                         l454 0547                           _PR2 001B                           _PR4 0416  
                         _PR6 041D                           _isr 0004                    _IRrawToNEC 0200  
                  _IRrawCount 0034                  __CFG_BORV$LO 0000                           wreg 0009  
                        l2223 0549                          l2153 04EE                          l2217 0529  
                        l2209 0587                          l2155 0505                          l2147 04ED  
                        l2261 04B5                          l2167 0515                          l2177 05DB  
                        ?_isr 0070                          _LATC 010E                          u1693 0576  
                        i1l77 00C8                          _TMR2 001A                          _TMR4 0415  
                        _TMR6 041C                 i1_Stop_Timer1 0764                  __CFG_WRT$OFF 0000  
                        _Sent 0053                          _main 046E                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
                  _RFsendCode 0020                    _RFsendFlag 007C                 __CFG_BOREN$ON 0000  
                        ltemp 007E                   _RFcodePlace 007B                          start 01D3  
                        ttemp 007E                          wtemp 007E                 __CFG_IESO$OFF 0000  
               __CFG_MCLRE$ON 0000               __end_of_InitApp 05C6                         ??_isr 0048  
           IRrawToNEC@NECtemp 0040                  ?_init_Timers 0070               __end_of_Version 0709  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         i1l130 01CD  
                       i1l106 0083                         i1l115 01CE                         i1l116 00D7  
                       i1l126 01C1                         i1l118 01A2                         _TMR1H 0017  
                       _TMR1L 0016                         _PORTC 000E                         u92_25 0292  
         _ConfigureOscillator 05D5               __end_of_delayUS 0590                __CFG_FCMEN$OFF 0000  
                  SendRF@Code 00A4                  _IRrawCodeNum 0079               __end_of_init_IR 0717  
                  SendRF@size 00A0                ?i1_Stop_Timer1 0070                         main@i 00AE  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F          ?_ConfigureOscillator 0070  
             __initialization 01D5                  __end_of_main 04D2                __CFG_LPBOR$OFF 0000  
                      ??_main 00AD            __size_of_Enable_IR 0004            SendRF@RepeatAmount 00A1  
              __CFG_PLLEN$OFF 0000              __end_of_Timer2ON 0748              __end_of_Timer4ON 074D  
            __end_of_Timer6ON 0743                   ?_IRrawToNEC 0070                __CFG_ZCDDIS$ON 0000  
                      _ANSELC 018E                        _HFIOFS 04D0                        u100_25 030D  
                      i1l2013 0173                        i1l2007 016A                        i1l2015 0178  
                      i1l2025 0198                        i1l2045 01BC                        i1l2029 019C  
                      i1l1611 02C7                        i1l1605 0296                        i1l1623 02D5  
                      i1l1615 02C9                        i1l1713 0460                        i1l1633 030B  
                      i1l1641 031F                        i1l1709 045E                        u105_25 035C  
                      i1l1717 046C                        i1l1901 0061                        i1l1663 0371  
                      i1l1647 032C                        i1l1681 03BF                        i1l1657 036D  
                      i1l1841 003E                        i1l1675 0390                        i1l1659 036F  
                      i1l1595 0273                        i1l1579 0214                        i1l1931 0092  
                      i1l1923 0086                        i1l1589 0242                        i1l1933 0094  
                      i1l1909 006F                        i1l1599 027B                        i1l1697 0425  
                      i1l1689 03F0                        i1l1961 00BF                        i1l1883 0053  
                      i1l1963 00C0                        i1l1949 00AE                        _IR_NEC 003C  
                  _Set_Timer4 074D                    _Set_Timer6 0732                     ??_InitApp 00A0  
       ??_ConfigureOscillator 00A0                __CFG_PWRTE$OFF 0000                 ??_Timer4Reset 0070  
                      _SendRF 04D2                 ??_Timer6Reset 00A0                    _Timer1Init 05A4  
                  _Timer2Init 0590                    _Timer4Init 0612                    _Timer6Init 0606  
              __CFG_STVREN$ON 0000                     ??_delayUS 00A4            __size_of_UseIRCode 0044  
          __size_of_Timer2OFF 0006              ??i1_Reset_Timer1 0070            __size_of_Timer4OFF 0007  
          __size_of_Timer6OFF 0007                     ??_init_IR 00A0            IRrawToNEC@StartBit 0047  
             ??i1_Stop_Timer1 0070                  _BlueLEDcount 0051                  ?i1_Timer2OFF 0070  
                ?i1_Timer4OFF 0070                  ?i1_Timer6OFF 0070       __end_of__initialization 01FD  
           __end_of_Enable_IR 075A           __size_of_IRrawToNEC 026E                __pcstackCOMMON 0070  
                __pidataBANK0 05C6           __end_of_Timer4Reset 076A           __end_of_Timer6Reset 0764  
        __size_of_init_Timers 000C                 ?_Reset_Timer1 0070                 ??_Stop_Timer1 00A0  
                  __pbssBANK0 0020                   ?_Set_Timer4 0070                   ?_Set_Timer6 0070  
           __end_of_UseIRCode 055B             __end_of_Timer2OFF 0732             __end_of_Timer4OFF 0710  
           __end_of_Timer6OFF 071E                   ?_Timer1Init 0070                       ?_SendRF 00A0  
                 ?_Timer2Init 0070                   ?_Timer4Init 0070                   ?_Timer6Init 0070  
                   ?_Timer2ON 0070                     ?_Timer4ON 0070                     ?_Timer6ON 0070  
                  __pmaintext 046E                    __pintentry 0004                ??_Reset_Timer1 00A0  
               UseIRCode@Code 00AC                       _OSCSTAT 009A                       _IRfault 003A  
                     SendRF@i 00A5                       _InitApp 05B6           __end_of_Stop_Timer1 0761  
                  ??_Timer2ON 00A0                    ??_Timer4ON 0070                    ??_Timer6ON 00A0  
                 _Timer4Reset 0767               __size_of_SendRF 0045                   _Timer6Reset 0761  
                     _Version 0700                Set_Timer4@time 0070                Set_Timer6@time 00A0  
                     _delayUS 055B                       __ptext1 05FA                       __ptext2 0606  
                     __ptext3 0612                       __ptext4 0709                       __ptext5 0590  
                     __ptext6 072C                       __ptext7 0710                       __ptext8 05A4  
                     __ptext9 075E           __size_of_Set_Timer4 0005           __size_of_Set_Timer6 0006  
                   _T1CONbits 0018                       _init_IR 0710                  ??_IRrawToNEC 0074  
                   _T2CONbits 001C                  __size_of_isr 01CF                     _T4CONbits 0417  
                   _IOCCFbits 0399                     _T6CONbits 041E                     _IOCCNbits 0398  
                   _IOCCPbits 0397           __size_of_Timer1Init 0012           __size_of_Timer2Init 0014  
         __size_of_Timer4Init 000C           __size_of_Timer6Init 000C                       clrloop0 05E3  
        end_of_initialization 01FD                       init_ram 05EE                       initloop 05EF  
        __size_ofi1_Timer2OFF 0006          __size_ofi1_Timer4OFF 0007          __size_ofi1_Timer6OFF 0007  
          __end_of_IRrawToNEC 046E                  __pstringtext 0700                     _IRRawCode 2160  
               ?_Start_Timer1 0070              __CFG_FOSC$INTOSC 0000                     _TRISCbits 008E  
 __end_of_ConfigureOscillator 05E2                   _Stop_Timer1 075E                     _RFcodeBit 007A  
                 _CCP1CONbits 0293                   _CCP2CONbits 029A          __end_of_Reset_Timer1 0756  
                   _Enable_IR 0756                __end_of_SendRF 0517                ??_Start_Timer1 0070  
            IRrawToNEC@Invert 0073           start_initialization 01D5                   __end_of_isr 01D3  
       __end_ofi1_Stop_Timer1 0767                  ??_Set_Timer4 0070                  ??_Set_Timer6 00A0  
                   _Sendcount 003B                  ??_Timer1Init 00A0                  ??_Timer2Init 00A0  
                   _UseIRCode 0517                  ??_Timer4Init 00A0                     _Timer2OFF 072C  
                    ??_SendRF 00A2                     _Timer4OFF 0709                  ??_Timer6Init 00A0  
                   _Timer6OFF 0717                    ?_Enable_IR 0070             __size_of_Timer2ON 0005  
           __size_of_Timer4ON 0005             __size_of_Timer6ON 0005                   __pdataBANK0 0051  
               ??_init_Timers 00A0            __end_of_Set_Timer4 0752            __end_of_Set_Timer6 0738  
                 __pbssBIGRAM 2160                   __pbssCOMMON 0079                     ___latbits 0001  
               __pcstackBANK0 0040                 __pcstackBANK1 00A0            __end_of_Timer1Init 05B6  
          __end_of_Timer2Init 05A4            __end_of_Timer4Init 061E            __end_of_Timer6Init 0612  
     __size_ofi1_Reset_Timer1 0004                      ?_InitApp 0070                    ?_UseIRCode 00A6  
                  ?_Timer2OFF 0070                    ?_Timer4OFF 0070                    ?_Timer6OFF 0070  
                ?_Timer4Reset 0070                  ?_Timer6Reset 0070                   IRrawToNEC@i 0046  
            __CFG_PPS1WAY$OFF 0000                  UseIRCode@NEC 00A6                      ?_delayUS 00A0  
                    ?_init_IR 0070                 IRrawToNEC@NEC 0072                 IRrawToNEC@Raw 0070  
         __end_of_init_Timers 0606                     delayUS@US 00A0         __size_of_Reset_Timer1 0004  
        __end_of_Start_Timer1 076D                     clear_ram0 05E2                      _PIE1bits 0091  
                    _PIE2bits 0092                      _PIR1bits 0011                      _PIR2bits 0012  
                 ??_Enable_IR 00A0                      _ChannelF 0054                  _Reset_Timer1 0752  
                ?_Stop_Timer1 0070               IRrawToNEC@Pause 0044                 ??i1_Timer2OFF 0070  
               ??i1_Timer4OFF 0070                 ??i1_Timer6OFF 0070               IRrawToNEC@first 0045  
            __size_of_InitApp 0010                   ??_UseIRCode 00AA                   ??_Timer2OFF 00A0  
                 ??_Timer4OFF 00A0                   ??_Timer6OFF 00A0                      _Timer2ON 0743  
                    _Timer4ON 0748                      _Timer6ON 073E                   _init_Timers 05FA  
            __size_of_delayUS 0035              __size_of_init_IR 0007                 _TMR1_overflow 0036  
                    __ptext10 0752                      __ptext11 0756                      __ptext20 05B6  
                    __ptext12 055B                      __ptext21 05D5                      __ptext13 0517  
                    __ptext30 076A                      __ptext14 0761                      __ptext31 074D  
                    __ptext23 071E                      __ptext15 073E                      __ptext32 0200  
                    __ptext24 0725                      __ptext16 0717                      __ptext25 0738  
                    __ptext17 0732                      __ptext26 0764                      __ptext18 04D2  
                    __ptext27 075A                      __ptext19 0743                      __ptext28 0767  
                    __ptext29 0748                i1_Reset_Timer1 075A                 __size_of_main 0064  
                    delayUS@i 00A5                      delayUS@j 00A9                 _TMR4_overflow 0038  
__size_of_ConfigureOscillator 000D           __end_ofi1_Timer2OFF 073E           __end_ofi1_Timer4OFF 072C  
         __end_ofi1_Timer6OFF 0725          __size_of_Timer4Reset 0003          __size_of_Timer6Reset 0003  
                  _INTCONbits 000B        __end_ofi1_Reset_Timer1 075E         __size_of_Start_Timer1 0003  
                    intlevel1 0000             __CFG_CLKOUTEN$OFF 0000                   _SLRCONCbits 030E  
                  _OSCCONbits 0099                   _IR_New_Code 007D        __size_ofi1_Stop_Timer1 0003  
                _Start_Timer1 076A               ?i1_Reset_Timer1 0070                   i1_Timer2OFF 0738  
                 i1_Timer4OFF 0725                   i1_Timer6OFF 071E          __size_of_Stop_Timer1 0003  
